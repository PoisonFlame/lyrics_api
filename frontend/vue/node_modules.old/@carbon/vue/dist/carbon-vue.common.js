module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "005d":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tabs/cv-tabs-skeleton.vue?vue&type=template&id=7ce55d8e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-tabs bx--tabs bx--skeleton"},[_c('div',{staticClass:"bx--tabs-trigger"},[_c('div',{staticClass:"bx--tabs-trigger-text"},[_vm._v(" ")]),_c('svg',{attrs:{"width":"10","height":"5","viewBox":"0 0 10 5","fill-rule":"evenodd"}},[_c('path',{attrs:{"d":"M10 0L5 5 0 0z"}})])]),_vm._m(0)])}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"bx--tabs__nav bx--tabs__nav--hidden"},[_c('li',{staticClass:"cv-tab bx--tabs__nav-item bx--tabs__nav-item--selected"},[_c('div',{staticClass:"bx--tabs__nav-link"},[_vm._v(" ")])]),_c('li',{staticClass:"cv-tab bx--tabs__nav-item"},[_c('div',{staticClass:"bx--tabs__nav-link"},[_vm._v(" ")])]),_c('li',{staticClass:"cv-tab bx--tabs__nav-item"},[_c('div',{staticClass:"bx--tabs__nav-link"},[_vm._v(" ")])]),_c('li',{staticClass:"cv-tab bx--tabs__nav-item"},[_c('div',{staticClass:"bx--tabs__nav-link"},[_vm._v(" ")])])])}]


// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tabs-skeleton.vue?vue&type=template&id=7ce55d8e&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tabs/cv-tabs-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_tabs_skeletonvue_type_script_lang_js_ = ({
  name: 'CvTabsSkeleton',
});

// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tabs-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tabs_cv_tabs_skeletonvue_type_script_lang_js_ = (cv_tabs_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tabs-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tabs_cv_tabs_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_tabs_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "03f9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-overflow-menu/cv-overflow-menu-item.vue?vue&type=template&id=661dad8b&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-overflow-menu-item bx--overflow-menu-options__option",class:{
    'bx--overflow-menu-options__option--disabled': _vm.disabled,
    'bx--overflow-menu-options__option--danger': _vm.danger,
  },on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.onEsc($event)}}},[_c('button',_vm._g({staticClass:"bx--overflow-menu-options__btn",attrs:{"type":"button","data-floating-menu-primary-focus":_vm.primaryFocus,"disabled":_vm.disabled},on:{"click":_vm.onClick}},_vm.$listeners),[_c('span',{staticClass:"bx--overflow-menu-options__option-content"},[_vm._t("default")],2)])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu-item.vue?vue&type=template&id=661dad8b&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-overflow-menu/cv-overflow-menu-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_overflow_menu_itemvue_type_script_lang_js_ = ({
  name: 'CvOverflowMenuItem',
  props: {
    primaryFocus: Boolean,
    disabled: Boolean,
    danger: Boolean,
  },
  methods: {
    onClick() {
      this.$parent.$emit('cv:click');
    },
    onEsc() {
      this.$parent.$emit('cv:close');
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_overflow_menu_cv_overflow_menu_itemvue_type_script_lang_js_ = (cv_overflow_menu_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_overflow_menu_cv_overflow_menu_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_overflow_menu_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "0539":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-date-picker/cv-date-picker.vue?vue&type=template&id=71bd2208&
var cv_date_pickervue_type_template_id_71bd2208_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-wrapper',{staticClass:"cv-date-picker bx--form-item",attrs:{"tag-type":_vm.formItem ? 'div' : ''}},[_c('div',{ref:"date-picker",staticClass:"bx--date-picker",class:[_vm.kindClasses, { 'bx--date-picker--light': _vm.theme === 'light', 'cv-date-pciker': !_vm.formItem }],attrs:{"data-date-picker":['single', 'range'].includes(_vm.kind),"data-date-picker-type":_vm.kind}},[_c('div',{class:{
        'bx--date-picker-container': ['single', 'range'].includes(_vm.kind),
        'bx--date-picker--nolabel': _vm.getDateLabel !== undefined,
      },on:{"change":_vm.onChange}},[(_vm.getDateLabel.length > 0)?_c('label',{staticClass:"bx--label",attrs:{"for":(_vm.uid + "-input-1")}},[_vm._v(_vm._s(_vm.getDateLabel))]):_vm._e(),_c('div',{staticClass:"bx--date-picker-input__wrapper"},[_c('input',{ref:"date",staticClass:"bx--date-picker__input",attrs:{"data-invalid":_vm.isInvalid,"type":"text","id":(_vm.uid + "-input-1"),"pattern":_vm.pattern,"placeholder":_vm.placeholder,"data-date-picker-input":"","data-date-picker-input-from":_vm.kind === 'range'}}),(['single', 'range'].includes(_vm.kind))?_c('Calendar16',{staticClass:"bx--date-picker__icon",attrs:{"data-date-picker-icon":""},on:{"click":function($event){return _vm.cal.open()}}}):_vm._e()],1),(_vm.isInvalid)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage || _vm.invalidDateMessage))])],2):_vm._e()]),(_vm.kind === 'range')?_c('div',{class:{ 'bx--date-picker-container': _vm.kind === 'range' }},[(_vm.getDateEndLabel.length > 0)?_c('label',{staticClass:"bx--label",attrs:{"for":(_vm.uid + "-input-2")}},[_vm._v(_vm._s(_vm.getDateEndLabel))]):_vm._e(),_c('div',{staticClass:"bx--date-picker-input__wrapper"},[_c('input',{ref:"todate",staticClass:"bx--date-picker__input",attrs:{"type":"text","id":(_vm.uid + "-input-2"),"pattern":_vm.pattern,"placeholder":_vm.placeholder,"data-date-picker-input":"","data-date-picker-input-to":_vm.kind === 'range'}}),_c('Calendar16',{staticClass:"bx--date-picker__icon",attrs:{"data-date-picker-icon":""},on:{"click":function($event){return _vm.openTodateCal()}}})],1)]):_vm._e()])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-date-picker/cv-date-picker.vue?vue&type=template&id=71bd2208&

// EXTERNAL MODULE: ./node_modules/flatpickr/dist/flatpickr.js
var flatpickr = __webpack_require__("cf06");
var flatpickr_default = /*#__PURE__*/__webpack_require__.n(flatpickr);

// EXTERNAL MODULE: ./node_modules/flatpickr/dist/l10n/index.js
var l10n = __webpack_require__("cbfa");
var l10n_default = /*#__PURE__*/__webpack_require__.n(l10n);

// EXTERNAL MODULE: ./node_modules/flatpickr/dist/plugins/rangePlugin.js
var rangePlugin = __webpack_require__("964d");
var rangePlugin_default = /*#__PURE__*/__webpack_require__.n(rangePlugin);

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/calendar/16.js



var virtual_Calendar16 = {
  name: 'Calendar16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M26,4h-4V2h-2v2h-8V2h-2v2H6C4.9,4,4,4.9,4,6v20c0,1.1,0.9,2,2,2h20c1.1,0,2-0.9,2-2V6C28,4.9,27.1,4,26,4z M26,26H6V12h20\tV26z M26,10H6V6h4v2h2V6h8v2h2V6h4V10z"
      }
    }), children]);
  }
};

/* harmony default export */ var _16 = (virtual_Calendar16);

// EXTERNAL MODULE: ./src/components/cv-wrapper/_cv-wrapper.js
var _cv_wrapper = __webpack_require__("5d36");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-date-picker/cv-date-picker.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









// Weekdays shorthand for english locale
l10n_default.a.en.weekdays.shorthand.forEach((day, index) => {
  const currentDay = l10n_default.a.en.weekdays.shorthand;
  if (currentDay[index] === 'Thu' || currentDay[index] === 'Th') {
    currentDay[index] = 'Th';
  } else {
    currentDay[index] = currentDay[index].charAt(0);
  }
});

/* harmony default export */ var cv_date_pickervue_type_script_lang_js_ = ({
  name: 'CvDatePicker',
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  components: { Calendar16: _16, CvWrapper: _cv_wrapper["a" /* default */] },
  props: {
    dateLabel: { type: String, default: undefined },
    dateEndLabel: { type: String, default: undefined },
    formItem: { type: Boolean, default: true },
    kind: {
      type: String,
      default: 'simple',
      validator: val => ['short', 'simple', 'single', 'range'].includes(val),
    },
    calOptions: {
      type: Object,
      default: () => {
        return {
          dateFormat: 'm/d/Y',
        };
      },
    },
    pattern: { type: String, default: '\\d{1,2}/\\d{1,2}/\\d{4}' },
    placeholder: { type: String, default: 'mm/dd/yyyy' },
    invalid: /* deprecate */ {
      type: Boolean,
      default: undefined,
      validator(val) {
        if (val !== undefined && "production" === 'development') {
          console.warn('CvDatePicker: invalid prop deprecated in favour of invalidMessage');
        }
        return true;
      },
    },
    invalidDateMessage: /* deprecate */ {
      type: String,
      default: undefined,
      validator(val) {
        if (val !== undefined && "production" === 'development') {
          console.warn('CvDatePicker: invalidDateMessage deprecated in favour of invalidMessage');
        }
        return true;
      },
    },
    invalidMessage: { type: String, default: undefined },
    value: [String, Object, Array],
  },
  model: {
    prop: 'value',
    event: 'change',
  },
  data() {
    return {
      dataValue: this.value,
      dataOptions: {},
      isInvalid: false,
    };
  },
  watch: {
    value() {
      if (this.isSingle) {
        this.cal.setDate(this.value, true);
      } else if (this.isRange) {
        this.cal.setDate([this.value.startDate, this.value.endDate], true);
      } else {
        this.$refs.date.value = this.value;
      }
      this.dataValue = this.value;
    },
    calOptions() {
      this.initFlatpickr();
    },
    kind() {
      this.initFlatpickr();
    },
  },
  computed: {
    kindClasses() {
      if (this.kind === 'short') {
        return 'bx--date-picker--short bx--date-picker--simple';
      }
      return `bx--date-picker--${this.kind}`;
    },
    getDateLabel() {
      if (this.dateLabel !== undefined) {
        return this.dateLabel;
      } else {
        if (this.isRange) {
          return 'Start date';
        } else {
          return 'Date';
        }
      }
    },
    getDateEndLabel() {
      if (this.dateEndLabel !== undefined) {
        return this.dateEndLabel;
      } else {
        if (this.isRange) {
          return 'End date';
        } else {
          return '';
        }
      }
    },
    isRange() {
      return this.kind === 'range';
    },
    isSingle() {
      return this.kind === 'single';
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(
        this.$slots['invalid-message'] ||
        (this.invalidMessage && this.invalidMessage.length) ||
        (this.invalidDateMessage && this.invalidDateMessage.length)
      );
    },
    initFlatpickr() {
      if (['single', 'range'].includes(this.kind)) {
        // no need to call set value as it's done through getOptions
        this.cal = new flatpickr_default.a(this.$refs.date, this.getOptions());
      }
    },
    getOptions() {
      const _options = { ...this.calOptions };

      // add events update based on parameters
      _options.onChange = this.onChange;
      _options.onOpen = this.onOpen;
      _options.onReady = this.onCalReady;

      // prefer value if set
      if (this.dataValue) {
        if (this.isRange) {
          _options.defaultDate = [this.dataValue.startDate, this.dataValue.endDate];
        } else {
          _options.defaultDate = this.dataValue;
        }
      }
      // _options.onValueUpdate = this.onChange;

      if (this.isRange) {
        // let curDate = new Date();
        // let anotherDate = new Date();
        // anotherDate = anotherDate.setDate(anotherDate.getDate() + 6);
        // _options.defaultDate = [curDate, anotherDate];
        _options.plugins = [new rangePlugin_default.a({ input: this.$refs.todate, position: 'left' })];
      }

      return _options;
    },
    onChange() {
      let firstDate, secondDate;
      let dateToString = val => {
        if (typeof val === 'number') {
          return this.cal.formatDate(val, this.calOptions.dateFormat);
        } else {
          return val || '';
        }
      };

      if (this.dataValue) {
        if (this.isRange) {
          firstDate = dateToString(this.dataValue.startDate);
          secondDate = dateToString(this.dataValue.endDate);
        } else {
          firstDate = dateToString(this.dataValue);
        }
      }

      if (this.isRange) {
        if (firstDate !== this.$refs.date.value || secondDate !== this.$refs.todate.value) {
          this.dataValue = {
            startDate: this.$refs.date.value,
            endDate: this.$refs.todate.value,
          };
          this.$emit('change', this.dataValue);
        }
      } else {
        if (firstDate !== this.$refs.date.value) {
          this.dataValue = this.$refs.date.value;
          this.$emit('change', this.dataValue);

          if (this.$listeners['simpleChange'] && "production" === 'development') {
            console.warn('CvDatePicker: simple change event deprecated in favour of change.');
            this.$emit('simpleChange', this.dataValue);
          }
        }
      }
    },
    onCalReady(selectedDates, dateString, instance) {
      const calendarContainer = instance.calendarContainer;
      const options = {
        classCalendarContainer: `bx--date-picker__calendar`,
        classMonth: `bx--date-picker__month`,
        classWeekdays: `bx--date-picker__weekdays`,
        classDays: `bx--date-picker__days`,
        classWeekday: `bx--date-picker__weekday`,
        classDay: `bx--date-picker__day`,
        classFocused: `bx--focused`,
        classVisuallyHidden: `bx--visually-hidden`,
      };

      if (calendarContainer) {
        calendarContainer.classList.add(options.classCalendarContainer);
        calendarContainer.querySelector('.flatpickr-month').classList.add(options.classMonth);
        calendarContainer.querySelector('.flatpickr-weekdays').classList.add(options.classWeekdays);
        calendarContainer.querySelector('.flatpickr-days').classList.add(options.classDays);
        for (const item of calendarContainer.querySelectorAll('.flatpickr-weekday')) {
          const currentItem = item;
          currentItem.innerHTML = currentItem.innerHTML.replace(/\s+/g, '');
          currentItem.classList.add(options.classWeekday);
        }
        for (const item of calendarContainer.querySelectorAll('.flatpickr-day')) {
          item.classList.add(options.classDay);
          if (item.classList.contains('today') && selectedDates.length > 0) {
            item.classList.add('no-border');
          } else if (item.classList.contains('today') && selectedDates.length === 0) {
            item.classList.remove('no-border');
          }
        }
      }
    },
    openTodateCal() {
      this.$refs.todate.click();
    },
  },
  mounted() {
    this.initFlatpickr();
    this.checkSlots();
    // this.cal.setDate([Date.now(), Date.now()]);
    // setTimeout(() => {
    //   let curDate = new Date();
    //   let anotherDate = new Date();
    //   anotherDate = anotherDate.setDate(anotherDate.getDate() + 16);
    //   this.cal.setDate([curDate, anotherDate], true);
    // }, 2000);
  },
  beforeUpdate() {
    this.checkSlots();
  },
  beforeDestroy() {
    if (this.cal) {
      this.cal.destroy();
    }
  },
});

// CONCATENATED MODULE: ./src/components/cv-date-picker/cv-date-picker.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_date_picker_cv_date_pickervue_type_script_lang_js_ = (cv_date_pickervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-date-picker/cv-date-picker.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_date_picker_cv_date_pickervue_type_script_lang_js_,
  cv_date_pickervue_type_template_id_71bd2208_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_date_picker = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "0647":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-cell.vue?vue&type=template&id=1f3f5374&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{style:(_vm.cellStyle)},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-cell.vue?vue&type=template&id=1f3f5374&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-cell.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_data_table_cellvue_type_script_lang_js_ = ({
  name: 'CvDataTableCell',
  props: {
    cellStyle: {},
  },
});

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-cell.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_data_table_cv_data_table_cellvue_type_script_lang_js_ = (cv_data_table_cellvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-cell.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_data_table_cv_data_table_cellvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_data_table_cell = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "099b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var carbon_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4020");


/* harmony default export */ __webpack_exports__["a"] = ({
  created() {
    this.carbonPrefix = carbon_components__WEBPACK_IMPORTED_MODULE_0__[/* settings */ "a"].prefix;
  },
});


/***/ }),

/***/ "0ad0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-menu-item.vue?vue&type=template&id=09bf0602&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"bx--side-nav__menu-item"},[_c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"bx--side-nav__link",class:{ 'bx--side-nav__link--current': _vm.active },attrs:{"role":"menuitem"}},'component',Object.assign({}, _vm.$attrs, _vm.linkProps),false),_vm.$listeners),[_c('cv-side-nav-link-text',[_vm._t("default")],2)],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu-item.vue?vue&type=template&id=09bf0602&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/_cv-side-nav-link-text.vue + 4 modules
var _cv_side_nav_link_text = __webpack_require__("f516");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-menu-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_side_nav_menu_itemvue_type_script_lang_js_ = ({
  name: 'CvSideNavMenuItem',
  inheritAttrs: false,
  mixins: [link_mixin["a" /* default */]],
  components: { CvSideNavLinkText: _cv_side_nav_link_text["a" /* default */] },
  props: {
    active: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_nav_menu_itemvue_type_script_lang_js_ = (cv_side_nav_menu_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_nav_menu_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_side_nav_menu_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "0f44":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-row.vue?vue&type=template&id=547f368b&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.someExpandingRows)?_c('tbody',{staticClass:"cv-data-table-row cv-data-table-row--expandable"},[_c('cv-data-table-row-inner',_vm._g(_vm._b({ref:"row",attrs:{"expanding-row":_vm.dataExpandable,"some-expanding-rows":"","expanded":_vm.dataExpanded},on:{"expanded-change":_vm.onExpandedChange}},'cv-data-table-row-inner',_vm.$attrs,false),_vm.$listeners),[_vm._t("default")],2),(_vm.dataExpandable)?_c('tr',{staticClass:"bx--expandable-row bx--expandable-row--hidden",attrs:{"data-child-row":""}},[_c('td',{attrs:{"colspan":"999"}},[_c('div',{staticClass:"bx--child-row-inner-container"},[_vm._t("expandedContent")],2)])]):_vm._e()],1):_c('cv-data-table-row-inner',_vm._g(_vm._b({ref:"row",staticClass:"cv-data-table-row"},'cv-data-table-row-inner',_vm.$attrs,false),_vm.$listeners),[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-row.vue?vue&type=template&id=547f368b&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/_cv-data-table-row-inner.vue?vue&type=template&id=5d227bbb&
var _cv_data_table_row_innervue_type_template_id_5d227bbb_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',{staticClass:"cv-data-table-row-inner",class:{ 'bx--parent-row': _vm.expandingRow, 'bx--expandable-row': _vm.dataExpanded }},[(_vm.dataSomeExpandingRows)?_c('td',{staticClass:"bx--table-expand",attrs:{"data-previous-value":_vm.dataExpanded ? 'collapsed' : 'expanded'}},[(_vm.expandingRow)?_c('button',{staticClass:"bx--table-expand__button",attrs:{"type":"button"},on:{"click":_vm.toggleExpand}},[_c('ChevronRight16',{staticClass:"bx--table-expand__svg"})],1):_vm._e()]):_vm._e(),(_vm.hasBatchActions)?_c('td',{staticClass:"bx--table-column-checkbox"},[_c('cv-checkbox',{ref:"rowChecked",attrs:{"form-item":false,"value":_vm.value,"aria-label":_vm.ariaLabelForBatchCheckbox || ("Select row " + _vm.value + " for batch action")},on:{"change":_vm.onChange},model:{value:(_vm.dataChecked),callback:function ($$v) {_vm.dataChecked=$$v},expression:"dataChecked"}})],1):_vm._e(),_vm._t("default"),(_vm.hasOverflowMenu)?_c('td',{staticClass:"bx--table-column-menu"},[_c('cv-overflow-menu',{attrs:{"flip-menu":""}},_vm._l((_vm.overflowMenu),function(item,index){return _c('cv-overflow-menu-item',{key:("" + index),on:{"click":function($event){return _vm.onMenuItemClick({
            rowValue: _vm.value,
            menuIndex: index,
            menuLabel: item,
          })}}},[_vm._v(_vm._s(item))])}),1)],1):_vm._e()],2)}
var _cv_data_table_row_innervue_type_template_id_5d227bbb_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-data-table/_cv-data-table-row-inner.vue?vue&type=template&id=5d227bbb&

// EXTERNAL MODULE: ./src/components/cv-checkbox/cv-checkbox.vue + 4 modules
var cv_checkbox = __webpack_require__("eade");

// EXTERNAL MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu.vue + 5 modules
var cv_overflow_menu = __webpack_require__("e44b");

// EXTERNAL MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu-item.vue + 4 modules
var cv_overflow_menu_item = __webpack_require__("03f9");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--right/16.js
var _16 = __webpack_require__("7c7c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/_cv-data-table-row-inner.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var _cv_data_table_row_innervue_type_script_lang_js_ = ({
  name: 'CvDataTableRowInner',
  components: { CvCheckbox: cv_checkbox["default"], CvOverflowMenu: cv_overflow_menu["default"], CvOverflowMenuItem: cv_overflow_menu_item["default"], ChevronRight16: _16["a" /* default */] },
  props: {
    ariaLabelForBatchCheckbox: String,
    checked: Boolean,
    expanded: Boolean,
    expandingRow: Boolean,
    overflowMenu: Array,
    someExpandingRows: Boolean,
    value: String,
  },
  model: {
    event: 'change',
    prop: 'checked',
  },
  data() {
    return {
      dataChecked: this.checked,
      dataExpanded: this.expanded,
      dataSomeExpandingRows: this.someExpandingRows,
      hasOverflowMenu: false,
    };
  },
  mounted: function() {
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  watch: {
    checked() {
      this.dataChecked = this.checked;
    },
    expanded() {
      this.dataExpanded = this.expanded;
    },
    someExpandingRows() {
      this.dataSomeExpandingRows = this.someExpandingRows;
    },
  },
  computed: {
    isCvDataTableRow() {
      return true;
    },
    hasBatchActions() {
      return this.$parent.$parent.hasBatchActions;
    },
    isChecked() {
      return this.dataChecked;
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.hasOverflowMenu = !!((this.overflowMenu && this.overflowMenu.length) || this.$slots['overflow-menu']);
    },
    onChange() {
      this.$parent.$parent.onRowCheckChange(this.value, this.dataChecked);
    },
    onMenuItemClick(val) {
      this.$parent.$parent.onMenuItemClick(val);
    },
    toggleExpand() {
      this.dataExpanded = !this.dataExpanded;
      this.$emit('expanded-change', this.dataExpanded);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-data-table/_cv-data-table-row-inner.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_data_table_cv_data_table_row_innervue_type_script_lang_js_ = (_cv_data_table_row_innervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-data-table/_cv-data-table-row-inner.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_data_table_cv_data_table_row_innervue_type_script_lang_js_,
  _cv_data_table_row_innervue_type_template_id_5d227bbb_render,
  _cv_data_table_row_innervue_type_template_id_5d227bbb_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_data_table_row_inner = (component.exports);
// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-row.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_data_table_rowvue_type_script_lang_js_ = ({
  name: 'CvDataTableRow',
  mixins: [uid_mixin["a" /* default */]],
  components: { CvDataTableRowInner: _cv_data_table_row_inner },
  props: {
    expanded: Boolean,
  },
  data() {
    return {
      dataExpandable: false,
      dataSomeExpandingRows: false,
      dataExpanded: this.expanded,
    };
  },
  watch: {
    expanded() {
      if (this.dataExpanded !== this.expaned) {
        this.dataExpanded = this.expanded;
      }
    },
  },
  mounted() {
    // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
    this.dataExpandable = !!this.$slots.expandedContent;
    this.$parent.$emit('cv:mounted', this);
  },
  updated() {
    this.dataExpandable = !!this.$slots.expandedContent;
  },
  beforeDestroy() {
    this.$parent.$emit('cv:beforeDestroy', this);
  },
  computed: {
    expandable() {
      return this.dataExpandable;
    },
    isCvDataTableRow() {
      return true;
    },
    isChecked: {
      get() {
        return this.$refs.row.dataChecked;
      },
      set(val) {
        this.$refs.row.dataChecked = val;
      },
    },
    isExpanded: {
      get() {
        return this.dataExpanded;
      },
      set(val) {
        this.dataExpanded = val;
      },
    },
    someExpandingRows: {
      get() {
        return this.dataSomeExpandingRows;
      },
      set(val) {
        this.dataSomeExpandingRows = val;

        if (this.$refs.row) {
          this.$refs.row.dataSomeExpandingRows = val;
        }
      },
    },
    value() {
      return this.$refs.row.value;
    },
  },
  methods: {
    onExpandedChange(val) {
      this.dataExpanded = val;
      this.$emit('cv:expanded-change', this);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-row.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_data_table_cv_data_table_rowvue_type_script_lang_js_ = (cv_data_table_rowvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-row.vue





/* normalize component */

var cv_data_table_row_component = Object(componentNormalizer["a" /* default */])(
  cv_data_table_cv_data_table_rowvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_data_table_row = __webpack_exports__["default"] = (cv_data_table_row_component.exports);

/***/ }),

/***/ "1120":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-menu.vue?vue&type=template&id=0f542db4&
var cv_side_nav_menuvue_type_template_id_0f542db4_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-side-nav-menu bx--side-nav__item",class:{ 'bx--side-nav__item--active': _vm.active, 'bx--side-nav__item--icon': _vm.hasIcon }},[_c('button',{staticClass:"bx--side-nav__submenu",attrs:{"aria-haspopup":"true","aria-expanded":_vm.isExpanded ? 'true' : 'false',"role":"menuitem","type":"button"},on:{"click":_vm.doToggle,"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.doToggle($event)}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.doToggle($event)}}},[(_vm.hasIcon)?_c('cv-side-nav-icon',[_vm._t("nav-icon")],2):_vm._e(),_c('span',{staticClass:"bx--side-nav__submenu-title"},[_vm._v(_vm._s(_vm.title))]),_c('cv-side-nav-icon',{staticClass:"bx--side-nav__submenu-chevron",attrs:{"small":"","aria-label":_vm.isExpanded ? 'collapse nav menu' : 'expand nav menu'}},[_c('ChevronDown20',{staticClass:"cv-side-nav-menu__chevron-svg"})],1)],1),_c('ul',{ref:"menu",staticClass:"bx--side-nav__menu"},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu.vue?vue&type=template&id=0f542db4&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/20.js



var virtual_ChevronDown20 = {
  name: 'ChevronDown20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "16,22 6,12 7.4,10.6 16,19.2 24.6,10.6 26,12"
      }
    }), children]);
  }
};

/* harmony default export */ var _20 = (virtual_ChevronDown20);

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav-icon.vue + 4 modules
var cv_side_nav_icon = __webpack_require__("8fd3");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-menu.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_side_nav_menuvue_type_script_lang_js_ = ({
  name: 'CvSideNavMenu',
  components: { CvSideNavIcon: cv_side_nav_icon["default"], ChevronDown20: _20 },
  props: {
    active: Boolean,
    title: { type: String, required: true },
    expanded: { type: Boolean, default: false },
  },
  data() {
    return {
      isExpanded: false,
      hasNavIcon: false,
    };
  },
  mounted() {
    // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
    this.hasNavIcon = !!this.$slots['nav-icon'];
  },
  beforeUpdate() {
    this.hasNavIcon = !!this.$slots['nav-icon'];
  },
  computed: {
    hasIcon() {
      return !!this.$slots['nav-icon'];
    },
  },
  methods: {
    doToggle() {
      this.isExpanded = !this.isExpanded;
    },
  },
  watch: {
    expanded: {
      immediate: true,
      handler(value) {
        this.isExpanded = value;
      },
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_nav_menuvue_type_script_lang_js_ = (cv_side_nav_menuvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_nav_menuvue_type_script_lang_js_,
  cv_side_nav_menuvue_type_template_id_0f542db4_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_side_nav_menu = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "115c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-side-nav-items.vue?vue&type=template&id=533c650c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--side-nav__header-navigation",class:{ 'bx--side-nav__header-divider': _vm.divider }},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-side-nav-items.vue?vue&type=template&id=533c650c&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-side-nav-items.vue?vue&type=script&lang=js&
//
//
//
//

/* harmony default export */ var cv_header_side_nav_itemsvue_type_script_lang_js_ = ({
  name: 'CvHeaderSideNavItems',
  props: {
    divider: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-side-nav-items.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_side_nav_itemsvue_type_script_lang_js_ = (cv_header_side_nav_itemsvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-side-nav-items.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_side_nav_itemsvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_side_nav_items = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "140e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-dropdown/cv-dropdown-item.vue?vue&type=template&id=cb7d5732&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-dropdown-item bx--dropdown-item",class:{ 'bx--dropdown--selected': _vm.internalSelected },attrs:{"data-option":"","data-value":_vm.value}},[_c('a',{ref:"link",staticClass:"bx--dropdown-link",attrs:{"aria-checked":_vm.internalSelected,"href":"javascript:void(0)","role":"menuitemradio","tabindex":"-1"}},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown-item.vue?vue&type=template&id=cb7d5732&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-dropdown/cv-dropdown-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_dropdown_itemvue_type_script_lang_js_ = ({
  name: 'CvDropdownItem',
  props: {
    value: {
      type: String,
      required: true,
    },
    selected: Boolean,
  },
  watch: {
    selected() {
      this.dataSelected = this.selected;
      this.$parent.$emit('cv:selected', this);
    },
  },
  data() {
    return {
      dataSelected: undefined,
    };
  },
  mounted() {
    this.$_CvDropdownItem = true; // for use by parent with $children
    this.$parent.$emit('cv:mounted', this);
  },
  beforeDestroy() {
    this.$parent.$emit('cv:beforeDestroy', this);
  },
  computed: {
    internalSelected: {
      get() {
        return this.dataSelected === undefined ? this.selected : this.dataSelected === true;
      },
      set(val) {
        this.dataSelected = val;
      },
    },
    internalContent() {
      return this.$refs.link.innerHTML;
    },
  },
  methods: {
    setFocus() {
      this.$refs.link.focus();
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_dropdown_cv_dropdown_itemvue_type_script_lang_js_ = (cv_dropdown_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_dropdown_cv_dropdown_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_dropdown_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "15aa":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-switcher-item.vue?vue&type=template&id=0bd97d73&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-switcher-item bx--switcher__item"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher-item.vue?vue&type=template&id=0bd97d73&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-switcher-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_switcher_itemvue_type_script_lang_js_ = ({
  name: 'CvSwitcherItem',
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_switcher_itemvue_type_script_lang_js_ = (cv_switcher_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_switcher_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_switcher_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "15ec":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar.vue?vue&type=template&id=33c744c0&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--toolbar",attrs:{"data-toolbar":""}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar.vue?vue&type=template&id=33c744c0&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_toolbarvue_type_script_lang_js_ = ({
  name: 'CvToolbar',
});

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toolbar_cv_toolbarvue_type_script_lang_js_ = (cv_toolbarvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toolbar_cv_toolbarvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toolbar = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "1617":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-text-area/cv-text-area.vue?vue&type=template&id=7b295f82&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-text-area bx--form-item"},[_c('label',{class:[
      'bx--label',
      {
        'bx--label--disabled': _vm.$attrs.disabled !== undefined && _vm.$attrs.disabled,
      } ],attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.label))]),(_vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text",class:{ 'bx--form__helper-text--disabled': _vm.$attrs.disabled }},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e(),_c('div',{staticClass:"bx--text-area__wrapper",attrs:{"data-invalid":_vm.isInvalid}},[(_vm.isInvalid)?_c('WarningFilled16',{staticClass:"bx--text-area__invalid-icon"}):_vm._e(),_c('textarea',_vm._g(_vm._b({staticClass:"bx--text-area",class:{ 'bx--text-area--light': _vm.theme === 'light', 'bx--text-area--invalid': _vm.isInvalid },attrs:{"id":_vm.uid},domProps:{"value":_vm.value}},'textarea',_vm.$attrs,false),_vm.inputListeners))],1),(_vm.isInvalid)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-text-area/cv-text-area.vue?vue&type=template&id=7b295f82&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var _16 = __webpack_require__("f47d");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-text-area/cv-text-area.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var cv_text_areavue_type_script_lang_js_ = ({
  name: 'CvTextArea',
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  inheritAttrs: false,
  components: { WarningFilled16: _16["a" /* default */] },
  props: {
    helperText: { type: String, default: undefined },
    invalidMessage: { type: String, default: undefined },
    label: String,
    value: String,
  },
  data() {
    return {
      isHelper: false,
      isInvalid: false,
    };
  },
  mounted() {
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  computed: {
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return {
        ...this.$listeners,
        input: event => this.$emit('input', event.target.value),
      };
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-text-area/cv-text-area.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_text_area_cv_text_areavue_type_script_lang_js_ = (cv_text_areavue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-text-area/cv-text-area.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_text_area_cv_text_areavue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_text_area = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "17cc":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-slider/cv-slider.vue?vue&type=template&id=7cedda9f&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-slider bx--form-item"},[_c('label',{staticClass:"bx--label",class:{ 'bx--label--disabled': _vm.disabled },attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.label))]),_c('div',{staticClass:"bx--slider-container"},[_c('span',{staticClass:"bx--slider__range-label"},[_vm._v(_vm._s(_vm.internalMinLabel))]),_c('div',{staticClass:"bx--slider",class:{ 'bx--slider--disabled': _vm.disabled },attrs:{"data-slider":"","data-slider-input-box":"#slider-input-box"}},[_c('div',{ref:"track",staticClass:"bx--slider__track",on:{"click":_vm.onTrackClick}}),_c('div',{staticClass:"bx--slider__filled-track",style:(("width: " + _vm.percentage + ";"))}),_c('div',{ref:"thumb",staticClass:"bx--slider__thumb",class:{
          'bx--slider__thumb--clicked': _vm.animateClick,
        },style:(("left: " + _vm.percentage + ";")),attrs:{"tabindex":"0"},on:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])&&_vm._k($event.keyCode,"right",39,$event.key,["Right","ArrowRight"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }$event.preventDefault();return _vm.onUp($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])&&_vm._k($event.keyCode,"left",37,$event.key,["Left","ArrowLeft"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }$event.preventDefault();return _vm.onDown($event)}],"mousedown":_vm.onStartDrag}}),_c('input',{ref:"range",staticClass:"bx--slider__input",attrs:{"id":_vm.uid,"type":"range","step":_vm.step,"min":_vm.min,"max":_vm.max}})]),_c('span',{staticClass:"bx--slider__range-label"},[_vm._v(_vm._s(_vm.internalMaxLabel))]),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.internalValue),expression:"internalValue"}],ref:"inputBox",staticClass:"bx--text-input bx--slider-text-input",class:{ 'bx--text-input--light': _vm.theme === 'light' },attrs:{"type":"number","placeholder":_vm.min,"disabled":_vm.disabled},domProps:{"value":(_vm.internalValue)},on:{"change":_vm.onChange,"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.onUp($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.onDown($event)}],"input":function($event){if($event.target.composing){ return; }_vm.internalValue=$event.target.value}}})])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-slider/cv-slider.vue?vue&type=template&id=7cedda9f&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-slider/cv-slider.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_slidervue_type_script_lang_js_ = ({
  name: 'CvSlider',
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  props: {
    disabled: Boolean,
    label: String,
    // NOTE: It is not safe to rely on Numbers for non-integer steps
    min: { type: String, default: '0' },
    max: { type: String, default: '100' },
    step: { type: String, default: '1' },
    stepMultiplier: {
      type: String,
      default: '4',
      validator(val) {
        if (val.length) {
          let intMultiplier = parseInt(val);
          if (isNaN(intMultiplier) || intMultiplier < 1) {
            console.warn('cv-slider: multiplier must be >= 1');
            return false;
          }
        }
        return true;
      },
    },
    value: String,
    minLabel: String,
    maxLabel: String,
  },
  model: {
    prop: 'value',
    event: 'modelEvent',
  },
  data() {
    return {
      internalValue: '',
      animateClick: false,
      isDragging: false,
      dragStartX: 0,
      dragStartValue: 0,
      percentage: '0%',
    };
  },
  computed: {
    internalMinLabel() {
      return this.minLabel !== undefined ? this.minLabel : this.getMin();
    },
    internalMaxLabel() {
      return this.maxLabel !== undefined ? this.maxLabel : this.getMax();
    },
    internalMultiplier() {
      let intMultiplier = parseInt(this.stepMultiplier);
      // default to 4 fro multiplier
      return isNaN(intMultiplier) ? 4 : Math.max(intMultiplier, 1);
    },
  },
  mounted() {
    this.$refs.range.value = this.value;
    this.internalValue = this.$refs.range.value;
    this.percentage = `${((this.internalValue - this.getMin()) * 100) / (this.getMax() - this.getMin())}%`;
  },
  watch: {
    value(val) {
      this.setValue(val);
    },
    min() {
      this.$nextTick(() => {
        this.setValue(this.internalValue);
      });
      //      this.internalMin = val && val.length ? val : '0';
    },
    max() {
      this.$nextTick(() => {
        this.setValue(this.internalValue);
      });
    },
    step() {
      this.$nextTick(() => {
        this.setValue(this.internalValue);
      });
    },
  },
  methods: {
    // NOTE: It is not safe to rely on Numbers for non-integer steps
    getMin() {
      if (this.$refs.range) {
        const val = parseFloat(this.$refs.range.min);
        return isNaN(val) ? 0 : val;
      }
      return 0;
    },
    getMax() {
      if (this.$refs.range) {
        const val = parseFloat(this.$refs.range.max);
        return isNaN(val) ? 100 : val;
      }
      return 100;
    },
    getValue() {
      if (this.$refs.range) {
        const val = parseFloat(this.$refs.range.value);
        return isNaN(val) ? 0 : val;
      }
      return (this.getMax() + this.getMin()) / 2;
    },
    getStep() {
      if (this.$refs.range) {
        const val = parseFloat(this.$refs.range.step);
        return isNaN(val) ? 0 : val;
      }
      return 1;
    },

    setValue(newValue) {
      if (this.disabled) return;

      this.$refs.range.value = newValue;
      this.internalValue = this.$refs.range.value;

      this.percentage = `${((this.internalValue - this.getMin()) * 100) / (this.getMax() - this.getMin())}%`;

      this.$emit('modelEvent', this.$refs.range.value);
      this.$emit('change', this.$refs.range.value);
    },
    onChange() {
      let newValue = this.internalValue.length ? parseFloat(this.internalValue) : this.getMin();
      this.setValue(newValue);
    },
    onStartDrag(ev) {
      document.body.addEventListener('mousemove', this.onDrag);
      document.body.addEventListener('mouseup', this.onStopDrag);

      this.dragStartX = ev.clientX;
      this.dragStartValue = this.getValue();
      this.isDragging = true;
    },
    onDrag(ev) {
      if (this.isDragging) {
        // percentage change
        let newValue = (ev.clientX - this.dragStartX) / this.$refs.track.offsetWidth;
        // uncapped new value
        newValue = this.dragStartValue + (this.getMax() - this.getMin()) * newValue;

        this.setValue(newValue, ev);
      }
    },
    onStopDrag() {
      this.isDragging = false;
      document.body.removeEventListener('mousemove', this.onDrag);
      document.body.removeEventListener('mouseup', this.onStopDrag);
    },
    onTrackClick(ev) {
      const afterAnimate = ev => {
        if (ev.propertyName === 'left') {
          this.animateClick = false;
          this.$refs.thumb.removeEventListener('transitionend', afterAnimate);
        }
      };

      let newValue = ev.offsetX / this.$refs.track.offsetWidth;
      newValue = (this.getMax() - this.getMin()) * newValue + this.getMin();
      this.$refs.thumb.addEventListener('transitionend', afterAnimate);
      this.animateClick = true;

      this.setValue(newValue, ev);
    },
    onUp(ev) {
      let curValue = ev.target.type === 'number' ? parseFloat(ev.target.value) : this.getValue();
      let newValue = curValue + (ev.shiftKey ? this.internalMultiplier * this.getStep() : this.getStep());
      this.setValue(newValue, ev);
    },
    onDown(ev) {
      let curValue = ev.target.type === 'number' ? parseFloat(ev.target.value) : this.getValue();
      let newValue = curValue - (ev.shiftKey ? this.internalMultiplier * this.getStep() : this.getStep());
      this.setValue(newValue, ev);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-slider/cv-slider.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_slider_cv_slidervue_type_script_lang_js_ = (cv_slidervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-slider/cv-slider.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_slider_cv_slidervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_slider = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "180a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-switcher-item-link.vue?vue&type=template&id=405aa436&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-switcher-item-link bx--switcher__item-link",class:{ 'bx--switcher__item-link--selected': _vm.selected }},'component',_vm.linkProps,false),_vm.$listeners),[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher-item-link.vue?vue&type=template&id=405aa436&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-switcher-item-link.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_switcher_item_linkvue_type_script_lang_js_ = ({
  name: 'CvSwitcherItemLink',
  mixins: [link_mixin["a" /* default */]],
  props: {
    selected: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher-item-link.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_switcher_item_linkvue_type_script_lang_js_ = (cv_switcher_item_linkvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher-item-link.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_switcher_item_linkvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_switcher_item_link = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "183a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list.vue?vue&type=template&id=0c32be74&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-structured-list bx--structured-list",class:{
    'bx--structured-list--selection': _vm.selectable,
    'bx--structured-list--condensed': _vm.condensed,
  },attrs:{"data-structured-list":_vm.selectable}},[_c('div',{staticClass:"bx--structured-list-thead"},[_c('div',{staticClass:"bx--structured-list-row bx--structured-list-row--header-row"},[_vm._t("headings"),(_vm.selectable)?_c('div',{staticClass:"bx--structured-list-th"}):_vm._e()],2)]),_c('div',{staticClass:"bx--structured-list-tbody"},[_vm._t("items")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list.vue?vue&type=template&id=0c32be74&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_structured_listvue_type_script_lang_js_ = ({
  name: 'CvStructuredList',
  props: {
    selectable: Boolean,
    condensed: Boolean,
  },
  mounted() {
    // pass on cv-structured-list-item change events
    this.$on('cv:change', val => this.$emit('change', val));
  },
});

// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_structured_list_cv_structured_listvue_type_script_lang_js_ = (cv_structured_listvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_structured_list_cv_structured_listvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_structured_list = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "18a2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-select/cv-select-option.vue?vue&type=template&id=c9a6c28e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('option',{staticClass:"cv-select-option bx--select-option"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-select/cv-select-option.vue?vue&type=template&id=c9a6c28e&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-select/cv-select-option.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_select_optionvue_type_script_lang_js_ = ({
  name: 'CvSelectOption',
  // HTML props disabled selected hidden
});

// CONCATENATED MODULE: ./src/components/cv-select/cv-select-option.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_select_cv_select_optionvue_type_script_lang_js_ = (cv_select_optionvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-select/cv-select-option.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_select_cv_select_optionvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_select_option = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "18de":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tabs/cv-tab.vue?vue&type=template&id=bc58d7f6&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-tab",attrs:{"id":_vm.uid,"role":"tabpanel","aria-labelledby":(_vm.uid + "-link"),"aria-hidden":!_vm.dataSelected,"hidden":!_vm.dataSelected}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tab.vue?vue&type=template&id=bc58d7f6&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tabs/cv-tab.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_tabvue_type_script_lang_js_ = ({
  name: 'CvTab',
  mixins: [uid_mixin["a" /* default */]],
  props: {
    selected: Boolean,
    disabled: Boolean,
    label: { type: String, required: true },
  },
  data() {
    return {
      dataSelected: this.selected,
    };
  },
  watch: {
    selected() {
      if (this.selected) {
        this.$parent.$emit('cv:selected', this);
      }
    },
    disabled() {
      if (this.disabled) {
        this.$parent.$emit('cv:disabled', this);
      } else {
        this.$parent.$emit('cv:enabled', this);
      }
    },
  },
  computed: {
    internalSelected: {
      get() {
        return this.dataSelected;
      },
      set(val) {
        this.dataSelected = val;
      },
    },
    internalDisabled() {
      return this.disabled;
    },
  },
  mounted() {
    this.$_CvTab = true; // for use by parent with $children

    this.$parent.$emit('cv:mounted', this);
  },
  beforeDestroy() {
    this.$parent.$emit('cv:beforeDestroy', this);
  },
});

// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tab.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tabs_cv_tabvue_type_script_lang_js_ = (cv_tabvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tab.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tabs_cv_tabvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_tab = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "1cf6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-select/cv-select.vue?vue&type=template&id=c7ec6042&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-wrapper',{staticClass:"cv-select bx--form-item",attrs:{"tag-type":_vm.formItem ? 'div' : ''}},[_c('div',{staticClass:"bx--select",class:{
      'cv-select': !_vm.formItem,
      'bx--select--inline': _vm.inline,
      'bx--select--light': _vm.theme === 'light',
      'bx--select--invalid': _vm.isInvalid,
      'bx--select--disabled': _vm.$attrs.disabled,
    },attrs:{"data-test":_vm.value}},[_c('label',{staticClass:"bx--label",class:{ 'bx--visually-hidden': _vm.hideLabel, 'bx--label--disabled': _vm.$attrs.disabled },attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.label))]),(!_vm.inline && _vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text"},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e(),_c('cv-wrapper',{staticClass:"bx--select-input--inline__wrapper",attrs:{"tag-type":_vm.inline ? 'div' : ''}},[_c('div',{staticClass:"bx--select-input__wrapper",attrs:{"data-invalid":_vm.isInvalid}},[_c('select',_vm._g(_vm._b({ref:"select",staticClass:"bx--select-input",attrs:{"id":_vm.uid},domProps:{"value":_vm.internalValue}},'select',_vm.$attrs,false),_vm.inputListeners),[_vm._t("default")],2),_c('chevron-down-glyph',{staticClass:"bx--select__arrow"}),(_vm.isInvalid)?_c('warning-filled-16',{staticClass:"bx--select__invalid-icon"}):_vm._e()],1),(_vm.isInvalid)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()]),(_vm.inline && _vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text"},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e()],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-select/cv-select.vue?vue&type=template&id=c7ec6042&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./src/components/cv-wrapper/_cv-wrapper.js
var _cv_wrapper = __webpack_require__("5d36");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/index.js
var chevron_down = __webpack_require__("fa89");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var _16 = __webpack_require__("f47d");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-select/cv-select.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var cv_selectvue_type_script_lang_js_ = ({
  name: 'CvSelect',
  inheritAttrs: false,
  components: { CvWrapper: _cv_wrapper["a" /* default */], ChevronDownGlyph: chevron_down["a" /* default */], WarningFilled16: _16["a" /* default */] },
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  props: {
    inline: Boolean,
    invalidMessage: { type: String, default: undefined },
    helperText: { type: String, default: undefined },
    formItem: { type: Boolean, default: true },
    hideLabel: Boolean,
    label: { type: String, required: true },
    // *********************
    // declare here to prevent the following from being added to the select
    // *********************
    // multiple does not work with styling from carbon-components 9.20
    multiple: {
      type: String,
      validator: () => {
        console.warn('property multiple not supported in CvSelect');
        return false;
      },
    },
    value: { type: String, default: undefined },
  },
  beforeCreate() {
    // *********************
    // delete here to prevent the following from being added to the select
    // *********************
    // multiple does not work with styling from carbon-components 9.20
    delete this.$attrs.multiple;
  },
  data() {
    return {
      dataValue: undefined,
      isHelper: false,
      isInvalid: false,
    };
  },
  mounted() {
    // this is needed to ensure selected for an option when no value is supplied
    if (this.value === undefined) {
      let options = this.$el.querySelectorAll('option');
      for (let i = 0; i < options.length; i++) {
        if (options[i].attributes.selected) {
          this.dataValue = options[i].value;
        }
      }
    }
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  watch: {
    value() {
      // this is needed to ensure selected for an option when no value is supplied
      if (this.value === undefined) {
        let options = this.$el.querySelectorAll('option');
        for (let i = 0; i < options.length; i++) {
          if (options[i].attributes.selected) {
            this.dataValue = options[i].value;
          }
        }
      }
    },
  },
  model: {
    prop: 'value',
    event: 'change',
  },
  computed: {
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return {
        ...this.$listeners,
        input: event => this.$emit('input', event.target.value),
        change: event => this.$emit('change', event.target.value), // use change event for ie11 compatibility
      };
    },
    internalValue() {
      return this.dataValue ? this.dataValue : this.value;
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-select/cv-select.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_select_cv_selectvue_type_script_lang_js_ = (cv_selectvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-select/cv-select.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_select_cv_selectvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_select = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "1d1a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-radio-button/cv-radio-button.vue?vue&type=template&id=67f5aab6&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-radio-button bx--radio-button-wrapper",class:{ 'bx--radio-button-wrapper--label-left': _vm.labelLeft }},[_c('input',_vm._g(_vm._b({ref:"input",staticClass:"bx--radio-button",attrs:{"id":_vm.uid,"type":"radio"},domProps:{"checked":_vm.isChecked,"value":_vm.value}},'input',_vm.$attrs,false),_vm.inputListeners)),_c('label',{staticClass:"bx--radio-button__label",attrs:{"for":_vm.uid}},[_c('span',{staticClass:"bx--radio-button__appearance"}),_vm._v("\n    "+_vm._s(_vm.label)+"\n  ")])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-radio-button/cv-radio-button.vue?vue&type=template&id=67f5aab6&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/radio-mixin.js
var radio_mixin = __webpack_require__("47fc");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-radio-button/cv-radio-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_radio_buttonvue_type_script_lang_js_ = ({
  name: 'CvRadioButton',
  inheritAttrs: false,
  mixins: [uid_mixin["a" /* default */], radio_mixin["a" /* default */]],
  props: {
    labelLeft: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-radio-button/cv-radio-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_radio_button_cv_radio_buttonvue_type_script_lang_js_ = (cv_radio_buttonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-radio-button/cv-radio-button.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_radio_button_cv_radio_buttonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_radio_button = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "1ee4":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-action.vue?vue&type=template&id=5997a821&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',_vm._g({staticClass:"bx--overflow-menu bx--toolbar-action",attrs:{"type":"button"}},_vm.$listeners),[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-action.vue?vue&type=template&id=5997a821&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-action.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_data_table_actionvue_type_script_lang_js_ = ({
  name: 'cv-data-table-action',
  mounted() {
    // ensure SVG has
    if (this.$el.children[0].classList) {
      this.$el.children[0].classList.add('bx--toolbar-action__icon');
    } else if (this.$el.children[0].className) {
      // IE 11 and Edge pre-crhomium
      this.$el.children[0].className += ' bx--toolbar-action__icon';
    }
  },
});

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-action.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_data_table_cv_data_table_actionvue_type_script_lang_js_ = (cv_data_table_actionvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-action.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_data_table_cv_data_table_actionvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_data_table_action = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "1f7b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-panel.vue?vue&type=template&id=4be25f26&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-header-panel bx--header-panel",class:{ 'bx--header-panel--expanded': _vm.panelExpanded },attrs:{"aria-hidden":!_vm.panelExpanded,"id":_vm.id},on:{"focusout":_vm.onFocusout,"mousedown":_vm.onMouseDown}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-panel.vue?vue&type=template&id=4be25f26&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-panel.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_header_panelvue_type_script_lang_js_ = ({
  name: 'CvHeaderPanel',
  props: {
    expanded: Boolean,
    id: { type: String, required: true },
  },
  mounted() {
    this.$parent.$emit('cv:panel-mounted', this);
  },
  beforeDestroy() {
    this.$parent.$emit('cv:panel-beforeDestroy', this);
  },
  data() {
    return {
      dataExpanded: this.expanded,
    };
  },
  model: {
    event: 'modelEvent',
    prop: 'expanded',
  },
  watch: {
    expanded() {
      this.panelExpanded = this.expanded;
    },
  },
  computed: {
    panelExpanded: {
      get() {
        return this.dataExpanded;
      },
      set(val) {
        if (this.dataExpanded !== val) {
          this.dataExpanded = val;
          this.$emit('modelEvent', val);
          this.$emit('panel-resize', this);
        }
      },
    },
  },
  methods: {
    onFocusout(ev) {
      this.$parent.$emit('cv:panel-focusout', this, ev);
    },
    onMouseDown(ev) {
      if (this.$el === ev.target) {
        // ignore mousedown on panel can cause focus event
        ev.preventDefault();
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-panel.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_panelvue_type_script_lang_js_ = (cv_header_panelvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-panel.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_panelvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_panel = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "2137":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-content-switcher/cv-content-switcher-button.vue?vue&type=template&id=c01752a4&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:"cv-content-switcher-button",class:[
    'bx--content-switcher-btn',
    {
      'bx--content-switcher--selected': _vm.dataSelected,
    } ],attrs:{"type":"button","role":"tab","data-target":_vm.contentSelector,"aria-selected":("" + _vm.dataSelected)},on:{"click":_vm.open}},[(typeof _vm.icon === 'object')?_c(_vm.icon,{tag:"component",staticClass:"bx--content-switcher__icon"}):_vm._e(),(typeof _vm.icon === 'string')?_c('svg',{staticClass:"bx--content-switcher__icon",attrs:{"height":"16","width":"16"}},[_c('use',{attrs:{"href":_vm.icon}})]):_vm._e(),_c('span',{staticClass:"bx--content-switcher__label"},[_vm._t("default")],2)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher-button.vue?vue&type=template&id=c01752a4&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-content-switcher/cv-content-switcher-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_content_switcher_buttonvue_type_script_lang_js_ = ({
  name: 'CvContentSwitcherButton',
  mixins: [uid_mixin["a" /* default */]],
  props: {
    contentSelector: { type: String, default: undefined },
    icon: {
      type: [String, Object],
      default: undefined,
      validator(val) {
        if (!val || typeof val === 'string') {
          return true;
        }
        return val.render !== null;
      },
    },
    ownerId: { type: String, default: undefined },
    selected: Boolean,
  },
  watch: {
    selected(val) {
      if (val) {
        this.open();
      } else {
        this.close();
      }
    },
  },
  data() {
    return {
      dataSelected: false,
    };
  },
  mounted() {
    this.$_CvContentSwitcherButton = true; // for use by parent with $children

    if (this.contentSelector === '' && this.ownerId === '') {
      console.error('CvContentSwitcherButton: ownerId or content-selector properties must not be empty strings.');
    }

    this.dataSelected = this.selected;
    this.$parent.$emit('cv:mounted', this);
  },
  beforeDestroy() {
    this.$parent.$emit('cv:beforeDestroy', this);
  },
  computed: {
    buttonId() {
      return this.uid;
    },
    isSelected() {
      return this.dataSelected;
    },
  },
  methods: {
    close() {
      this.dataSelected = false;
    },
    open() {
      this.dataSelected = true;
      this.$parent.$emit('cv:open', this);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_content_switcher_cv_content_switcher_buttonvue_type_script_lang_js_ = (cv_content_switcher_buttonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher-button.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_content_switcher_cv_content_switcher_buttonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_content_switcher_button = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "24a9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-progress/cv-progress-step.vue?vue&type=template&id=c4d86f88&
var cv_progress_stepvue_type_template_id_c4d86f88_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-progress-step bx--progress-step",class:_vm.stateClass,attrs:{"aria-disabled":_vm.disabled}},[(_vm.isCurrent)?_c('svg',[_c('path',{attrs:{"d":"M 7, 7 m -7, 0 a 7,7 0 1,0 14,0 a 7,7 0 1,0 -14,0"}})]):(!_vm.isComplete && _vm.invalid)?_c('Warning16',{staticClass:"bx--progress__warning"}):(!_vm.isComplete)?_c('svg',[_c('path',{attrs:{"d":"M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zm0 13c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z"}})]):(_vm.isComplete)?_c('CheckmarkOutline16'):_vm._e(),_c('p',{ref:"label",staticClass:"bx--progress-label",class:{ 'bx--progress-label-overflow': _vm.showOverflow },on:{"mouseenter":_vm.onMouseEnter,"mouseleave":_vm.onMouseLeave}},[_vm._v("\n    "+_vm._s(_vm.label)+"\n  ")]),_c('div',{staticClass:"bx--tooltip",attrs:{"role":"tooltip","data-floating-menu-direction":"bottom"}},[_c('span',{staticClass:"bx--tooltip__caret"}),_c('p',{staticClass:"bx--tooltip__text"},[_vm._v(_vm._s(_vm.tip))])]),(_vm.additionalInfo)?_c('p',{staticClass:"bx--progress-optional"},[_vm._v(_vm._s(_vm.additionalInfo))]):_vm._e(),_c('span',{staticClass:"bx--progress-line"})],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-progress/cv-progress-step.vue?vue&type=template&id=c4d86f88&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/checkmark--outline/16.js



var virtual_CheckmarkOutline16 = {
  name: 'CheckmarkOutline16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"
      }
    }), createElement('polygon', {
      attrs: {
        "points": "14 21.5 9 16.54 10.59 14.97 14 18.35 21.41 11 23 12.58 14 21.5"
      }
    }), children]);
  }
};

/* harmony default export */ var _16 = (virtual_CheckmarkOutline16);

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/warning/16.js



var virtual_Warning16 = {
  name: 'Warning16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M8,14c-3.3,0-6-2.7-6-6s2.7-6,6-6s6,2.7,6,6S11.3,14,8,14z"
      }
    }), createElement('rect', {
      attrs: {
        "width": "1",
        "height": "5",
        "x": "7.5",
        "y": "4"
      }
    }), createElement('path', {
      attrs: {
        "d": "M8,10.2c-0.4,0-0.8,0.3-0.8,0.8s0.3,0.8,0.8,0.8c0.4,0,0.8-0.3,0.8-0.8S8.4,10.2,8,10.2z"
      }
    }), children]);
  }
};

/* harmony default export */ var warning_16 = (virtual_Warning16);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-progress/cv-progress-step.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




const states = ['incomplete', 'current', 'complete'];

/* harmony default export */ var cv_progress_stepvue_type_script_lang_js_ = ({
  name: 'CvProgressStep',
  components: {
    CheckmarkOutline16: _16,
    Warning16: warning_16,
  },
  props: {
    additionalInfo: String,
    disabled: Boolean,
    invalid: Boolean,
    label: String,
    tipText: String,
    complete: Boolean,
  },
  data() {
    return {
      state: -1,
      showOverflow: false,
      tip: '',
    };
  },
  mounted() {
    this.$_CvProgressStep = true; // for use by parent with $children
    this.$parent.$emit('cv:mounted');
  },
  beforeDestroy() {
    this.$parent.$emit('cv:beforeDestroy');
  },
  watch: {
    complete() {
      this.$parent.$emit('cv:completed');
    },
  },
  computed: {
    internalState: {
      get() {
        return this.state;
      },
      set(val) {
        this.state = Math.sign(val);
      },
    },
    isComplete() {
      return this.state > 0;
    },
    isCurrent() {
      return this.state === 0;
    },
    stateClass() {
      const disabledClass = this.disabled ? ' bx--progress-step--disabled' : '';
      const invalidClass = this.invalid ? ' bx--progress-step--invalid' : '';
      return `bx--progress-step--${states[this.state + 1]}${disabledClass}${invalidClass}`;
    },
  },
  methods: {
    onMouseEnter() {
      if (this.tipText) {
        this.tip = this.tipText;
        this.showOverflow = true;
      } else {
        if (this.$refs.label.scrollWidth > this.$refs.label.clientWidth) {
          this.tip = this.label;
          this.showOverflow = true;
        } else {
          this.tip = '';
          this.showOverflow = false;
        }
      }
    },
    onMouseLeave() {
      this.showOverflow = false;
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-progress/cv-progress-step.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_progress_cv_progress_stepvue_type_script_lang_js_ = (cv_progress_stepvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-progress/cv-progress-step.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_progress_cv_progress_stepvue_type_script_lang_js_,
  cv_progress_stepvue_type_template_id_c4d86f88_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_progress_step = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "25b6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-divider.vue?vue&type=template&id=4984112e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('hr',{staticClass:"cv-toolbar-divider bx--toolbar-menu__divider"})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-divider.vue?vue&type=template&id=4984112e&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-divider.vue?vue&type=script&lang=js&
//
//
//
//

/* harmony default export */ var cv_toolbar_dividervue_type_script_lang_js_ = ({
  name: 'CvToolbarDivider',
});

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-divider.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toolbar_cv_toolbar_dividervue_type_script_lang_js_ = (cv_toolbar_dividervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-divider.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toolbar_cv_toolbar_dividervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toolbar_divider = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "2877":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ "2b0a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-search/cv-search.vue?vue&type=template&id=37bd5ced&
var cv_searchvue_type_template_id_37bd5ced_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-wrapper',{staticClass:"cv-search bx--form-item",attrs:{"tag-type":_vm.formItem ? 'div' : ''}},[_c('div',{ref:"search",staticClass:"bx--search",class:[_vm.searchClasses, { 'cv-search': !_vm.formItem }],attrs:{"role":"search"}},[_c('label',{staticClass:"bx--label",attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.label))]),_c('input',_vm._g(_vm._b({directives:[{name:"model",rawName:"v-model",value:(_vm.internalValue),expression:"internalValue"}],ref:"input",staticClass:"bx--search-input",attrs:{"id":_vm.uid,"type":"text","role":"search","placeholder":_vm.placeholder,"aria-labelledby":_vm.uid},domProps:{"value":(_vm.internalValue)},on:{"blur":_vm.checkFocus,"input":function($event){if($event.target.composing){ return; }_vm.internalValue=$event.target.value}}},'input',_vm.$attrs,false),_vm.inputListeners)),(_vm.isToolbarKind)?_c('button',{staticClass:"bx--toolbar-search__btn",attrs:{"type":"button","aria-label":_vm.toolbarAriaLabel},on:{"click":function($event){return _vm.toggleActive(true)},"blur":_vm.checkFocus}},[_c(_vm.icon,{tag:"component",staticClass:"bx--search-magnifier"})],1):_vm._e(),(!_vm.isToolbarKind)?_c(_vm.icon,{tag:"component",staticClass:"bx--search-magnifier"}):_vm._e(),_c('button',{staticClass:"bx--search-close",class:{ 'bx--search-close--hidden': !_vm.clearVisible },attrs:{"type":"button","title":_vm.clearAriaLabel,"aria-label":_vm.clearAriaLabel},on:{"click":_vm.onClearClick}},[_c('Close16')],1)],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-search/cv-search.vue?vue&type=template&id=37bd5ced&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/search/16.js
var _16 = __webpack_require__("a4de");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/search/20.js



var virtual_Search20 = {
  name: 'Search20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M30,28.59,22.45,21A11,11,0,1,0,21,22.45L28.59,30ZM5,14a9,9,0,1,1,9,9A9,9,0,0,1,5,14Z"
      }
    }), children]);
  }
};

/* harmony default export */ var _20 = (virtual_Search20);

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/16.js
var close_16 = __webpack_require__("5416");

// EXTERNAL MODULE: ./src/components/cv-wrapper/_cv-wrapper.js
var _cv_wrapper = __webpack_require__("5d36");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-search/cv-search.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ var cv_searchvue_type_script_lang_js_ = ({
  name: 'CvSearch',
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  components: { Close16: close_16["a" /* default */], CvWrapper: _cv_wrapper["a" /* default */] },
  inheritAttrs: false,
  props: {
    clearAriaLabel: { type: String, default: 'Clear search input' },
    formItem: { type: Boolean, default: true },
    kind: { type: String, default: undefined },
    label: String,
    size: { type: String, default: undefined },
    small: {
      type: Boolean,
      default: undefined,
      validator(val) {
        if (val !== undefined && "production" === 'development') {
          console.warn('DEPRECARTED: Prefer size property: small, large or xl (default)');
        }
        return true;
      },
    },
    large: {
      type: Boolean,
      default: undefined,
      validator(val) {
        if (val !== undefined && "production" === 'development') {
          console.warn('DEPRECARTED: Prefer size property: small, large or xl (default)');
        }
        return true;
      },
    },
    value: String,
    placeholder: { type: String, default: 'Search' },
    toolbarAriaLabel: { type: String, default: 'Toolbar search' },
  },
  data() {
    return {
      clearVisible: this.value ? this.value.length : false,
      internalValue: this.value,
      toolbarActive: false,
    };
  },
  watch: {
    value() {
      this.clearVisible = this.value ? this.value.length : false;
      this.internalValue = this.value;
    },
  },
  computed: {
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return {
        ...this.$listeners,
        input: this.onInput,
      };
    },
    searchClasses() {
      const themeClass = this.theme.length ? `bx--search--${this.theme}` : '';
      let size;

      if (this.size !== undefined && (this.size || (this.small === undefined && this.large === undefined))) {
        switch (this.size) {
          case 'small':
            size = 'sm';
            break;
          case 'large':
            size = 'lg';
            break;
          default:
            size = 'xl';
            break;
        }
      } else {
        size = this.small ? 'sm' : 'xl';
      }
      const sizeClass = `bx--search--${size}`;

      let toolbarClasses = '';
      if (this.isToolbarKind) {
        toolbarClasses = this.toolbarActive ? 'bx--toolbar-search bx--toolbar-search--active' : 'bx--toolbar-search';
      }
      return `${themeClass} ${sizeClass} ${toolbarClasses}`;
    },
    closeHiddenClass() {
      return this.clearVisible ? '' : 'bx--search-close--hidden';
    },
    isToolbarKind() {
      return this.kind === 'toolbar';
    },
    icon() {
      return this.size === 'xl' ? _20 : _16["a" /* default */];
    },
  },
  methods: {
    onClearClick() {
      this.internalValue = '';
      this.clearVisible = false;
      this.$emit('input', this.internalValue);
    },
    onInput() {
      this.clearVisible = this.internalValue.length > 0;
      return this.$emit('input', this.internalValue);
    },
    toggleActive(force) {
      if (typeof force === 'boolean') {
        this.toolbarActive = force;
      } else {
        this.toolbarActive = !this.toolbarActive;
      }
      if (this.toolbarActive) {
        this.$refs.input.focus();
      }
    },
    checkFocus(ev) {
      if (this.isToolbarKind) {
        if (!this.$el.contains(ev.relatedTarget)) {
          this.toolbarActive = false;
        }
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-search/cv-search.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_search_cv_searchvue_type_script_lang_js_ = (cv_searchvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-search/cv-search.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_search_cv_searchvue_type_script_lang_js_,
  cv_searchvue_type_template_id_37bd5ced_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_search = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "2b52":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/cv-breadcrumb.vue?vue&type=template&id=b27621b6&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:"cv-breadcrumb bx--breadcrumb",class:{ 'bx--breadcrumb--no-trailing-slash': _vm.noTrailingSlash },attrs:{"aria-label":_vm.ariaLabel}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb.vue?vue&type=template&id=b27621b6&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/cv-breadcrumb.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_breadcrumbvue_type_script_lang_js_ = ({
  name: 'CvBreadcrumb',
  props: {
    ariaLabel: { type: String, default: 'breadcrumb' },
    noTrailingSlash: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_breadcrumb_cv_breadcrumbvue_type_script_lang_js_ = (cv_breadcrumbvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_breadcrumb_cv_breadcrumbvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_breadcrumb = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "2b56":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-nav.vue?vue&type=template&id=30a9b3e6&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:"cv-header-nav bx--header__nav"},[_c('ul',{staticClass:"bx--header__menu-bar",attrs:{"role":"menubar","ariaLabeldBy":_vm.ariaLabelledBy}},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-nav.vue?vue&type=template&id=30a9b3e6&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-nav.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_header_navvue_type_script_lang_js_ = ({
  name: 'CvHeaderNav',
  props: {
    ariaLabelledBy: String,
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-nav.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_navvue_type_script_lang_js_ = (cv_header_navvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-nav.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_navvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_nav = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "2b6c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-combo-box/cv-combo-box.vue?vue&type=template&id=04287c5e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-combo-box bx--list-box__wrapper",on:{"focusout":_vm.onFocusOut}},[(_vm.title)?_c('label',{staticClass:"bx--label",class:{ 'bx--label--disabled': _vm.$attrs.disabled },attrs:{"for":_vm.uid}},[_vm._v("\n    "+_vm._s(_vm.title)+"\n  ")]):_vm._e(),(_vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text",class:{ 'bx--form__helper-text--disabled': _vm.$attrs.disabled }},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e(),_c('div',_vm._b({staticClass:"bx--combo-box bx--list-box",class:{
      'bx--list-box--light': _vm.theme === 'light',
      'bx--combo-box--expanded': _vm.open,
      'bx--combo-box--disabled bx--list-box--disabled': _vm.$attrs.disabled,
    },attrs:{"role":"listbox","tabindex":"-1","data-invalid":_vm.isInvalid},on:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.onDown($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.onUp($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.onEnter($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.onEsc($event)}],"click":_vm.onClick}},'div',_vm.$attrs,false),[(_vm.isInvalid)?_c('WarningFilled16',{staticClass:"bx--list-box__invalid-icon"}):_vm._e(),_c('div',{ref:"button",staticClass:"bx--list-box__field",attrs:{"role":"button","aria-haspopup":"true","aria-expanded":_vm.open,"aria-owns":_vm.uid,"aria-controls":_vm.uid,"tabindex":"-1","type":"button","aria-label":_vm.open ? 'close menu' : 'open menu',"data-toggle":"true"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filter),expression:"filter"}],ref:"input",staticClass:"bx--text-input",attrs:{"aria-controls":_vm.uid,"aria-autocomplete":"list","role":"combobox","aria-expanded":_vm.open,"autocomplete":"off","placeholder":_vm.label},domProps:{"value":(_vm.filter)},on:{"input":[function($event){if($event.target.composing){ return; }_vm.filter=$event.target.value},_vm.onInput],"focus":_vm.inputFocus,"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.inputClick($event)}}}),(_vm.filter)?_c('div',{staticClass:"bx--list-box__selection",attrs:{"role":"button","tabindex":"0","title":"Clear filter"},on:{"click":function($event){$event.stopPropagation();return _vm.clearFilter($event)},"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.stopPropagation();$event.preventDefault();return _vm.clearFilter($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.stopPropagation();$event.preventDefault();}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.stopPropagation();$event.preventDefault();return _vm.clearFilter($event)}}},[_c('Close16')],1):_vm._e(),_c('div',{staticClass:"bx--list-box__menu-icon",class:{ 'bx--list-box__menu-icon--open': _vm.open },attrs:{"role":"button"}},[_c('chevron-down-16',{attrs:{"aria-label":_vm.open ? 'Close menu' : 'Open menu'}})],1)]),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.open),expression:"open"}],ref:"list",staticClass:"bx--list-box__menu",attrs:{"id":_vm.uid,"role":"listbox"}},_vm._l((_vm.dataOptions),function(item,index){return _c('div',{key:("combo-box-" + index),ref:"option",refInFor:true,staticClass:"bx--list-box__menu-item",class:{ 'bx--list-box__menu-item--highlighted': _vm.highlighted === item.value },on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onItemClick(item.value)},"mousemove":function($event){return _vm.onMousemove(item.value)},"mousedown":function($event){$event.preventDefault();}}},[_c('div',{staticClass:"bx--list-box__menu-item__option"},[_vm._v(_vm._s(item.label))])])}),0)],1),(_vm.isInvalid)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-combo-box/cv-combo-box.vue?vue&type=template&id=04287c5e&

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var _16 = __webpack_require__("f47d");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/16.js
var chevron_down_16 = __webpack_require__("ae56");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/16.js
var close_16 = __webpack_require__("5416");

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-combo-box/cv-combo-box.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var cv_combo_boxvue_type_script_lang_js_ = ({
  name: 'CvComboBox',
  inheritAttrs: false,
  mixins: [theme_mixin["a" /* default */], uid_mixin["a" /* default */]],
  components: { WarningFilled16: _16["a" /* default */], ChevronDown16: chevron_down_16["a" /* default */], Close16: close_16["a" /* default */] },
  props: {
    autoFilter: Boolean,
    autoHighlight: Boolean,
    invalidMessage: { type: String, default: undefined },
    helperText: { type: String, default: undefined },
    title: String,
    label: {
      type: String,
      default: 'Choose options',
    },
    highlight: String,
    value: String,
    options: {
      type: Array,
      required: true,
      validator(list) {
        const result = list.every(
          item => typeof item.name === 'string' && typeof item.label === 'string' && typeof item.value === 'string'
        );
        if (!result) {
          console.warn('CvComboBox - all options must have name, label and value');
        }
        return result;
      },
    },
  },
  data() {
    return {
      open: false,
      dataOptions: null,
      dataValue: this.value,
      dataHighlighted: null,
      dataFilter: null,
      isHelper: false,
      isInvalid: false,
    };
  },
  model: {
    prop: 'value',
    event: 'change',
  },
  watch: {
    highlight() {
      this.highlighted = this.highlight;
    },
    value() {
      this.dataValue = this.value;
      this.highlighted = this.value;
      this.internalUpdateValue(this.value);
    },
    options() {
      this.updateOptions();
    },
  },
  created() {
    this.updateOptions();
  },
  mounted() {
    this.filter = this.value;
    this.highlighted = this.value ? this.value : this.highlight; // override highlight with value if provided
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  computed: {
    highlighted: {
      get() {
        return this.dataHighlighted;
      },
      set(val) {
        let firstMatchIndex = this.dataOptions.findIndex(item => item.value === val);
        if (firstMatchIndex < 0) {
          firstMatchIndex = this.dataOptions.length ? 0 : -1;
          this.dataHighlighted = firstMatchIndex >= 0 ? this.dataOptions[0].value : '';
        } else {
          this.dataHighlighted = val;
        }
        if (firstMatchIndex >= 0) {
          this.$nextTick(() => {
            // $nextTick to prevent highlight check ahead of list update on filter
            this.checkHighlightPosition(firstMatchIndex);
          });
        }
      },
    },
    filter: {
      get() {
        return this.dataFilter;
      },
      set(val) {
        this.dataFilter = val ? val : '';
        this.$emit('filter', val);
      },
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
    clearFilter() {
      this.internalUpdateValue('');
      this.filter = '';
      this.$refs.input.focus();
      this.doOpen(true);
      this.updateOptions();
      this.$emit('change', this.dataValue);
    },
    checkHighlightPosition(newHiglight) {
      if (this.$refs.list && this.$refs.option) {
        if (this.$refs.list.scrollTop > this.$refs.option[newHiglight].offsetTop) {
          this.$refs.list.scrollTop = this.$refs.option[newHiglight].offsetTop;
        } else if (
          this.$refs.list.scrollTop + this.$refs.list.clientHeight <
          this.$refs.option[newHiglight].offsetTop + this.$refs.option[newHiglight].offsetHeight
        ) {
          this.$refs.list.scrollTop =
            this.$refs.option[newHiglight].offsetTop +
            this.$refs.option[newHiglight].offsetHeight -
            this.$refs.list.clientHeight;
        }
      }
    },
    doMove(up) {
      if (this.dataOptions.length > 0) {
        // requery could have changed
        const currentHighlight = this.dataOptions.findIndex(item => item.value === this.highlighted);
        let newHiglight;

        if (up) {
          if (currentHighlight <= 0) {
            newHiglight = this.dataOptions.length - 1;
          } else {
            newHiglight = currentHighlight - 1;
          }
        } else {
          if (currentHighlight >= this.dataOptions.length - 1) {
            newHiglight = 0;
          } else {
            newHiglight = currentHighlight + 1;
          }
        }
        this.highlighted = this.dataOptions[newHiglight].value;
        // this.checkHighlightPosition(newHiglight);
      }
    },
    updateOptions() {
      if (this.autoFilter && this.filter) {
        const escFilter = this.filter.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
        const pat = new RegExp(escFilter, 'iu');
        this.dataOptions = this.options.filter(opt => pat.test(opt.label)).slice(0);
      } else {
        this.dataOptions = this.options.slice(0);
      }
      if (this.highlight !== this.highlighted) {
        this.highlighted = this.highlight;
      }
    },
    updateHighlight() {
      let firstMatchIndex;
      if (this.autoHighlight && this.dataOptions.length > 0) {
        // then highlight first match
        const filterRegex = new RegExp(this.filter, 'iu');
        firstMatchIndex = this.dataOptions.findIndex(item => filterRegex.test(item.label));
        if (firstMatchIndex < 0) {
          firstMatchIndex = 0;
        }
        this.highlighted = this.dataOptions[firstMatchIndex].value;
        // this.checkHighlightPosition(firstMatchIndex);
      }
    },
    onInput() {
      this.doOpen(true);

      this.updateOptions();
      this.updateHighlight();
    },
    doOpen(newVal) {
      this.open = newVal;
    },
    onDown() {
      if (!this.open) {
        this.doOpen(true);
      } else {
        this.doMove(false);
      }
    },
    onUp() {
      if (this.open) {
        this.doMove(true);
      }
    },
    onEsc() {
      this.doOpen(false);
      this.$el.focus();
    },
    onEnter() {
      this.doOpen(!this.open);
      if (!this.open) {
        this.onItemClick(this.highlighted);
        this.$refs.input.focus();
      }
    },
    onClick() {
      this.doOpen(!this.open);
      if (this.open) {
        this.$refs.input.focus();
      } else {
        this.$refs.button.focus();
      }
    },
    clearValues() {
      this.dataValue = '';
      this.$refs.input.focus();
      this.$emit('change', this.dataValue);
    },
    onFocusOut(ev) {
      if (!this.$el.contains(ev.relatedTarget)) {
        this.doOpen(false);
      }
    },
    onMousemove(val) {
      this.highlighted = val;
    },
    internalUpdateValue(val) {
      this.dataValue = val;
      const filterOption = this.dataOptions.find(item => item.value === val);
      if (filterOption) {
        this.filter = filterOption.label;
      }
    },
    onItemClick(val) {
      this.internalUpdateValue(val);
      this.$refs.input.focus();
      this.open = false; // close after user makes a selection
      this.$emit('change', this.dataValue);
    },
    inputClick() {
      if (!this.open) {
        this.doOpen(true);
      }
    },
    inputFocus() {
      this.doOpen(true);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-combo-box/cv-combo-box.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_combo_box_cv_combo_boxvue_type_script_lang_js_ = (cv_combo_boxvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-combo-box/cv-combo-box.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_combo_box_cv_combo_boxvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_combo_box = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "2f28":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-link/cv-link.vue?vue&type=template&id=4f7e43d6&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-link bx--link",class:{ 'bx--link--inline': _vm.inline }},'component',_vm.linkProps,false),_vm.$listeners),[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-link/cv-link.vue?vue&type=template&id=4f7e43d6&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-link/cv-link.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_linkvue_type_script_lang_js_ = ({
  name: 'CvLink',
  mixins: [link_mixin["a" /* default */]],
  props: {
    inline: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-link/cv-link.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_link_cv_linkvue_type_script_lang_js_ = (cv_linkvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-link/cv-link.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_link_cv_linkvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_link = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "2ff2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/cv-code-snippet-skeleton.vue?vue&type=template&id=cda327a2&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--snippet bx--skeleton",class:_vm.typeClass},[_c('div',{staticClass:"bx--snippet-container"},[(!_vm.multi)?_c('span'):_vm._e(),(_vm.multi)?_c('span'):_vm._e(),(_vm.multi)?_c('span'):_vm._e(),(_vm.multi)?_c('span'):_vm._e()])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-code-snippet/cv-code-snippet-skeleton.vue?vue&type=template&id=cda327a2&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/cv-code-snippet-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_code_snippet_skeletonvue_type_script_lang_js_ = ({
  name: 'CvCodeSnippetSkeleton',
  props: {
    kind: { type: String, default: 'oneline' },
  },
  computed: {
    typeClass() {
      return `bx--snippet--${this.multi ? 'multi' : 'single'}`;
    },
    multi() {
      return this.kind === 'multiline';
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-code-snippet/cv-code-snippet-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_code_snippet_cv_code_snippet_skeletonvue_type_script_lang_js_ = (cv_code_snippet_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-code-snippet/cv-code-snippet-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_code_snippet_cv_code_snippet_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_code_snippet_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "3108":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tag/cv-tag-skeleton.vue?vue&type=template&id=c8caf19a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-tag bx--tag bx--skeleton"})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tag/cv-tag-skeleton.vue?vue&type=template&id=c8caf19a&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tag/cv-tag-skeleton.vue?vue&type=script&lang=js&
//
//
//
//

/* harmony default export */ var cv_tag_skeletonvue_type_script_lang_js_ = ({
  name: 'CvTagSkeleton',
});

// CONCATENATED MODULE: ./src/components/cv-tag/cv-tag-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tag_cv_tag_skeletonvue_type_script_lang_js_ = (cv_tag_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tag/cv-tag-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tag_cv_tag_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_tag_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "3691":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-list/cv-list-item.vue?vue&type=template&id=c560dfe8&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-list-item bx--list__item"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-list/cv-list-item.vue?vue&type=template&id=c560dfe8&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-list/cv-list-item.vue?vue&type=script&lang=js&
//
//
//
//

/* harmony default export */ var cv_list_itemvue_type_script_lang_js_ = ({
  name: 'CvListItem',
});

// CONCATENATED MODULE: ./src/components/cv-list/cv-list-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_list_cv_list_itemvue_type_script_lang_js_ = (cv_list_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-list/cv-list-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_list_cv_list_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_list_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "3bda":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultAttributes", function() { return defaultAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAttributes", function() { return getAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatAttributes", function() { return formatAttributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toString", function() { return toString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toSVG", function() { return toSVG; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var defaultAttributes = {
  // Reference:
  // https://github.com/IBM/carbon-components-react/issues/1392
  // https://github.com/PolymerElements/iron-iconset-svg/pull/47
  // `focusable` is a string attribute which is why we do not use a boolean here
  focusable: 'false',
  preserveAspectRatio: 'xMidYMid meet'
};
/**
 * Get supplementary HTML attributes for a given <svg> element based on existing
 * attributes.
 */

function getAttributes() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      width = _ref.width,
      height = _ref.height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === void 0 ? "0 0 ".concat(width, " ").concat(height) : _ref$viewBox,
      attributes = _objectWithoutProperties(_ref, ["width", "height", "viewBox"]);

  var tabindex = attributes.tabindex,
      rest = _objectWithoutProperties(attributes, ["tabindex"]);

  var iconAttributes = _objectSpread2({}, defaultAttributes, {}, rest, {
    width: width,
    height: height,
    viewBox: viewBox
  }); // TODO: attributes.title assumes that the consumer will implement <title> and
  // correctly set `aria-labelledby`.


  if (iconAttributes['aria-label'] || iconAttributes['aria-labelledby'] || iconAttributes.title) {
    iconAttributes.role = 'img'; // Reference:
    // https://allyjs.io/tutorials/focusing-in-svg.html

    if (tabindex !== undefined && tabindex !== null) {
      iconAttributes.focusable = 'true';
      iconAttributes.tabindex = tabindex;
    }
  } else {
    iconAttributes['aria-hidden'] = true;
  }

  return iconAttributes;
}

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * Convert an icon descriptor to a String
 */

function toString(descriptor) {
  var _descriptor$elem = descriptor.elem,
      elem = _descriptor$elem === void 0 ? 'svg' : _descriptor$elem,
      _descriptor$attrs = descriptor.attrs,
      attrs = _descriptor$attrs === void 0 ? {} : _descriptor$attrs,
      _descriptor$content = descriptor.content,
      content = _descriptor$content === void 0 ? [] : _descriptor$content;
  var children = content.map(toString).join('');

  if (elem !== 'svg') {
    return "<".concat(elem, " ").concat(formatAttributes(attrs), ">").concat(children, "</").concat(elem, ">");
  }

  return "<".concat(elem, " ").concat(formatAttributes(getAttributes(attrs)), ">").concat(children, "</").concat(elem, ">");
}
function formatAttributes(attrs) {
  return Object.keys(attrs).reduce(function (acc, key, index) {
    var attribute = "".concat(key, "=\"").concat(attrs[key], "\"");

    if (index === 0) {
      return attribute;
    }

    return acc + ' ' + attribute;
  }, '');
}

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * Convert an icon descriptor to a DOM node.
 */

function toSVG(descriptor) {
  var _descriptor$elem = descriptor.elem,
      elem = _descriptor$elem === void 0 ? 'svg' : _descriptor$elem,
      _descriptor$attrs = descriptor.attrs,
      attrs = _descriptor$attrs === void 0 ? {} : _descriptor$attrs,
      _descriptor$content = descriptor.content,
      content = _descriptor$content === void 0 ? [] : _descriptor$content;
  var node = document.createElementNS('http://www.w3.org/2000/svg', elem);
  var attributes = elem !== 'svg' ? attrs : getAttributes(attrs);
  Object.keys(attributes).forEach(function (key) {
    node.setAttribute(key, attrs[key]);
  });

  for (var i = 0; i < content.length; i++) {
    node.appendChild(toSVG(content[i]));
  }

  return node;
}

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */




/***/ }),

/***/ "3f45":
/***/ (function(module, exports, __webpack_require__) {

/* flatpickr v4.6.1, @license MIT */
(function (global, factory) {
     true ? module.exports = factory() :
    undefined;
}(this, function () { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    var HOOKS = [
        "onChange",
        "onClose",
        "onDayCreate",
        "onDestroy",
        "onKeyDown",
        "onMonthChange",
        "onOpen",
        "onParseConfig",
        "onReady",
        "onValueUpdate",
        "onYearChange",
        "onPreCalendarPosition",
    ];
    var defaults = {
        _disable: [],
        _enable: [],
        allowInput: false,
        altFormat: "F j, Y",
        altInput: false,
        altInputClass: "form-control input",
        animate: typeof window === "object" &&
            window.navigator.userAgent.indexOf("MSIE") === -1,
        ariaDateFormat: "F j, Y",
        clickOpens: true,
        closeOnSelect: true,
        conjunction: ", ",
        dateFormat: "Y-m-d",
        defaultHour: 12,
        defaultMinute: 0,
        defaultSeconds: 0,
        disable: [],
        disableMobile: false,
        enable: [],
        enableSeconds: false,
        enableTime: false,
        errorHandler: function (err) {
            return typeof console !== "undefined" && console.warn(err);
        },
        getWeek: function (givenDate) {
            var date = new Date(givenDate.getTime());
            date.setHours(0, 0, 0, 0);
            // Thursday in current week decides the year.
            date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));
            // January 4 is always in week 1.
            var week1 = new Date(date.getFullYear(), 0, 4);
            // Adjust to Thursday in week 1 and count number of weeks from date to week1.
            return (1 +
                Math.round(((date.getTime() - week1.getTime()) / 86400000 -
                    3 +
                    ((week1.getDay() + 6) % 7)) /
                    7));
        },
        hourIncrement: 1,
        ignoredFocusElements: [],
        inline: false,
        locale: "default",
        minuteIncrement: 5,
        mode: "single",
        nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
        noCalendar: false,
        now: new Date(),
        onChange: [],
        onClose: [],
        onDayCreate: [],
        onDestroy: [],
        onKeyDown: [],
        onMonthChange: [],
        onOpen: [],
        onParseConfig: [],
        onReady: [],
        onValueUpdate: [],
        onYearChange: [],
        onPreCalendarPosition: [],
        plugins: [],
        position: "auto",
        positionElement: undefined,
        prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
        shorthandCurrentMonth: false,
        showMonths: 1,
        static: false,
        time_24hr: false,
        weekNumbers: false,
        wrap: false
    };

    var english = {
        weekdays: {
            shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            longhand: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
            ],
            longhand: [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
            ]
        },
        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
        firstDayOfWeek: 0,
        ordinal: function (nth) {
            var s = nth % 100;
            if (s > 3 && s < 21)
                return "th";
            switch (s % 10) {
                case 1:
                    return "st";
                case 2:
                    return "nd";
                case 3:
                    return "rd";
                default:
                    return "th";
            }
        },
        rangeSeparator: " to ",
        weekAbbreviation: "Wk",
        scrollTitle: "Scroll to increment",
        toggleTitle: "Click to toggle",
        amPM: ["AM", "PM"],
        yearAriaLabel: "Year",
        time_24hr: false
    };

    var pad = function (number) { return ("0" + number).slice(-2); };
    var int = function (bool) { return (bool === true ? 1 : 0); };
    /* istanbul ignore next */
    function debounce(func, wait, immediate) {
        if (immediate === void 0) { immediate = false; }
        var timeout;
        return function () {
            var context = this, args = arguments;
            timeout !== null && clearTimeout(timeout);
            timeout = window.setTimeout(function () {
                timeout = null;
                if (!immediate)
                    func.apply(context, args);
            }, wait);
            if (immediate && !timeout)
                func.apply(context, args);
        };
    }
    var arrayify = function (obj) {
        return obj instanceof Array ? obj : [obj];
    };

    function toggleClass(elem, className, bool) {
        if (bool === true)
            return elem.classList.add(className);
        elem.classList.remove(className);
    }
    function createElement(tag, className, content) {
        var e = window.document.createElement(tag);
        className = className || "";
        content = content || "";
        e.className = className;
        if (content !== undefined)
            e.textContent = content;
        return e;
    }
    function clearNode(node) {
        while (node.firstChild)
            node.removeChild(node.firstChild);
    }
    function findParent(node, condition) {
        if (condition(node))
            return node;
        else if (node.parentNode)
            return findParent(node.parentNode, condition);
        return undefined; // nothing found
    }
    function createNumberInput(inputClassName, opts) {
        var wrapper = createElement("div", "numInputWrapper"), numInput = createElement("input", "numInput " + inputClassName), arrowUp = createElement("span", "arrowUp"), arrowDown = createElement("span", "arrowDown");
        if (navigator.userAgent.indexOf("MSIE 9.0") === -1) {
            numInput.type = "number";
        }
        else {
            numInput.type = "text";
            numInput.pattern = "\\d*";
        }
        if (opts !== undefined)
            for (var key in opts)
                numInput.setAttribute(key, opts[key]);
        wrapper.appendChild(numInput);
        wrapper.appendChild(arrowUp);
        wrapper.appendChild(arrowDown);
        return wrapper;
    }
    function getEventTarget(event) {
        if (typeof event.composedPath === "function") {
            var path = event.composedPath();
            return path[0];
        }
        return event.target;
    }

    var doNothing = function () { return undefined; };
    var monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? "shorthand" : "longhand"][monthNumber]; };
    var revFormat = {
        D: doNothing,
        F: function (dateObj, monthName, locale) {
            dateObj.setMonth(locale.months.longhand.indexOf(monthName));
        },
        G: function (dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
        },
        H: function (dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
        },
        J: function (dateObj, day) {
            dateObj.setDate(parseFloat(day));
        },
        K: function (dateObj, amPM, locale) {
            dateObj.setHours((dateObj.getHours() % 12) +
                12 * int(new RegExp(locale.amPM[1], "i").test(amPM)));
        },
        M: function (dateObj, shortMonth, locale) {
            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));
        },
        S: function (dateObj, seconds) {
            dateObj.setSeconds(parseFloat(seconds));
        },
        U: function (_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },
        W: function (dateObj, weekNum, locale) {
            var weekNumber = parseInt(weekNum);
            var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);
            date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);
            return date;
        },
        Y: function (dateObj, year) {
            dateObj.setFullYear(parseFloat(year));
        },
        Z: function (_, ISODate) { return new Date(ISODate); },
        d: function (dateObj, day) {
            dateObj.setDate(parseFloat(day));
        },
        h: function (dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
        },
        i: function (dateObj, minutes) {
            dateObj.setMinutes(parseFloat(minutes));
        },
        j: function (dateObj, day) {
            dateObj.setDate(parseFloat(day));
        },
        l: doNothing,
        m: function (dateObj, month) {
            dateObj.setMonth(parseFloat(month) - 1);
        },
        n: function (dateObj, month) {
            dateObj.setMonth(parseFloat(month) - 1);
        },
        s: function (dateObj, seconds) {
            dateObj.setSeconds(parseFloat(seconds));
        },
        u: function (_, unixMillSeconds) {
            return new Date(parseFloat(unixMillSeconds));
        },
        w: doNothing,
        y: function (dateObj, year) {
            dateObj.setFullYear(2000 + parseFloat(year));
        }
    };
    var tokenRegex = {
        D: "(\\w+)",
        F: "(\\w+)",
        G: "(\\d\\d|\\d)",
        H: "(\\d\\d|\\d)",
        J: "(\\d\\d|\\d)\\w+",
        K: "",
        M: "(\\w+)",
        S: "(\\d\\d|\\d)",
        U: "(.+)",
        W: "(\\d\\d|\\d)",
        Y: "(\\d{4})",
        Z: "(.+)",
        d: "(\\d\\d|\\d)",
        h: "(\\d\\d|\\d)",
        i: "(\\d\\d|\\d)",
        j: "(\\d\\d|\\d)",
        l: "(\\w+)",
        m: "(\\d\\d|\\d)",
        n: "(\\d\\d|\\d)",
        s: "(\\d\\d|\\d)",
        u: "(.+)",
        w: "(\\d\\d|\\d)",
        y: "(\\d{2})"
    };
    var formats = {
        // get the date in UTC
        Z: function (date) { return date.toISOString(); },
        // weekday name, short, e.g. Thu
        D: function (date, locale, options) {
            return locale.weekdays.shorthand[formats.w(date, locale, options)];
        },
        // full month name e.g. January
        F: function (date, locale, options) {
            return monthToStr(formats.n(date, locale, options) - 1, false, locale);
        },
        // padded hour 1-12
        G: function (date, locale, options) {
            return pad(formats.h(date, locale, options));
        },
        // hours with leading zero e.g. 03
        H: function (date) { return pad(date.getHours()); },
        // day (1-30) with ordinal suffix e.g. 1st, 2nd
        J: function (date, locale) {
            return locale.ordinal !== undefined
                ? date.getDate() + locale.ordinal(date.getDate())
                : date.getDate();
        },
        // AM/PM
        K: function (date, locale) { return locale.amPM[int(date.getHours() > 11)]; },
        // shorthand month e.g. Jan, Sep, Oct, etc
        M: function (date, locale) {
            return monthToStr(date.getMonth(), true, locale);
        },
        // seconds 00-59
        S: function (date) { return pad(date.getSeconds()); },
        // unix timestamp
        U: function (date) { return date.getTime() / 1000; },
        W: function (date, _, options) {
            return options.getWeek(date);
        },
        // full year e.g. 2016
        Y: function (date) { return date.getFullYear(); },
        // day in month, padded (01-30)
        d: function (date) { return pad(date.getDate()); },
        // hour from 1-12 (am/pm)
        h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },
        // minutes, padded with leading zero e.g. 09
        i: function (date) { return pad(date.getMinutes()); },
        // day in month (1-30)
        j: function (date) { return date.getDate(); },
        // weekday name, full, e.g. Thursday
        l: function (date, locale) {
            return locale.weekdays.longhand[date.getDay()];
        },
        // padded month number (01-12)
        m: function (date) { return pad(date.getMonth() + 1); },
        // the month number (1-12)
        n: function (date) { return date.getMonth() + 1; },
        // seconds 0-59
        s: function (date) { return date.getSeconds(); },
        // Unix Milliseconds
        u: function (date) { return date.getTime(); },
        // number of the day of the week
        w: function (date) { return date.getDay(); },
        // last two digits of year e.g. 16 for 2016
        y: function (date) { return String(date.getFullYear()).substring(2); }
    };

    var createDateFormatter = function (_a) {
        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;
        return function (dateObj, frmt, overrideLocale) {
            var locale = overrideLocale || l10n;
            if (config.formatDate !== undefined) {
                return config.formatDate(dateObj, frmt, locale);
            }
            return frmt
                .split("")
                .map(function (c, i, arr) {
                return formats[c] && arr[i - 1] !== "\\"
                    ? formats[c](dateObj, locale, config)
                    : c !== "\\"
                        ? c
                        : "";
            })
                .join("");
        };
    };
    var createDateParser = function (_a) {
        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;
        return function (date, givenFormat, timeless, customLocale) {
            if (date !== 0 && !date)
                return undefined;
            var locale = customLocale || l10n;
            var parsedDate;
            var dateOrig = date;
            if (date instanceof Date)
                parsedDate = new Date(date.getTime());
            else if (typeof date !== "string" &&
                date.toFixed !== undefined // timestamp
            )
                // create a copy
                parsedDate = new Date(date);
            else if (typeof date === "string") {
                // date string
                var format = givenFormat || (config || defaults).dateFormat;
                var datestr = String(date).trim();
                if (datestr === "today") {
                    parsedDate = new Date();
                    timeless = true;
                }
                else if (/Z$/.test(datestr) ||
                    /GMT$/.test(datestr) // datestrings w/ timezone
                )
                    parsedDate = new Date(date);
                else if (config && config.parseDate)
                    parsedDate = config.parseDate(date, format);
                else {
                    parsedDate =
                        !config || !config.noCalendar
                            ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)
                            : new Date(new Date().setHours(0, 0, 0, 0));
                    var matched = void 0, ops = [];
                    for (var i = 0, matchIndex = 0, regexStr = ""; i < format.length; i++) {
                        var token_1 = format[i];
                        var isBackSlash = token_1 === "\\";
                        var escaped = format[i - 1] === "\\" || isBackSlash;
                        if (tokenRegex[token_1] && !escaped) {
                            regexStr += tokenRegex[token_1];
                            var match = new RegExp(regexStr).exec(date);
                            if (match && (matched = true)) {
                                ops[token_1 !== "Y" ? "push" : "unshift"]({
                                    fn: revFormat[token_1],
                                    val: match[++matchIndex]
                                });
                            }
                        }
                        else if (!isBackSlash)
                            regexStr += "."; // don't really care
                        ops.forEach(function (_a) {
                            var fn = _a.fn, val = _a.val;
                            return (parsedDate = fn(parsedDate, val, locale) || parsedDate);
                        });
                    }
                    parsedDate = matched ? parsedDate : undefined;
                }
            }
            /* istanbul ignore next */
            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {
                config.errorHandler(new Error("Invalid date provided: " + dateOrig));
                return undefined;
            }
            if (timeless === true)
                parsedDate.setHours(0, 0, 0, 0);
            return parsedDate;
        };
    };
    /**
     * Compute the difference in dates, measured in ms
     */
    function compareDates(date1, date2, timeless) {
        if (timeless === void 0) { timeless = true; }
        if (timeless !== false) {
            return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -
                new Date(date2.getTime()).setHours(0, 0, 0, 0));
        }
        return date1.getTime() - date2.getTime();
    }
    var isBetween = function (ts, ts1, ts2) {
        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);
    };
    var duration = {
        DAY: 86400000
    };

    if (typeof Object.assign !== "function") {
        Object.assign = function (target) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            if (!target) {
                throw TypeError("Cannot convert undefined or null to object");
            }
            var _loop_1 = function (source) {
                if (source) {
                    Object.keys(source).forEach(function (key) { return (target[key] = source[key]); });
                }
            };
            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
                var source = args_1[_a];
                _loop_1(source);
            }
            return target;
        };
    }

    var DEBOUNCED_CHANGE_MS = 300;
    function FlatpickrInstance(element, instanceConfig) {
        var self = {
            config: __assign({}, defaults, flatpickr.defaultConfig),
            l10n: english
        };
        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });
        self._handlers = [];
        self.pluginElements = [];
        self.loadedPlugins = [];
        self._bind = bind;
        self._setHoursFromDate = setHoursFromDate;
        self._positionCalendar = positionCalendar;
        self.changeMonth = changeMonth;
        self.changeYear = changeYear;
        self.clear = clear;
        self.close = close;
        self._createElement = createElement;
        self.destroy = destroy;
        self.isEnabled = isEnabled;
        self.jumpToDate = jumpToDate;
        self.open = open;
        self.redraw = redraw;
        self.set = set;
        self.setDate = setDate;
        self.toggle = toggle;
        function setupHelperFunctions() {
            self.utils = {
                getDaysInMonth: function (month, yr) {
                    if (month === void 0) { month = self.currentMonth; }
                    if (yr === void 0) { yr = self.currentYear; }
                    if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))
                        return 29;
                    return self.l10n.daysInMonth[month];
                }
            };
        }
        function init() {
            self.element = self.input = element;
            self.isOpen = false;
            parseConfig();
            setupLocale();
            setupInputs();
            setupDates();
            setupHelperFunctions();
            if (!self.isMobile)
                build();
            bindEvents();
            if (self.selectedDates.length || self.config.noCalendar) {
                if (self.config.enableTime) {
                    setHoursFromDate(self.config.noCalendar
                        ? self.latestSelectedDateObj || self.config.minDate
                        : undefined);
                }
                updateValue(false);
            }
            setCalendarWidth();
            self.showTimeInput =
                self.selectedDates.length > 0 || self.config.noCalendar;
            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
            /* TODO: investigate this further
        
              Currently, there is weird positioning behavior in safari causing pages
              to scroll up. https://github.com/chmln/flatpickr/issues/563
        
              However, most browsers are not Safari and positioning is expensive when used
              in scale. https://github.com/chmln/flatpickr/issues/1096
            */
            if (!self.isMobile && isSafari) {
                positionCalendar();
            }
            triggerEvent("onReady");
        }
        function bindToInstance(fn) {
            return fn.bind(self);
        }
        function setCalendarWidth() {
            var config = self.config;
            if (config.weekNumbers === false && config.showMonths === 1)
                return;
            else if (config.noCalendar !== true) {
                window.requestAnimationFrame(function () {
                    if (self.calendarContainer !== undefined) {
                        self.calendarContainer.style.visibility = "hidden";
                        self.calendarContainer.style.display = "block";
                    }
                    if (self.daysContainer !== undefined) {
                        var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;
                        self.daysContainer.style.width = daysWidth + "px";
                        self.calendarContainer.style.width =
                            daysWidth +
                                (self.weekWrapper !== undefined
                                    ? self.weekWrapper.offsetWidth
                                    : 0) +
                                "px";
                        self.calendarContainer.style.removeProperty("visibility");
                        self.calendarContainer.style.removeProperty("display");
                    }
                });
            }
        }
        /**
         * The handler for all events targeting the time inputs
         */
        function updateTime(e) {
            if (self.selectedDates.length === 0) {
                setDefaultTime();
            }
            if (e !== undefined && e.type !== "blur") {
                timeWrapper(e);
            }
            var prevValue = self._input.value;
            setHoursFromInputs();
            updateValue();
            if (self._input.value !== prevValue) {
                self._debouncedChange();
            }
        }
        function ampm2military(hour, amPM) {
            return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);
        }
        function military2ampm(hour) {
            switch (hour % 24) {
                case 0:
                case 12:
                    return 12;
                default:
                    return hour % 12;
            }
        }
        /**
         * Syncs the selected date object time with user's time input
         */
        function setHoursFromInputs() {
            if (self.hourElement === undefined || self.minuteElement === undefined)
                return;
            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined
                ? (parseInt(self.secondElement.value, 10) || 0) % 60
                : 0;
            if (self.amPM !== undefined) {
                hours = ampm2military(hours, self.amPM.textContent);
            }
            var limitMinHours = self.config.minTime !== undefined ||
                (self.config.minDate &&
                    self.minDateHasTime &&
                    self.latestSelectedDateObj &&
                    compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===
                        0);
            var limitMaxHours = self.config.maxTime !== undefined ||
                (self.config.maxDate &&
                    self.maxDateHasTime &&
                    self.latestSelectedDateObj &&
                    compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===
                        0);
            if (limitMaxHours) {
                var maxTime = self.config.maxTime !== undefined
                    ? self.config.maxTime
                    : self.config.maxDate;
                hours = Math.min(hours, maxTime.getHours());
                if (hours === maxTime.getHours())
                    minutes = Math.min(minutes, maxTime.getMinutes());
                if (minutes === maxTime.getMinutes())
                    seconds = Math.min(seconds, maxTime.getSeconds());
            }
            if (limitMinHours) {
                var minTime = self.config.minTime !== undefined
                    ? self.config.minTime
                    : self.config.minDate;
                hours = Math.max(hours, minTime.getHours());
                if (hours === minTime.getHours())
                    minutes = Math.max(minutes, minTime.getMinutes());
                if (minutes === minTime.getMinutes())
                    seconds = Math.max(seconds, minTime.getSeconds());
            }
            setHours(hours, minutes, seconds);
        }
        /**
         * Syncs time input values with a date
         */
        function setHoursFromDate(dateObj) {
            var date = dateObj || self.latestSelectedDateObj;
            if (date)
                setHours(date.getHours(), date.getMinutes(), date.getSeconds());
        }
        function setDefaultHours() {
            var hours = self.config.defaultHour;
            var minutes = self.config.defaultMinute;
            var seconds = self.config.defaultSeconds;
            if (self.config.minDate !== undefined) {
                var minHr = self.config.minDate.getHours();
                var minMinutes = self.config.minDate.getMinutes();
                hours = Math.max(hours, minHr);
                if (hours === minHr)
                    minutes = Math.max(minMinutes, minutes);
                if (hours === minHr && minutes === minMinutes)
                    seconds = self.config.minDate.getSeconds();
            }
            if (self.config.maxDate !== undefined) {
                var maxHr = self.config.maxDate.getHours();
                var maxMinutes = self.config.maxDate.getMinutes();
                hours = Math.min(hours, maxHr);
                if (hours === maxHr)
                    minutes = Math.min(maxMinutes, minutes);
                if (hours === maxHr && minutes === maxMinutes)
                    seconds = self.config.maxDate.getSeconds();
            }
            setHours(hours, minutes, seconds);
        }
        /**
         * Sets the hours, minutes, and optionally seconds
         * of the latest selected date object and the
         * corresponding time inputs
         * @param {Number} hours the hour. whether its military
         *                 or am-pm gets inferred from config
         * @param {Number} minutes the minutes
         * @param {Number} seconds the seconds (optional)
         */
        function setHours(hours, minutes, seconds) {
            if (self.latestSelectedDateObj !== undefined) {
                self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);
            }
            if (!self.hourElement || !self.minuteElement || self.isMobile)
                return;
            self.hourElement.value = pad(!self.config.time_24hr
                ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)
                : hours);
            self.minuteElement.value = pad(minutes);
            if (self.amPM !== undefined)
                self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];
            if (self.secondElement !== undefined)
                self.secondElement.value = pad(seconds);
        }
        /**
         * Handles the year input and incrementing events
         * @param {Event} event the keyup or increment event
         */
        function onYearInput(event) {
            var year = parseInt(event.target.value) + (event.delta || 0);
            if (year / 1000 > 1 ||
                (event.key === "Enter" && !/[^\d]/.test(year.toString()))) {
                changeYear(year);
            }
        }
        /**
         * Essentially addEventListener + tracking
         * @param {Element} element the element to addEventListener to
         * @param {String} event the event name
         * @param {Function} handler the event handler
         */
        function bind(element, event, handler, options) {
            if (event instanceof Array)
                return event.forEach(function (ev) { return bind(element, ev, handler, options); });
            if (element instanceof Array)
                return element.forEach(function (el) { return bind(el, event, handler, options); });
            element.addEventListener(event, handler, options);
            self._handlers.push({
                element: element,
                event: event,
                handler: handler,
                options: options
            });
        }
        /**
         * A mousedown handler which mimics click.
         * Minimizes latency, since we don't need to wait for mouseup in most cases.
         * Also, avoids handling right clicks.
         *
         * @param {Function} handler the event handler
         */
        function onClick(handler) {
            return function (evt) {
                evt.which === 1 && handler(evt);
            };
        }
        function triggerChange() {
            triggerEvent("onChange");
        }
        /**
         * Adds all the necessary event listeners
         */
        function bindEvents() {
            if (self.config.wrap) {
                ["open", "close", "toggle", "clear"].forEach(function (evt) {
                    Array.prototype.forEach.call(self.element.querySelectorAll("[data-" + evt + "]"), function (el) {
                        return bind(el, "click", self[evt]);
                    });
                });
            }
            if (self.isMobile) {
                setupMobile();
                return;
            }
            var debouncedResize = debounce(onResize, 50);
            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);
            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))
                bind(self.daysContainer, "mouseover", function (e) {
                    if (self.config.mode === "range")
                        onMouseOver(e.target);
                });
            bind(window.document.body, "keydown", onKeyDown);
            if (!self.config.inline && !self.config.static)
                bind(window, "resize", debouncedResize);
            if (window.ontouchstart !== undefined)
                bind(window.document, "touchstart", documentClick);
            else
                bind(window.document, "mousedown", onClick(documentClick));
            bind(window.document, "focus", documentClick, { capture: true });
            if (self.config.clickOpens === true) {
                bind(self._input, "focus", self.open);
                bind(self._input, "mousedown", onClick(self.open));
            }
            if (self.daysContainer !== undefined) {
                bind(self.monthNav, "mousedown", onClick(onMonthNavClick));
                bind(self.monthNav, ["keyup", "increment"], onYearInput);
                bind(self.daysContainer, "mousedown", onClick(selectDate));
            }
            if (self.timeContainer !== undefined &&
                self.minuteElement !== undefined &&
                self.hourElement !== undefined) {
                var selText = function (e) {
                    return e.target.select();
                };
                bind(self.timeContainer, ["increment"], updateTime);
                bind(self.timeContainer, "blur", updateTime, { capture: true });
                bind(self.timeContainer, "mousedown", onClick(timeIncrement));
                bind([self.hourElement, self.minuteElement], ["focus", "click"], selText);
                if (self.secondElement !== undefined)
                    bind(self.secondElement, "focus", function () { return self.secondElement && self.secondElement.select(); });
                if (self.amPM !== undefined) {
                    bind(self.amPM, "mousedown", onClick(function (e) {
                        updateTime(e);
                        triggerChange();
                    }));
                }
            }
        }
        /**
         * Set the calendar view to a particular date.
         * @param {Date} jumpDate the date to set the view to
         * @param {boolean} triggerChange if change events should be triggered
         */
        function jumpToDate(jumpDate, triggerChange) {
            var jumpTo = jumpDate !== undefined
                ? self.parseDate(jumpDate)
                : self.latestSelectedDateObj ||
                    (self.config.minDate && self.config.minDate > self.now
                        ? self.config.minDate
                        : self.config.maxDate && self.config.maxDate < self.now
                            ? self.config.maxDate
                            : self.now);
            var oldYear = self.currentYear;
            var oldMonth = self.currentMonth;
            try {
                if (jumpTo !== undefined) {
                    self.currentYear = jumpTo.getFullYear();
                    self.currentMonth = jumpTo.getMonth();
                }
            }
            catch (e) {
                /* istanbul ignore next */
                e.message = "Invalid date supplied: " + jumpTo;
                self.config.errorHandler(e);
            }
            if (triggerChange && self.currentYear !== oldYear) {
                triggerEvent("onYearChange");
                buildMonthSwitch();
            }
            if (triggerChange &&
                (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {
                triggerEvent("onMonthChange");
            }
            self.redraw();
        }
        /**
         * The up/down arrow handler for time inputs
         * @param {Event} e the click event
         */
        function timeIncrement(e) {
            if (~e.target.className.indexOf("arrow"))
                incrementNumInput(e, e.target.classList.contains("arrowUp") ? 1 : -1);
        }
        /**
         * Increments/decrements the value of input associ-
         * ated with the up/down arrow by dispatching an
         * "increment" event on the input.
         *
         * @param {Event} e the click event
         * @param {Number} delta the diff (usually 1 or -1)
         * @param {Element} inputElem the input element
         */
        function incrementNumInput(e, delta, inputElem) {
            var target = e && e.target;
            var input = inputElem ||
                (target && target.parentNode && target.parentNode.firstChild);
            var event = createEvent("increment");
            event.delta = delta;
            input && input.dispatchEvent(event);
        }
        function build() {
            var fragment = window.document.createDocumentFragment();
            self.calendarContainer = createElement("div", "flatpickr-calendar");
            self.calendarContainer.tabIndex = -1;
            if (!self.config.noCalendar) {
                fragment.appendChild(buildMonthNav());
                self.innerContainer = createElement("div", "flatpickr-innerContainer");
                if (self.config.weekNumbers) {
                    var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;
                    self.innerContainer.appendChild(weekWrapper);
                    self.weekNumbers = weekNumbers;
                    self.weekWrapper = weekWrapper;
                }
                self.rContainer = createElement("div", "flatpickr-rContainer");
                self.rContainer.appendChild(buildWeekdays());
                if (!self.daysContainer) {
                    self.daysContainer = createElement("div", "flatpickr-days");
                    self.daysContainer.tabIndex = -1;
                }
                buildDays();
                self.rContainer.appendChild(self.daysContainer);
                self.innerContainer.appendChild(self.rContainer);
                fragment.appendChild(self.innerContainer);
            }
            if (self.config.enableTime) {
                fragment.appendChild(buildTime());
            }
            toggleClass(self.calendarContainer, "rangeMode", self.config.mode === "range");
            toggleClass(self.calendarContainer, "animate", self.config.animate === true);
            toggleClass(self.calendarContainer, "multiMonth", self.config.showMonths > 1);
            self.calendarContainer.appendChild(fragment);
            var customAppend = self.config.appendTo !== undefined &&
                self.config.appendTo.nodeType !== undefined;
            if (self.config.inline || self.config.static) {
                self.calendarContainer.classList.add(self.config.inline ? "inline" : "static");
                if (self.config.inline) {
                    if (!customAppend && self.element.parentNode)
                        self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);
                    else if (self.config.appendTo !== undefined)
                        self.config.appendTo.appendChild(self.calendarContainer);
                }
                if (self.config.static) {
                    var wrapper = createElement("div", "flatpickr-wrapper");
                    if (self.element.parentNode)
                        self.element.parentNode.insertBefore(wrapper, self.element);
                    wrapper.appendChild(self.element);
                    if (self.altInput)
                        wrapper.appendChild(self.altInput);
                    wrapper.appendChild(self.calendarContainer);
                }
            }
            if (!self.config.static && !self.config.inline)
                (self.config.appendTo !== undefined
                    ? self.config.appendTo
                    : window.document.body).appendChild(self.calendarContainer);
        }
        function createDay(className, date, dayNumber, i) {
            var dateIsEnabled = isEnabled(date, true), dayElement = createElement("span", "flatpickr-day " + className, date.getDate().toString());
            dayElement.dateObj = date;
            dayElement.$i = i;
            dayElement.setAttribute("aria-label", self.formatDate(date, self.config.ariaDateFormat));
            if (className.indexOf("hidden") === -1 &&
                compareDates(date, self.now) === 0) {
                self.todayDateElem = dayElement;
                dayElement.classList.add("today");
                dayElement.setAttribute("aria-current", "date");
            }
            if (dateIsEnabled) {
                dayElement.tabIndex = -1;
                if (isDateSelected(date)) {
                    dayElement.classList.add("selected");
                    self.selectedDateElem = dayElement;
                    if (self.config.mode === "range") {
                        toggleClass(dayElement, "startRange", self.selectedDates[0] &&
                            compareDates(date, self.selectedDates[0], true) === 0);
                        toggleClass(dayElement, "endRange", self.selectedDates[1] &&
                            compareDates(date, self.selectedDates[1], true) === 0);
                        if (className === "nextMonthDay")
                            dayElement.classList.add("inRange");
                    }
                }
            }
            else {
                dayElement.classList.add("flatpickr-disabled");
            }
            if (self.config.mode === "range") {
                if (isDateInRange(date) && !isDateSelected(date))
                    dayElement.classList.add("inRange");
            }
            if (self.weekNumbers &&
                self.config.showMonths === 1 &&
                className !== "prevMonthDay" &&
                dayNumber % 7 === 1) {
                self.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + self.config.getWeek(date) + "</span>");
            }
            triggerEvent("onDayCreate", dayElement);
            return dayElement;
        }
        function focusOnDayElem(targetNode) {
            targetNode.focus();
            if (self.config.mode === "range")
                onMouseOver(targetNode);
        }
        function getFirstAvailableDay(delta) {
            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;
            var endMonth = delta > 0 ? self.config.showMonths : -1;
            for (var m = startMonth; m != endMonth; m += delta) {
                var month = self.daysContainer.children[m];
                var startIndex = delta > 0 ? 0 : month.children.length - 1;
                var endIndex = delta > 0 ? month.children.length : -1;
                for (var i = startIndex; i != endIndex; i += delta) {
                    var c = month.children[i];
                    if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj))
                        return c;
                }
            }
            return undefined;
        }
        function getNextAvailableDay(current, delta) {
            var givenMonth = current.className.indexOf("Month") === -1
                ? current.dateObj.getMonth()
                : self.currentMonth;
            var endMonth = delta > 0 ? self.config.showMonths : -1;
            var loopDelta = delta > 0 ? 1 : -1;
            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {
                var month = self.daysContainer.children[m];
                var startIndex = givenMonth - self.currentMonth === m
                    ? current.$i + delta
                    : delta < 0
                        ? month.children.length - 1
                        : 0;
                var numMonthDays = month.children.length;
                for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {
                    var c = month.children[i];
                    if (c.className.indexOf("hidden") === -1 &&
                        isEnabled(c.dateObj) &&
                        Math.abs(current.$i - i) >= Math.abs(delta))
                        return focusOnDayElem(c);
                }
            }
            self.changeMonth(loopDelta);
            focusOnDay(getFirstAvailableDay(loopDelta), 0);
            return undefined;
        }
        function focusOnDay(current, offset) {
            var dayFocused = isInView(document.activeElement || document.body);
            var startElem = current !== undefined
                ? current
                : dayFocused
                    ? document.activeElement
                    : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)
                        ? self.selectedDateElem
                        : self.todayDateElem !== undefined && isInView(self.todayDateElem)
                            ? self.todayDateElem
                            : getFirstAvailableDay(offset > 0 ? 1 : -1);
            if (startElem === undefined)
                return self._input.focus();
            if (!dayFocused)
                return focusOnDayElem(startElem);
            getNextAvailableDay(startElem, offset);
        }
        function buildMonthDays(year, month) {
            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;
            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);
            var daysInMonth = self.utils.getDaysInMonth(month), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? "prevMonthDay hidden" : "prevMonthDay", nextMonthDayClass = isMultiMonth ? "nextMonthDay hidden" : "nextMonthDay";
            var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;
            // prepend days from the ending of previous month
            for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {
                days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));
            }
            // Start at 1 since there is no 0th day
            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {
                days.appendChild(createDay("", new Date(year, month, dayNumber), dayNumber, dayIndex));
            }
            // append days from the next month
            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&
                (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {
                days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));
            }
            //updateNavigationCurrentMonth();
            var dayContainer = createElement("div", "dayContainer");
            dayContainer.appendChild(days);
            return dayContainer;
        }
        function buildDays() {
            if (self.daysContainer === undefined) {
                return;
            }
            clearNode(self.daysContainer);
            // TODO: week numbers for each month
            if (self.weekNumbers)
                clearNode(self.weekNumbers);
            var frag = document.createDocumentFragment();
            for (var i = 0; i < self.config.showMonths; i++) {
                var d = new Date(self.currentYear, self.currentMonth, 1);
                d.setMonth(self.currentMonth + i);
                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));
            }
            self.daysContainer.appendChild(frag);
            self.days = self.daysContainer.firstChild;
            if (self.config.mode === "range" && self.selectedDates.length === 1) {
                onMouseOver();
            }
        }
        function buildMonthSwitch() {
            if (self.config.showMonths > 1)
                return;
            var shouldBuildMonth = function (month) {
                if (self.config.minDate !== undefined &&
                    self.currentYear === self.config.minDate.getFullYear() &&
                    month < self.config.minDate.getMonth()) {
                    return false;
                }
                return !(self.config.maxDate !== undefined &&
                    self.currentYear === self.config.maxDate.getFullYear() &&
                    month > self.config.maxDate.getMonth());
            };
            self.monthsDropdownContainer.tabIndex = -1;
            self.monthsDropdownContainer.innerHTML = "";
            for (var i = 0; i < 12; i++) {
                if (!shouldBuildMonth(i))
                    continue;
                var month = createElement("option", "flatpickr-monthDropdown-month");
                month.value = new Date(self.currentYear, i).getMonth().toString();
                month.textContent = monthToStr(i, false, self.l10n);
                month.tabIndex = -1;
                if (self.currentMonth === i) {
                    month.selected = true;
                }
                self.monthsDropdownContainer.appendChild(month);
            }
        }
        function buildMonth() {
            var container = createElement("div", "flatpickr-month");
            var monthNavFragment = window.document.createDocumentFragment();
            var monthElement;
            if (self.config.showMonths > 1) {
                monthElement = createElement("span", "cur-month");
            }
            else {
                self.monthsDropdownContainer = createElement("select", "flatpickr-monthDropdown-months");
                bind(self.monthsDropdownContainer, "change", function (e) {
                    var target = e.target;
                    var selectedMonth = parseInt(target.value, 10);
                    self.changeMonth(selectedMonth - self.currentMonth);
                    triggerEvent("onMonthChange");
                });
                buildMonthSwitch();
                monthElement = self.monthsDropdownContainer;
            }
            var yearInput = createNumberInput("cur-year", { tabindex: "-1" });
            var yearElement = yearInput.getElementsByTagName("input")[0];
            yearElement.setAttribute("aria-label", self.l10n.yearAriaLabel);
            if (self.config.minDate) {
                yearElement.setAttribute("min", self.config.minDate.getFullYear().toString());
            }
            if (self.config.maxDate) {
                yearElement.setAttribute("max", self.config.maxDate.getFullYear().toString());
                yearElement.disabled =
                    !!self.config.minDate &&
                        self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();
            }
            var currentMonth = createElement("div", "flatpickr-current-month");
            currentMonth.appendChild(monthElement);
            currentMonth.appendChild(yearInput);
            monthNavFragment.appendChild(currentMonth);
            container.appendChild(monthNavFragment);
            return {
                container: container,
                yearElement: yearElement,
                monthElement: monthElement
            };
        }
        function buildMonths() {
            clearNode(self.monthNav);
            self.monthNav.appendChild(self.prevMonthNav);
            if (self.config.showMonths) {
                self.yearElements = [];
                self.monthElements = [];
            }
            for (var m = self.config.showMonths; m--;) {
                var month = buildMonth();
                self.yearElements.push(month.yearElement);
                self.monthElements.push(month.monthElement);
                self.monthNav.appendChild(month.container);
            }
            self.monthNav.appendChild(self.nextMonthNav);
        }
        function buildMonthNav() {
            self.monthNav = createElement("div", "flatpickr-months");
            self.yearElements = [];
            self.monthElements = [];
            self.prevMonthNav = createElement("span", "flatpickr-prev-month");
            self.prevMonthNav.innerHTML = self.config.prevArrow;
            self.nextMonthNav = createElement("span", "flatpickr-next-month");
            self.nextMonthNav.innerHTML = self.config.nextArrow;
            buildMonths();
            Object.defineProperty(self, "_hidePrevMonthArrow", {
                get: function () { return self.__hidePrevMonthArrow; },
                set: function (bool) {
                    if (self.__hidePrevMonthArrow !== bool) {
                        toggleClass(self.prevMonthNav, "flatpickr-disabled", bool);
                        self.__hidePrevMonthArrow = bool;
                    }
                }
            });
            Object.defineProperty(self, "_hideNextMonthArrow", {
                get: function () { return self.__hideNextMonthArrow; },
                set: function (bool) {
                    if (self.__hideNextMonthArrow !== bool) {
                        toggleClass(self.nextMonthNav, "flatpickr-disabled", bool);
                        self.__hideNextMonthArrow = bool;
                    }
                }
            });
            self.currentYearElement = self.yearElements[0];
            updateNavigationCurrentMonth();
            return self.monthNav;
        }
        function buildTime() {
            self.calendarContainer.classList.add("hasTime");
            if (self.config.noCalendar)
                self.calendarContainer.classList.add("noCalendar");
            self.timeContainer = createElement("div", "flatpickr-time");
            self.timeContainer.tabIndex = -1;
            var separator = createElement("span", "flatpickr-time-separator", ":");
            var hourInput = createNumberInput("flatpickr-hour");
            self.hourElement = hourInput.getElementsByTagName("input")[0];
            var minuteInput = createNumberInput("flatpickr-minute");
            self.minuteElement = minuteInput.getElementsByTagName("input")[0];
            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;
            self.hourElement.value = pad(self.latestSelectedDateObj
                ? self.latestSelectedDateObj.getHours()
                : self.config.time_24hr
                    ? self.config.defaultHour
                    : military2ampm(self.config.defaultHour));
            self.minuteElement.value = pad(self.latestSelectedDateObj
                ? self.latestSelectedDateObj.getMinutes()
                : self.config.defaultMinute);
            self.hourElement.setAttribute("step", self.config.hourIncrement.toString());
            self.minuteElement.setAttribute("step", self.config.minuteIncrement.toString());
            self.hourElement.setAttribute("min", self.config.time_24hr ? "0" : "1");
            self.hourElement.setAttribute("max", self.config.time_24hr ? "23" : "12");
            self.minuteElement.setAttribute("min", "0");
            self.minuteElement.setAttribute("max", "59");
            self.timeContainer.appendChild(hourInput);
            self.timeContainer.appendChild(separator);
            self.timeContainer.appendChild(minuteInput);
            if (self.config.time_24hr)
                self.timeContainer.classList.add("time24hr");
            if (self.config.enableSeconds) {
                self.timeContainer.classList.add("hasSeconds");
                var secondInput = createNumberInput("flatpickr-second");
                self.secondElement = secondInput.getElementsByTagName("input")[0];
                self.secondElement.value = pad(self.latestSelectedDateObj
                    ? self.latestSelectedDateObj.getSeconds()
                    : self.config.defaultSeconds);
                self.secondElement.setAttribute("step", self.minuteElement.getAttribute("step"));
                self.secondElement.setAttribute("min", "0");
                self.secondElement.setAttribute("max", "59");
                self.timeContainer.appendChild(createElement("span", "flatpickr-time-separator", ":"));
                self.timeContainer.appendChild(secondInput);
            }
            if (!self.config.time_24hr) {
                // add self.amPM if appropriate
                self.amPM = createElement("span", "flatpickr-am-pm", self.l10n.amPM[int((self.latestSelectedDateObj
                    ? self.hourElement.value
                    : self.config.defaultHour) > 11)]);
                self.amPM.title = self.l10n.toggleTitle;
                self.amPM.tabIndex = -1;
                self.timeContainer.appendChild(self.amPM);
            }
            return self.timeContainer;
        }
        function buildWeekdays() {
            if (!self.weekdayContainer)
                self.weekdayContainer = createElement("div", "flatpickr-weekdays");
            else
                clearNode(self.weekdayContainer);
            for (var i = self.config.showMonths; i--;) {
                var container = createElement("div", "flatpickr-weekdaycontainer");
                self.weekdayContainer.appendChild(container);
            }
            updateWeekdays();
            return self.weekdayContainer;
        }
        function updateWeekdays() {
            var firstDayOfWeek = self.l10n.firstDayOfWeek;
            var weekdays = self.l10n.weekdays.shorthand.slice();
            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {
                weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));
            }
            for (var i = self.config.showMonths; i--;) {
                self.weekdayContainer.children[i].innerHTML = "\n      <span class='flatpickr-weekday'>\n        " + weekdays.join("</span><span class='flatpickr-weekday'>") + "\n      </span>\n      ";
            }
        }
        /* istanbul ignore next */
        function buildWeeks() {
            self.calendarContainer.classList.add("hasWeeks");
            var weekWrapper = createElement("div", "flatpickr-weekwrapper");
            weekWrapper.appendChild(createElement("span", "flatpickr-weekday", self.l10n.weekAbbreviation));
            var weekNumbers = createElement("div", "flatpickr-weeks");
            weekWrapper.appendChild(weekNumbers);
            return {
                weekWrapper: weekWrapper,
                weekNumbers: weekNumbers
            };
        }
        function changeMonth(value, isOffset) {
            if (isOffset === void 0) { isOffset = true; }
            var delta = isOffset ? value : value - self.currentMonth;
            if ((delta < 0 && self._hidePrevMonthArrow === true) ||
                (delta > 0 && self._hideNextMonthArrow === true))
                return;
            self.currentMonth += delta;
            if (self.currentMonth < 0 || self.currentMonth > 11) {
                self.currentYear += self.currentMonth > 11 ? 1 : -1;
                self.currentMonth = (self.currentMonth + 12) % 12;
                triggerEvent("onYearChange");
                buildMonthSwitch();
            }
            buildDays();
            triggerEvent("onMonthChange");
            updateNavigationCurrentMonth();
        }
        function clear(triggerChangeEvent, toInitial) {
            if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }
            if (toInitial === void 0) { toInitial = true; }
            self.input.value = "";
            if (self.altInput !== undefined)
                self.altInput.value = "";
            if (self.mobileInput !== undefined)
                self.mobileInput.value = "";
            self.selectedDates = [];
            self.latestSelectedDateObj = undefined;
            if (toInitial === true) {
                self.currentYear = self._initialDate.getFullYear();
                self.currentMonth = self._initialDate.getMonth();
            }
            self.showTimeInput = false;
            if (self.config.enableTime === true) {
                setDefaultHours();
            }
            self.redraw();
            if (triggerChangeEvent)
                // triggerChangeEvent is true (default) or an Event
                triggerEvent("onChange");
        }
        function close() {
            self.isOpen = false;
            if (!self.isMobile) {
                if (self.calendarContainer !== undefined) {
                    self.calendarContainer.classList.remove("open");
                }
                if (self._input !== undefined) {
                    self._input.classList.remove("active");
                }
            }
            triggerEvent("onClose");
        }
        function destroy() {
            if (self.config !== undefined)
                triggerEvent("onDestroy");
            for (var i = self._handlers.length; i--;) {
                var h = self._handlers[i];
                h.element.removeEventListener(h.event, h.handler, h.options);
            }
            self._handlers = [];
            if (self.mobileInput) {
                if (self.mobileInput.parentNode)
                    self.mobileInput.parentNode.removeChild(self.mobileInput);
                self.mobileInput = undefined;
            }
            else if (self.calendarContainer && self.calendarContainer.parentNode) {
                if (self.config.static && self.calendarContainer.parentNode) {
                    var wrapper = self.calendarContainer.parentNode;
                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);
                    if (wrapper.parentNode) {
                        while (wrapper.firstChild)
                            wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);
                        wrapper.parentNode.removeChild(wrapper);
                    }
                }
                else
                    self.calendarContainer.parentNode.removeChild(self.calendarContainer);
            }
            if (self.altInput) {
                self.input.type = "text";
                if (self.altInput.parentNode)
                    self.altInput.parentNode.removeChild(self.altInput);
                delete self.altInput;
            }
            if (self.input) {
                self.input.type = self.input._type;
                self.input.classList.remove("flatpickr-input");
                self.input.removeAttribute("readonly");
                self.input.value = "";
            }
            [
                "_showTimeInput",
                "latestSelectedDateObj",
                "_hideNextMonthArrow",
                "_hidePrevMonthArrow",
                "__hideNextMonthArrow",
                "__hidePrevMonthArrow",
                "isMobile",
                "isOpen",
                "selectedDateElem",
                "minDateHasTime",
                "maxDateHasTime",
                "days",
                "daysContainer",
                "_input",
                "_positionElement",
                "innerContainer",
                "rContainer",
                "monthNav",
                "todayDateElem",
                "calendarContainer",
                "weekdayContainer",
                "prevMonthNav",
                "nextMonthNav",
                "monthsDropdownContainer",
                "currentMonthElement",
                "currentYearElement",
                "navigationCurrentMonth",
                "selectedDateElem",
                "config",
            ].forEach(function (k) {
                try {
                    delete self[k];
                }
                catch (_) { }
            });
        }
        function isCalendarElem(elem) {
            if (self.config.appendTo && self.config.appendTo.contains(elem))
                return true;
            return self.calendarContainer.contains(elem);
        }
        function documentClick(e) {
            if (self.isOpen && !self.config.inline) {
                var eventTarget_1 = getEventTarget(e);
                var isCalendarElement = isCalendarElem(eventTarget_1);
                var isInput = eventTarget_1 === self.input ||
                    eventTarget_1 === self.altInput ||
                    self.element.contains(eventTarget_1) ||
                    // web components
                    // e.path is not present in all browsers. circumventing typechecks
                    (e.path &&
                        e.path.indexOf &&
                        (~e.path.indexOf(self.input) ||
                            ~e.path.indexOf(self.altInput)));
                var lostFocus = e.type === "blur"
                    ? isInput &&
                        e.relatedTarget &&
                        !isCalendarElem(e.relatedTarget)
                    : !isInput &&
                        !isCalendarElement &&
                        !isCalendarElem(e.relatedTarget);
                var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {
                    return elem.contains(eventTarget_1);
                });
                if (lostFocus && isIgnored) {
                    self.close();
                    if (self.config.mode === "range" && self.selectedDates.length === 1) {
                        self.clear(false);
                        self.redraw();
                    }
                }
            }
        }
        function changeYear(newYear) {
            if (!newYear ||
                (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||
                (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))
                return;
            var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;
            self.currentYear = newYearNum || self.currentYear;
            if (self.config.maxDate &&
                self.currentYear === self.config.maxDate.getFullYear()) {
                self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);
            }
            else if (self.config.minDate &&
                self.currentYear === self.config.minDate.getFullYear()) {
                self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);
            }
            if (isNewYear) {
                self.redraw();
                triggerEvent("onYearChange");
                buildMonthSwitch();
            }
        }
        function isEnabled(date, timeless) {
            if (timeless === void 0) { timeless = true; }
            var dateToCheck = self.parseDate(date, undefined, timeless); // timeless
            if ((self.config.minDate &&
                dateToCheck &&
                compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||
                (self.config.maxDate &&
                    dateToCheck &&
                    compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))
                return false;
            if (self.config.enable.length === 0 && self.config.disable.length === 0)
                return true;
            if (dateToCheck === undefined)
                return false;
            var bool = self.config.enable.length > 0, array = bool ? self.config.enable : self.config.disable;
            for (var i = 0, d = void 0; i < array.length; i++) {
                d = array[i];
                if (typeof d === "function" &&
                    d(dateToCheck) // disabled by function
                )
                    return bool;
                else if (d instanceof Date &&
                    dateToCheck !== undefined &&
                    d.getTime() === dateToCheck.getTime())
                    // disabled by date
                    return bool;
                else if (typeof d === "string" && dateToCheck !== undefined) {
                    // disabled by date string
                    var parsed = self.parseDate(d, undefined, true);
                    return parsed && parsed.getTime() === dateToCheck.getTime()
                        ? bool
                        : !bool;
                }
                else if (
                // disabled by range
                typeof d === "object" &&
                    dateToCheck !== undefined &&
                    d.from &&
                    d.to &&
                    dateToCheck.getTime() >= d.from.getTime() &&
                    dateToCheck.getTime() <= d.to.getTime())
                    return bool;
            }
            return !bool;
        }
        function isInView(elem) {
            if (self.daysContainer !== undefined)
                return (elem.className.indexOf("hidden") === -1 &&
                    self.daysContainer.contains(elem));
            return false;
        }
        function onKeyDown(e) {
            // e.key                      e.keyCode
            // "Backspace"                        8
            // "Tab"                              9
            // "Enter"                           13
            // "Escape"     (IE "Esc")           27
            // "ArrowLeft"  (IE "Left")          37
            // "ArrowUp"    (IE "Up")            38
            // "ArrowRight" (IE "Right")         39
            // "ArrowDown"  (IE "Down")          40
            // "Delete"     (IE "Del")           46
            var isInput = e.target === self._input;
            var allowInput = self.config.allowInput;
            var allowKeydown = self.isOpen && (!allowInput || !isInput);
            var allowInlineKeydown = self.config.inline && isInput && !allowInput;
            if (e.keyCode === 13 && isInput) {
                if (allowInput) {
                    self.setDate(self._input.value, true, e.target === self.altInput
                        ? self.config.altFormat
                        : self.config.dateFormat);
                    return e.target.blur();
                }
                else {
                    self.open();
                }
            }
            else if (isCalendarElem(e.target) ||
                allowKeydown ||
                allowInlineKeydown) {
                var isTimeObj = !!self.timeContainer &&
                    self.timeContainer.contains(e.target);
                switch (e.keyCode) {
                    case 13:
                        if (isTimeObj) {
                            e.preventDefault();
                            updateTime();
                            focusAndClose();
                        }
                        else
                            selectDate(e);
                        break;
                    case 27: // escape
                        e.preventDefault();
                        focusAndClose();
                        break;
                    case 8:
                    case 46:
                        if (isInput && !self.config.allowInput) {
                            e.preventDefault();
                            self.clear();
                        }
                        break;
                    case 37:
                    case 39:
                        if (!isTimeObj && !isInput) {
                            e.preventDefault();
                            if (self.daysContainer !== undefined &&
                                (allowInput === false ||
                                    (document.activeElement && isInView(document.activeElement)))) {
                                var delta_1 = e.keyCode === 39 ? 1 : -1;
                                if (!e.ctrlKey)
                                    focusOnDay(undefined, delta_1);
                                else {
                                    e.stopPropagation();
                                    changeMonth(delta_1);
                                    focusOnDay(getFirstAvailableDay(1), 0);
                                }
                            }
                        }
                        else if (self.hourElement)
                            self.hourElement.focus();
                        break;
                    case 38:
                    case 40:
                        e.preventDefault();
                        var delta = e.keyCode === 40 ? 1 : -1;
                        if ((self.daysContainer && e.target.$i !== undefined) ||
                            e.target === self.input) {
                            if (e.ctrlKey) {
                                e.stopPropagation();
                                changeYear(self.currentYear - delta);
                                focusOnDay(getFirstAvailableDay(1), 0);
                            }
                            else if (!isTimeObj)
                                focusOnDay(undefined, delta * 7);
                        }
                        else if (e.target === self.currentYearElement) {
                            changeYear(self.currentYear - delta);
                        }
                        else if (self.config.enableTime) {
                            if (!isTimeObj && self.hourElement)
                                self.hourElement.focus();
                            updateTime(e);
                            self._debouncedChange();
                        }
                        break;
                    case 9:
                        if (isTimeObj) {
                            var elems = [
                                self.hourElement,
                                self.minuteElement,
                                self.secondElement,
                                self.amPM,
                            ]
                                .concat(self.pluginElements)
                                .filter(function (x) { return x; });
                            var i = elems.indexOf(e.target);
                            if (i !== -1) {
                                var target = elems[i + (e.shiftKey ? -1 : 1)];
                                e.preventDefault();
                                (target || self._input).focus();
                            }
                        }
                        else if (!self.config.noCalendar &&
                            self.daysContainer &&
                            self.daysContainer.contains(e.target) &&
                            e.shiftKey) {
                            e.preventDefault();
                            self._input.focus();
                        }
                        break;
                    default:
                        break;
                }
            }
            if (self.amPM !== undefined && e.target === self.amPM) {
                switch (e.key) {
                    case self.l10n.amPM[0].charAt(0):
                    case self.l10n.amPM[0].charAt(0).toLowerCase():
                        self.amPM.textContent = self.l10n.amPM[0];
                        setHoursFromInputs();
                        updateValue();
                        break;
                    case self.l10n.amPM[1].charAt(0):
                    case self.l10n.amPM[1].charAt(0).toLowerCase():
                        self.amPM.textContent = self.l10n.amPM[1];
                        setHoursFromInputs();
                        updateValue();
                        break;
                }
            }
            if (isInput || isCalendarElem(e.target)) {
                triggerEvent("onKeyDown", e);
            }
        }
        function onMouseOver(elem) {
            if (self.selectedDates.length !== 1 ||
                (elem &&
                    (!elem.classList.contains("flatpickr-day") ||
                        elem.classList.contains("flatpickr-disabled"))))
                return;
            var hoverDate = elem
                ? elem.dateObj.getTime()
                : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());
            var containsDisabled = false;
            var minRange = 0, maxRange = 0;
            for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {
                if (!isEnabled(new Date(t), true)) {
                    containsDisabled =
                        containsDisabled || (t > rangeStartDate && t < rangeEndDate);
                    if (t < initialDate && (!minRange || t > minRange))
                        minRange = t;
                    else if (t > initialDate && (!maxRange || t < maxRange))
                        maxRange = t;
                }
            }
            for (var m = 0; m < self.config.showMonths; m++) {
                var month = self.daysContainer.children[m];
                var _loop_1 = function (i, l) {
                    var dayElem = month.children[i], date = dayElem.dateObj;
                    var timestamp = date.getTime();
                    var outOfRange = (minRange > 0 && timestamp < minRange) ||
                        (maxRange > 0 && timestamp > maxRange);
                    if (outOfRange) {
                        dayElem.classList.add("notAllowed");
                        ["inRange", "startRange", "endRange"].forEach(function (c) {
                            dayElem.classList.remove(c);
                        });
                        return "continue";
                    }
                    else if (containsDisabled && !outOfRange)
                        return "continue";
                    ["startRange", "inRange", "endRange", "notAllowed"].forEach(function (c) {
                        dayElem.classList.remove(c);
                    });
                    if (elem !== undefined) {
                        elem.classList.add(hoverDate <= self.selectedDates[0].getTime()
                            ? "startRange"
                            : "endRange");
                        if (initialDate < hoverDate && timestamp === initialDate)
                            dayElem.classList.add("startRange");
                        else if (initialDate > hoverDate && timestamp === initialDate)
                            dayElem.classList.add("endRange");
                        if (timestamp >= minRange &&
                            (maxRange === 0 || timestamp <= maxRange) &&
                            isBetween(timestamp, initialDate, hoverDate))
                            dayElem.classList.add("inRange");
                    }
                };
                for (var i = 0, l = month.children.length; i < l; i++) {
                    _loop_1(i, l);
                }
            }
        }
        function onResize() {
            if (self.isOpen && !self.config.static && !self.config.inline)
                positionCalendar();
        }
        function setDefaultTime() {
            self.setDate(self.config.minDate !== undefined
                ? new Date(self.config.minDate.getTime())
                : new Date(), true);
            setDefaultHours();
            updateValue();
        }
        function open(e, positionElement) {
            if (positionElement === void 0) { positionElement = self._positionElement; }
            if (self.isMobile === true) {
                if (e) {
                    e.preventDefault();
                    e.target && e.target.blur();
                }
                if (self.mobileInput !== undefined) {
                    self.mobileInput.focus();
                    self.mobileInput.click();
                }
                triggerEvent("onOpen");
                return;
            }
            if (self._input.disabled || self.config.inline)
                return;
            var wasOpen = self.isOpen;
            self.isOpen = true;
            if (!wasOpen) {
                self.calendarContainer.classList.add("open");
                self._input.classList.add("active");
                triggerEvent("onOpen");
                positionCalendar(positionElement);
            }
            if (self.config.enableTime === true && self.config.noCalendar === true) {
                if (self.selectedDates.length === 0) {
                    setDefaultTime();
                }
                if (self.config.allowInput === false &&
                    (e === undefined ||
                        !self.timeContainer.contains(e.relatedTarget))) {
                    setTimeout(function () { return self.hourElement.select(); }, 50);
                }
            }
        }
        function minMaxDateSetter(type) {
            return function (date) {
                var dateObj = (self.config["_" + type + "Date"] = self.parseDate(date, self.config.dateFormat));
                var inverseDateObj = self.config["_" + (type === "min" ? "max" : "min") + "Date"];
                if (dateObj !== undefined) {
                    self[type === "min" ? "minDateHasTime" : "maxDateHasTime"] =
                        dateObj.getHours() > 0 ||
                            dateObj.getMinutes() > 0 ||
                            dateObj.getSeconds() > 0;
                }
                if (self.selectedDates) {
                    self.selectedDates = self.selectedDates.filter(function (d) { return isEnabled(d); });
                    if (!self.selectedDates.length && type === "min")
                        setHoursFromDate(dateObj);
                    updateValue();
                }
                if (self.daysContainer) {
                    redraw();
                    if (dateObj !== undefined)
                        self.currentYearElement[type] = dateObj.getFullYear().toString();
                    else
                        self.currentYearElement.removeAttribute(type);
                    self.currentYearElement.disabled =
                        !!inverseDateObj &&
                            dateObj !== undefined &&
                            inverseDateObj.getFullYear() === dateObj.getFullYear();
                }
            };
        }
        function parseConfig() {
            var boolOpts = [
                "wrap",
                "weekNumbers",
                "allowInput",
                "clickOpens",
                "time_24hr",
                "enableTime",
                "noCalendar",
                "altInput",
                "shorthandCurrentMonth",
                "inline",
                "static",
                "enableSeconds",
                "disableMobile",
            ];
            var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));
            var formats = {};
            self.config.parseDate = userConfig.parseDate;
            self.config.formatDate = userConfig.formatDate;
            Object.defineProperty(self.config, "enable", {
                get: function () { return self.config._enable; },
                set: function (dates) {
                    self.config._enable = parseDateRules(dates);
                }
            });
            Object.defineProperty(self.config, "disable", {
                get: function () { return self.config._disable; },
                set: function (dates) {
                    self.config._disable = parseDateRules(dates);
                }
            });
            var timeMode = userConfig.mode === "time";
            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {
                var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;
                formats.dateFormat =
                    userConfig.noCalendar || timeMode
                        ? "H:i" + (userConfig.enableSeconds ? ":S" : "")
                        : defaultDateFormat + " H:i" + (userConfig.enableSeconds ? ":S" : "");
            }
            if (userConfig.altInput &&
                (userConfig.enableTime || timeMode) &&
                !userConfig.altFormat) {
                var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;
                formats.altFormat =
                    userConfig.noCalendar || timeMode
                        ? "h:i" + (userConfig.enableSeconds ? ":S K" : " K")
                        : defaultAltFormat + (" h:i" + (userConfig.enableSeconds ? ":S" : "") + " K");
            }
            if (!userConfig.altInputClass) {
                self.config.altInputClass =
                    self.input.className + " " + self.config.altInputClass;
            }
            Object.defineProperty(self.config, "minDate", {
                get: function () { return self.config._minDate; },
                set: minMaxDateSetter("min")
            });
            Object.defineProperty(self.config, "maxDate", {
                get: function () { return self.config._maxDate; },
                set: minMaxDateSetter("max")
            });
            var minMaxTimeSetter = function (type) { return function (val) {
                self.config[type === "min" ? "_minTime" : "_maxTime"] = self.parseDate(val, "H:i");
            }; };
            Object.defineProperty(self.config, "minTime", {
                get: function () { return self.config._minTime; },
                set: minMaxTimeSetter("min")
            });
            Object.defineProperty(self.config, "maxTime", {
                get: function () { return self.config._maxTime; },
                set: minMaxTimeSetter("max")
            });
            if (userConfig.mode === "time") {
                self.config.noCalendar = true;
                self.config.enableTime = true;
            }
            Object.assign(self.config, formats, userConfig);
            for (var i = 0; i < boolOpts.length; i++)
                self.config[boolOpts[i]] =
                    self.config[boolOpts[i]] === true ||
                        self.config[boolOpts[i]] === "true";
            HOOKS.filter(function (hook) { return self.config[hook] !== undefined; }).forEach(function (hook) {
                self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);
            });
            self.isMobile =
                !self.config.disableMobile &&
                    !self.config.inline &&
                    self.config.mode === "single" &&
                    !self.config.disable.length &&
                    !self.config.enable.length &&
                    !self.config.weekNumbers &&
                    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            for (var i = 0; i < self.config.plugins.length; i++) {
                var pluginConf = self.config.plugins[i](self) || {};
                for (var key in pluginConf) {
                    if (HOOKS.indexOf(key) > -1) {
                        self.config[key] = arrayify(pluginConf[key])
                            .map(bindToInstance)
                            .concat(self.config[key]);
                    }
                    else if (typeof userConfig[key] === "undefined")
                        self.config[key] = pluginConf[key];
                }
            }
            triggerEvent("onParseConfig");
        }
        function setupLocale() {
            if (typeof self.config.locale !== "object" &&
                typeof flatpickr.l10ns[self.config.locale] === "undefined")
                self.config.errorHandler(new Error("flatpickr: invalid locale " + self.config.locale));
            self.l10n = __assign({}, flatpickr.l10ns["default"], (typeof self.config.locale === "object"
                ? self.config.locale
                : self.config.locale !== "default"
                    ? flatpickr.l10ns[self.config.locale]
                    : undefined));
            tokenRegex.K = "(" + self.l10n.amPM[0] + "|" + self.l10n.amPM[1] + "|" + self.l10n.amPM[0].toLowerCase() + "|" + self.l10n.amPM[1].toLowerCase() + ")";
            var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));
            if (userConfig.time_24hr === undefined &&
                flatpickr.defaultConfig.time_24hr === undefined) {
                self.config.time_24hr = self.l10n.time_24hr;
            }
            self.formatDate = createDateFormatter(self);
            self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });
        }
        function positionCalendar(customPositionElement) {
            if (self.calendarContainer === undefined)
                return;
            triggerEvent("onPreCalendarPosition");
            var positionElement = customPositionElement || self._positionElement;
            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, (function (acc, child) { return acc + child.offsetHeight; }), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(" "), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === "above" ||
                (configPosVertical !== "below" &&
                    distanceFromBottom < calendarHeight &&
                    inputBounds.top > calendarHeight);
            var top = window.pageYOffset +
                inputBounds.top +
                (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);
            toggleClass(self.calendarContainer, "arrowTop", !showOnTop);
            toggleClass(self.calendarContainer, "arrowBottom", showOnTop);
            if (self.config.inline)
                return;
            var left = window.pageXOffset +
                inputBounds.left -
                (configPosHorizontal != null && configPosHorizontal === "center"
                    ? (calendarWidth - inputBounds.width) / 2
                    : 0);
            var right = window.document.body.offsetWidth - inputBounds.right;
            var rightMost = left + calendarWidth > window.document.body.offsetWidth;
            var centerMost = right + calendarWidth > window.document.body.offsetWidth;
            toggleClass(self.calendarContainer, "rightMost", rightMost);
            if (self.config.static)
                return;
            self.calendarContainer.style.top = top + "px";
            if (!rightMost) {
                self.calendarContainer.style.left = left + "px";
                self.calendarContainer.style.right = "auto";
            }
            else if (!centerMost) {
                self.calendarContainer.style.left = "auto";
                self.calendarContainer.style.right = right + "px";
            }
            else {
                var doc = document.styleSheets[0];
                // some testing environments don't have css support
                if (doc === undefined)
                    return;
                var bodyWidth = window.document.body.offsetWidth;
                var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);
                var centerBefore = ".flatpickr-calendar.centerMost:before";
                var centerAfter = ".flatpickr-calendar.centerMost:after";
                var centerIndex = doc.cssRules.length;
                var centerStyle = "{left:" + inputBounds.left + "px;right:auto;}";
                toggleClass(self.calendarContainer, "rightMost", false);
                toggleClass(self.calendarContainer, "centerMost", true);
                doc.insertRule(centerBefore + "," + centerAfter + centerStyle, centerIndex);
                self.calendarContainer.style.left = centerLeft + "px";
                self.calendarContainer.style.right = "auto";
            }
        }
        function redraw() {
            if (self.config.noCalendar || self.isMobile)
                return;
            updateNavigationCurrentMonth();
            buildDays();
        }
        function focusAndClose() {
            self._input.focus();
            if (window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                navigator.msMaxTouchPoints !== undefined) {
                // hack - bugs in the way IE handles focus keeps the calendar open
                setTimeout(self.close, 0);
            }
            else {
                self.close();
            }
        }
        function selectDate(e) {
            e.preventDefault();
            e.stopPropagation();
            var isSelectable = function (day) {
                return day.classList &&
                    day.classList.contains("flatpickr-day") &&
                    !day.classList.contains("flatpickr-disabled") &&
                    !day.classList.contains("notAllowed");
            };
            var t = findParent(e.target, isSelectable);
            if (t === undefined)
                return;
            var target = t;
            var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));
            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||
                selectedDate.getMonth() >
                    self.currentMonth + self.config.showMonths - 1) &&
                self.config.mode !== "range";
            self.selectedDateElem = target;
            if (self.config.mode === "single")
                self.selectedDates = [selectedDate];
            else if (self.config.mode === "multiple") {
                var selectedIndex = isDateSelected(selectedDate);
                if (selectedIndex)
                    self.selectedDates.splice(parseInt(selectedIndex), 1);
                else
                    self.selectedDates.push(selectedDate);
            }
            else if (self.config.mode === "range") {
                if (self.selectedDates.length === 2) {
                    self.clear(false, false);
                }
                self.latestSelectedDateObj = selectedDate;
                self.selectedDates.push(selectedDate);
                // unless selecting same date twice, sort ascendingly
                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)
                    self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });
            }
            setHoursFromInputs();
            if (shouldChangeMonth) {
                var isNewYear = self.currentYear !== selectedDate.getFullYear();
                self.currentYear = selectedDate.getFullYear();
                self.currentMonth = selectedDate.getMonth();
                if (isNewYear) {
                    triggerEvent("onYearChange");
                    buildMonthSwitch();
                }
                triggerEvent("onMonthChange");
            }
            updateNavigationCurrentMonth();
            buildDays();
            updateValue();
            if (self.config.enableTime)
                setTimeout(function () { return (self.showTimeInput = true); }, 50);
            // maintain focus
            if (!shouldChangeMonth &&
                self.config.mode !== "range" &&
                self.config.showMonths === 1)
                focusOnDayElem(target);
            else if (self.selectedDateElem !== undefined &&
                self.hourElement === undefined) {
                self.selectedDateElem && self.selectedDateElem.focus();
            }
            if (self.hourElement !== undefined)
                self.hourElement !== undefined && self.hourElement.focus();
            if (self.config.closeOnSelect) {
                var single = self.config.mode === "single" && !self.config.enableTime;
                var range = self.config.mode === "range" &&
                    self.selectedDates.length === 2 &&
                    !self.config.enableTime;
                if (single || range) {
                    focusAndClose();
                }
            }
            triggerChange();
        }
        var CALLBACKS = {
            locale: [setupLocale, updateWeekdays],
            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],
            minDate: [jumpToDate],
            maxDate: [jumpToDate]
        };
        function set(option, value) {
            if (option !== null && typeof option === "object") {
                Object.assign(self.config, option);
                for (var key in option) {
                    if (CALLBACKS[key] !== undefined)
                        CALLBACKS[key].forEach(function (x) { return x(); });
                }
            }
            else {
                self.config[option] = value;
                if (CALLBACKS[option] !== undefined)
                    CALLBACKS[option].forEach(function (x) { return x(); });
                else if (HOOKS.indexOf(option) > -1)
                    self.config[option] = arrayify(value);
            }
            self.redraw();
            updateValue(false);
        }
        function setSelectedDate(inputDate, format) {
            var dates = [];
            if (inputDate instanceof Array)
                dates = inputDate.map(function (d) { return self.parseDate(d, format); });
            else if (inputDate instanceof Date || typeof inputDate === "number")
                dates = [self.parseDate(inputDate, format)];
            else if (typeof inputDate === "string") {
                switch (self.config.mode) {
                    case "single":
                    case "time":
                        dates = [self.parseDate(inputDate, format)];
                        break;
                    case "multiple":
                        dates = inputDate
                            .split(self.config.conjunction)
                            .map(function (date) { return self.parseDate(date, format); });
                        break;
                    case "range":
                        dates = inputDate
                            .split(self.l10n.rangeSeparator)
                            .map(function (date) { return self.parseDate(date, format); });
                        break;
                    default:
                        break;
                }
            }
            else
                self.config.errorHandler(new Error("Invalid date supplied: " + JSON.stringify(inputDate)));
            self.selectedDates = dates.filter(function (d) { return d instanceof Date && isEnabled(d, false); });
            if (self.config.mode === "range")
                self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });
        }
        function setDate(date, triggerChange, format) {
            if (triggerChange === void 0) { triggerChange = false; }
            if (format === void 0) { format = self.config.dateFormat; }
            if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))
                return self.clear(triggerChange);
            setSelectedDate(date, format);
            self.showTimeInput = self.selectedDates.length > 0;
            self.latestSelectedDateObj = self.selectedDates[self.selectedDates.length - 1];
            self.redraw();
            jumpToDate();
            setHoursFromDate();
            if (self.selectedDates.length === 0) {
                self.clear(false);
            }
            updateValue(triggerChange);
            if (triggerChange)
                triggerEvent("onChange");
        }
        function parseDateRules(arr) {
            return arr
                .slice()
                .map(function (rule) {
                if (typeof rule === "string" ||
                    typeof rule === "number" ||
                    rule instanceof Date) {
                    return self.parseDate(rule, undefined, true);
                }
                else if (rule &&
                    typeof rule === "object" &&
                    rule.from &&
                    rule.to)
                    return {
                        from: self.parseDate(rule.from, undefined),
                        to: self.parseDate(rule.to, undefined)
                    };
                return rule;
            })
                .filter(function (x) { return x; }); // remove falsy values
        }
        function setupDates() {
            self.selectedDates = [];
            self.now = self.parseDate(self.config.now) || new Date();
            // Workaround IE11 setting placeholder as the input's value
            var preloadedDate = self.config.defaultDate ||
                ((self.input.nodeName === "INPUT" ||
                    self.input.nodeName === "TEXTAREA") &&
                    self.input.placeholder &&
                    self.input.value === self.input.placeholder
                    ? null
                    : self.input.value);
            if (preloadedDate)
                setSelectedDate(preloadedDate, self.config.dateFormat);
            self._initialDate =
                self.selectedDates.length > 0
                    ? self.selectedDates[0]
                    : self.config.minDate &&
                        self.config.minDate.getTime() > self.now.getTime()
                        ? self.config.minDate
                        : self.config.maxDate &&
                            self.config.maxDate.getTime() < self.now.getTime()
                            ? self.config.maxDate
                            : self.now;
            self.currentYear = self._initialDate.getFullYear();
            self.currentMonth = self._initialDate.getMonth();
            if (self.selectedDates.length > 0)
                self.latestSelectedDateObj = self.selectedDates[0];
            if (self.config.minTime !== undefined)
                self.config.minTime = self.parseDate(self.config.minTime, "H:i");
            if (self.config.maxTime !== undefined)
                self.config.maxTime = self.parseDate(self.config.maxTime, "H:i");
            self.minDateHasTime =
                !!self.config.minDate &&
                    (self.config.minDate.getHours() > 0 ||
                        self.config.minDate.getMinutes() > 0 ||
                        self.config.minDate.getSeconds() > 0);
            self.maxDateHasTime =
                !!self.config.maxDate &&
                    (self.config.maxDate.getHours() > 0 ||
                        self.config.maxDate.getMinutes() > 0 ||
                        self.config.maxDate.getSeconds() > 0);
            Object.defineProperty(self, "showTimeInput", {
                get: function () { return self._showTimeInput; },
                set: function (bool) {
                    self._showTimeInput = bool;
                    if (self.calendarContainer)
                        toggleClass(self.calendarContainer, "showTimeInput", bool);
                    self.isOpen && positionCalendar();
                }
            });
        }
        function setupInputs() {
            self.input = self.config.wrap
                ? element.querySelector("[data-input]")
                : element;
            /* istanbul ignore next */
            if (!self.input) {
                self.config.errorHandler(new Error("Invalid input element specified"));
                return;
            }
            // hack: store previous type to restore it after destroy()
            self.input._type = self.input.type;
            self.input.type = "text";
            self.input.classList.add("flatpickr-input");
            self._input = self.input;
            if (self.config.altInput) {
                // replicate self.element
                self.altInput = createElement(self.input.nodeName, self.config.altInputClass);
                self._input = self.altInput;
                self.altInput.placeholder = self.input.placeholder;
                self.altInput.disabled = self.input.disabled;
                self.altInput.required = self.input.required;
                self.altInput.tabIndex = self.input.tabIndex;
                self.altInput.type = "text";
                self.input.setAttribute("type", "hidden");
                if (!self.config.static && self.input.parentNode)
                    self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);
            }
            if (!self.config.allowInput)
                self._input.setAttribute("readonly", "readonly");
            self._positionElement = self.config.positionElement || self._input;
        }
        function setupMobile() {
            var inputType = self.config.enableTime
                ? self.config.noCalendar
                    ? "time"
                    : "datetime-local"
                : "date";
            self.mobileInput = createElement("input", self.input.className + " flatpickr-mobile");
            self.mobileInput.step = self.input.getAttribute("step") || "any";
            self.mobileInput.tabIndex = 1;
            self.mobileInput.type = inputType;
            self.mobileInput.disabled = self.input.disabled;
            self.mobileInput.required = self.input.required;
            self.mobileInput.placeholder = self.input.placeholder;
            self.mobileFormatStr =
                inputType === "datetime-local"
                    ? "Y-m-d\\TH:i:S"
                    : inputType === "date"
                        ? "Y-m-d"
                        : "H:i:S";
            if (self.selectedDates.length > 0) {
                self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);
            }
            if (self.config.minDate)
                self.mobileInput.min = self.formatDate(self.config.minDate, "Y-m-d");
            if (self.config.maxDate)
                self.mobileInput.max = self.formatDate(self.config.maxDate, "Y-m-d");
            self.input.type = "hidden";
            if (self.altInput !== undefined)
                self.altInput.type = "hidden";
            try {
                if (self.input.parentNode)
                    self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);
            }
            catch (_a) { }
            bind(self.mobileInput, "change", function (e) {
                self.setDate(e.target.value, false, self.mobileFormatStr);
                triggerEvent("onChange");
                triggerEvent("onClose");
            });
        }
        function toggle(e) {
            if (self.isOpen === true)
                return self.close();
            self.open(e);
        }
        function triggerEvent(event, data) {
            // If the instance has been destroyed already, all hooks have been removed
            if (self.config === undefined)
                return;
            var hooks = self.config[event];
            if (hooks !== undefined && hooks.length > 0) {
                for (var i = 0; hooks[i] && i < hooks.length; i++)
                    hooks[i](self.selectedDates, self.input.value, self, data);
            }
            if (event === "onChange") {
                self.input.dispatchEvent(createEvent("change"));
                // many front-end frameworks bind to the input event
                self.input.dispatchEvent(createEvent("input"));
            }
        }
        function createEvent(name) {
            var e = document.createEvent("Event");
            e.initEvent(name, true, true);
            return e;
        }
        function isDateSelected(date) {
            for (var i = 0; i < self.selectedDates.length; i++) {
                if (compareDates(self.selectedDates[i], date) === 0)
                    return "" + i;
            }
            return false;
        }
        function isDateInRange(date) {
            if (self.config.mode !== "range" || self.selectedDates.length < 2)
                return false;
            return (compareDates(date, self.selectedDates[0]) >= 0 &&
                compareDates(date, self.selectedDates[1]) <= 0);
        }
        function updateNavigationCurrentMonth() {
            if (self.config.noCalendar || self.isMobile || !self.monthNav)
                return;
            self.yearElements.forEach(function (yearElement, i) {
                var d = new Date(self.currentYear, self.currentMonth, 1);
                d.setMonth(self.currentMonth + i);
                if (self.config.showMonths > 1) {
                    self.monthElements[i].textContent =
                        monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + " ";
                }
                else {
                    self.monthsDropdownContainer.value = d.getMonth().toString();
                }
                yearElement.value = d.getFullYear().toString();
            });
            self._hidePrevMonthArrow =
                self.config.minDate !== undefined &&
                    (self.currentYear === self.config.minDate.getFullYear()
                        ? self.currentMonth <= self.config.minDate.getMonth()
                        : self.currentYear < self.config.minDate.getFullYear());
            self._hideNextMonthArrow =
                self.config.maxDate !== undefined &&
                    (self.currentYear === self.config.maxDate.getFullYear()
                        ? self.currentMonth + 1 > self.config.maxDate.getMonth()
                        : self.currentYear > self.config.maxDate.getFullYear());
        }
        function getDateStr(format) {
            return self.selectedDates
                .map(function (dObj) { return self.formatDate(dObj, format); })
                .filter(function (d, i, arr) {
                return self.config.mode !== "range" ||
                    self.config.enableTime ||
                    arr.indexOf(d) === i;
            })
                .join(self.config.mode !== "range"
                ? self.config.conjunction
                : self.l10n.rangeSeparator);
        }
        /**
         * Updates the values of inputs associated with the calendar
         */
        function updateValue(triggerChange) {
            if (triggerChange === void 0) { triggerChange = true; }
            if (self.mobileInput !== undefined && self.mobileFormatStr) {
                self.mobileInput.value =
                    self.latestSelectedDateObj !== undefined
                        ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)
                        : "";
            }
            self.input.value = getDateStr(self.config.dateFormat);
            if (self.altInput !== undefined) {
                self.altInput.value = getDateStr(self.config.altFormat);
            }
            if (triggerChange !== false)
                triggerEvent("onValueUpdate");
        }
        function onMonthNavClick(e) {
            var isPrevMonth = self.prevMonthNav.contains(e.target);
            var isNextMonth = self.nextMonthNav.contains(e.target);
            if (isPrevMonth || isNextMonth) {
                changeMonth(isPrevMonth ? -1 : 1);
            }
            else if (self.yearElements.indexOf(e.target) >= 0) {
                e.target.select();
            }
            else if (e.target.classList.contains("arrowUp")) {
                self.changeYear(self.currentYear + 1);
            }
            else if (e.target.classList.contains("arrowDown")) {
                self.changeYear(self.currentYear - 1);
            }
        }
        function timeWrapper(e) {
            e.preventDefault();
            var isKeyDown = e.type === "keydown", input = e.target;
            if (self.amPM !== undefined && e.target === self.amPM) {
                self.amPM.textContent =
                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
            }
            var min = parseFloat(input.getAttribute("min")), max = parseFloat(input.getAttribute("max")), step = parseFloat(input.getAttribute("step")), curValue = parseInt(input.value, 10), delta = e.delta ||
                (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);
            var newValue = curValue + step * delta;
            if (typeof input.value !== "undefined" && input.value.length === 2) {
                var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;
                if (newValue < min) {
                    newValue =
                        max +
                            newValue +
                            int(!isHourElem) +
                            (int(isHourElem) && int(!self.amPM));
                    if (isMinuteElem)
                        incrementNumInput(undefined, -1, self.hourElement);
                }
                else if (newValue > max) {
                    newValue =
                        input === self.hourElement ? newValue - max - int(!self.amPM) : min;
                    if (isMinuteElem)
                        incrementNumInput(undefined, 1, self.hourElement);
                }
                if (self.amPM &&
                    isHourElem &&
                    (step === 1
                        ? newValue + curValue === 23
                        : Math.abs(newValue - curValue) > step)) {
                    self.amPM.textContent =
                        self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
                }
                input.value = pad(newValue);
            }
        }
        init();
        return self;
    }
    /* istanbul ignore next */
    function _flatpickr(nodeList, config) {
        // static list
        var nodes = Array.prototype.slice
            .call(nodeList)
            .filter(function (x) { return x instanceof HTMLElement; });
        var instances = [];
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            try {
                if (node.getAttribute("data-fp-omit") !== null)
                    continue;
                if (node._flatpickr !== undefined) {
                    node._flatpickr.destroy();
                    node._flatpickr = undefined;
                }
                node._flatpickr = FlatpickrInstance(node, config || {});
                instances.push(node._flatpickr);
            }
            catch (e) {
                console.error(e);
            }
        }
        return instances.length === 1 ? instances[0] : instances;
    }
    /* istanbul ignore next */
    if (typeof HTMLElement !== "undefined" &&
        typeof HTMLCollection !== "undefined" &&
        typeof NodeList !== "undefined") {
        // browser env
        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {
            return _flatpickr(this, config);
        };
        HTMLElement.prototype.flatpickr = function (config) {
            return _flatpickr([this], config);
        };
    }
    /* istanbul ignore next */
    var flatpickr = function (selector, config) {
        if (typeof selector === "string") {
            return _flatpickr(window.document.querySelectorAll(selector), config);
        }
        else if (selector instanceof Node) {
            return _flatpickr([selector], config);
        }
        else {
            return _flatpickr(selector, config);
        }
    };
    /* istanbul ignore next */
    flatpickr.defaultConfig = {};
    flatpickr.l10ns = {
        en: __assign({}, english),
        "default": __assign({}, english)
    };
    flatpickr.localize = function (l10n) {
        flatpickr.l10ns["default"] = __assign({}, flatpickr.l10ns["default"], l10n);
    };
    flatpickr.setDefaults = function (config) {
        flatpickr.defaultConfig = __assign({}, flatpickr.defaultConfig, config);
    };
    flatpickr.parseDate = createDateParser({});
    flatpickr.formatDate = createDateFormatter({});
    flatpickr.compareDates = compareDates;
    /* istanbul ignore next */
    if (typeof jQuery !== "undefined" && typeof jQuery.fn !== "undefined") {
        jQuery.fn.flatpickr = function (config) {
            return _flatpickr(this, config);
        };
    }
    // eslint-disable-next-line @typescript-eslint/camelcase
    Date.prototype.fp_incr = function (days) {
        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === "string" ? parseInt(days, 10) : days));
    };
    if (typeof window !== "undefined") {
        window.flatpickr = flatpickr;
    }

    return flatpickr;

}));


/***/ }),

/***/ "4020":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ js_settings; });

// UNUSED EXPORTS: Checkbox, FileUploader, ContentSwitcher, Tab, OverflowMenu, Modal, Loading, InlineLoading, Dropdown, NumberInput, DataTableV2, DataTable, DatePicker, Pagination, Search, Accordion, CopyButton, Notification, Toolbar, Tooltip, TooltipSimple, ProgressIndicator, FloatingMenu, StructuredList, Slider, Tile, CodeSnippet, TextInput, SideNav, HeaderSubmenu, HeaderNav, NavigationMenu, ProductSwitcher, PaginationNav

// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/settings.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Settings.
 * @exports CarbonComponents.settings
 * @type Object
 * @property {boolean} [disableAutoInit]
 *   Disables automatic instantiation of components.
 *   By default (`CarbonComponents.disableAutoInit` is `false`),
 *   carbon-components attempts to instantiate components automatically
 *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute
 *   or upon DOM events (e.g. clicking) on such elements.
 *   See each components' static `.init()` methods for details.
 * @property {string} [prefix=bx]
 *   Brand prefix. Should be in sync with `$prefix` Sass variable in carbon-components/src/globals/scss/_vars.scss.
 * // @todo given that the default value is so long, is it appropriate to put in the JSDoc?
 * @property {string} [selectorTabbable]
 *   A selector selecting tabbable/focusable nodes.
 *   By default selectorTabbable refereneces links, areas, inputs, buttons, selects, textareas,
 *   iframes, objects, embeds, or elements explicitly using tabindex or contenteditable attributes
 *   as long as the element is not `disabled` or the `tabindex="-1"`.
 */
var settings = {
  prefix: 'bx',
  selectorTabbable: "\n    a[href], area[href], input:not([disabled]):not([tabindex='-1']),\n    button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),\n    textarea:not([disabled]):not([tabindex='-1']),\n    iframe, object, embed, *[tabindex]:not([tabindex='-1']), *[contenteditable=true]\n  ",
  selectorFocusable: "\n    a[href], area[href], input:not([disabled]),\n    button:not([disabled]),select:not([disabled]),\n    textarea:not([disabled]),\n    iframe, object, embed, *[tabindex], *[contenteditable=true]\n  "
};
var settings_1 = settings;
/* harmony default export */ var js_settings = (settings_1);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/mixin.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @param {Array} a An array.
 * @returns {Array} The flattened version of the given array.
 */


function flatten(a) {
  return a.reduce(function (result, item) {
    if (Array.isArray(item)) {
      result.push.apply(result, _toConsumableArray(flatten(item)));
    } else {
      result.push(item);
    }

    return result;
  }, []);
}
/**
 * An interface for defining mix-in classes. Used with {@link mixin}.
 * @function mixinfn
 * @param {Class} ToMix The class to mix.
 * @returns {Class} The class mixed-in with the given ToMix class.
 */

/**
 * @function mixin
 * @param {...mixinfn} mixinfns The functions generating mix-ins.
 * @returns {Class} The class generated with the given mix-ins.
 */


function mixin() {
  for (var _len = arguments.length, mixinfns = new Array(_len), _key = 0; _key < _len; _key++) {
    mixinfns[_key] = arguments[_key];
  }

  return flatten(mixinfns).reduce(function (Class, mixinfn) {
    return mixinfn(Class);
  },
  /*#__PURE__*/
  function () {
    function _class() {
      _classCallCheck(this, _class);
    }

    return _class;
  }());
}
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/create-component.js
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function create_component_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/* harmony default export */ var create_component = (function (ToMix) {
  var CreateComponent =
  /*#__PURE__*/
  function (_ToMix) {
    _inherits(CreateComponent, _ToMix);
    /**
     * The component instances managed by this component.
     * Releasing this component also releases the components in `this.children`.
     * @type {Component[]}
     */

    /**
     * Mix-in class to manage lifecycle of component.
     * The constructor sets up this component's effective options,
     * and registers this component't instance associated to an element.
     * @implements Handle
     * @param {HTMLElement} element The element working as this component.
     * @param {object} [options] The component options.
     */


    function CreateComponent(element) {
      var _this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      create_component_classCallCheck(this, CreateComponent);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateComponent).call(this, element, options));
      _this.children = [];

      if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        throw new TypeError('DOM element should be given to initialize this widget.');
      }
      /**
       * The element the component is of.
       * @type {Element}
       */


      _this.element = element;
      /**
       * The component options.
       * @type {object}
       */

      _this.options = Object.assign(Object.create(_this.constructor.options), options);

      _this.constructor.components.set(_this.element, _assertThisInitialized(_this));

      return _this;
    }
    /**
     * Instantiates this component of the given element.
     * @param {HTMLElement} element The element.
     */


    _createClass(CreateComponent, [{
      key: "release",

      /**
       * Releases this component's instance from the associated element.
       */
      value: function release() {
        for (var child = this.children.pop(); child; child = this.children.pop()) {
          child.release();
        }

        this.constructor.components.delete(this.element);
        return null;
      }
    }], [{
      key: "create",
      value: function create(element, options) {
        return this.components.get(element) || new this(element, options);
      }
    }]);

    return CreateComponent;
  }(ToMix);

  return CreateComponent;
});
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/init-component-by-search.js
function init_component_by_search_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    init_component_by_search_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    init_component_by_search_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return init_component_by_search_typeof(obj);
}

function init_component_by_search_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function init_component_by_search_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function init_component_by_search_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) init_component_by_search_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) init_component_by_search_defineProperties(Constructor, staticProps);
  return Constructor;
}

function init_component_by_search_possibleConstructorReturn(self, call) {
  if (call && (init_component_by_search_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return init_component_by_search_assertThisInitialized(self);
}

function init_component_by_search_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function init_component_by_search_getPrototypeOf(o) {
  init_component_by_search_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return init_component_by_search_getPrototypeOf(o);
}

function init_component_by_search_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) init_component_by_search_setPrototypeOf(subClass, superClass);
}

function init_component_by_search_setPrototypeOf(o, p) {
  init_component_by_search_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return init_component_by_search_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/* harmony default export */ var init_component_by_search = (function (ToMix) {
  /**
   * Mix-in class to instantiate components by searching for their root elements.
   * @class InitComponentBySearch
   */
  var InitComponentBySearch =
  /*#__PURE__*/
  function (_ToMix) {
    init_component_by_search_inherits(InitComponentBySearch, _ToMix);

    function InitComponentBySearch() {
      init_component_by_search_classCallCheck(this, InitComponentBySearch);

      return init_component_by_search_possibleConstructorReturn(this, init_component_by_search_getPrototypeOf(InitComponentBySearch).apply(this, arguments));
    }

    init_component_by_search_createClass(InitComponentBySearch, null, [{
      key: "init",

      /**
       * Instantiates component in the given node.
       * If the given element indicates that it's an component of this class, instantiates it.
       * Otherwise, instantiates components by searching for components in the given node.
       * @param {Node} target The DOM node to instantiate components in. Should be a document or an element.
       * @param {object} [options] The component options.
       * @param {boolean} [options.selectorInit] The CSS selector to find components.
       */
      value: function init() {
        var _this = this;

        var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var effectiveOptions = Object.assign(Object.create(this.options), options);

        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {
          throw new TypeError('DOM document or DOM element should be given to search for and initialize this widget.');
        }

        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {
          this.create(target, options);
        } else {
          Array.prototype.forEach.call(target.querySelectorAll(effectiveOptions.selectorInit), function (element) {
            return _this.create(element, options);
          });
        }
      }
    }]);

    return InitComponentBySearch;
  }(ToMix);

  return InitComponentBySearch;
});
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/handles.js
function handles_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    handles_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    handles_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return handles_typeof(obj);
}

function handles_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function handles_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function handles_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) handles_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) handles_defineProperties(Constructor, staticProps);
  return Constructor;
}

function handles_possibleConstructorReturn(self, call) {
  if (call && (handles_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return handles_assertThisInitialized(self);
}

function handles_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = handles_getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function handles_getPrototypeOf(o) {
  handles_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return handles_getPrototypeOf(o);
}

function handles_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) handles_setPrototypeOf(subClass, superClass);
}

function handles_setPrototypeOf(o, p) {
  handles_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return handles_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/* harmony default export */ var mixins_handles = (function (ToMix) {
  /**
   * Mix-in class to manage handles in component.
   * Managed handles are automatically released when the component with this class mixed in is released.
   * @class Handles
   * @implements Handle
   */
  var Handles =
  /*#__PURE__*/
  function (_ToMix) {
    handles_inherits(Handles, _ToMix);

    function Handles() {
      var _getPrototypeOf2;

      var _this;

      handles_classCallCheck(this, Handles);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = handles_possibleConstructorReturn(this, (_getPrototypeOf2 = handles_getPrototypeOf(Handles)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.handles = new Set();
      return _this;
    }

    handles_createClass(Handles, [{
      key: "manage",

      /**
       * Manages the given handle.
       * @param {Handle} handle The handle to manage.
       * @returns {Handle} The given handle.
       */
      value: function manage(handle) {
        this.handles.add(handle);
        return handle;
      }
      /**
       * Stop managing the given handle.
       * @param {Handle} handle The handle to stop managing.
       * @returns {Handle} The given handle.
       */

    }, {
      key: "unmanage",
      value: function unmanage(handle) {
        this.handles.delete(handle);
        return handle;
      }
    }, {
      key: "release",
      value: function release() {
        var _this2 = this;

        this.handles.forEach(function (handle) {
          handle.release();

          _this2.handles.delete(handle);
        });
        return _get(handles_getPrototypeOf(Handles.prototype), "release", this).call(this);
      }
    }]);

    return Handles;
  }(ToMix);

  return Handles;
});
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/on.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
function on(element) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  element.addEventListener.apply(element, args);
  return {
    release: function release() {
      element.removeEventListener.apply(element, args);
      return null;
    }
  };
}
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/checkbox/checkbox.js
function checkbox_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    checkbox_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    checkbox_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return checkbox_typeof(obj);
}

function checkbox_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function checkbox_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function checkbox_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) checkbox_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) checkbox_defineProperties(Constructor, staticProps);
  return Constructor;
}

function checkbox_possibleConstructorReturn(self, call) {
  if (call && (checkbox_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return checkbox_assertThisInitialized(self);
}

function checkbox_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function checkbox_getPrototypeOf(o) {
  checkbox_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return checkbox_getPrototypeOf(o);
}

function checkbox_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) checkbox_setPrototypeOf(subClass, superClass);
}

function checkbox_setPrototypeOf(o, p) {
  checkbox_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return checkbox_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */








var stateChangeTypes = {
  true: 'true',
  false: 'false',
  mixed: 'mixed'
};

var checkbox_Checkbox =
/*#__PURE__*/
function (_mixin) {
  checkbox_inherits(Checkbox, _mixin);
  /**
   * Checkbox UI.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a checkbox UI.
   */


  function Checkbox(element, options) {
    var _this;

    checkbox_classCallCheck(this, Checkbox);

    _this = checkbox_possibleConstructorReturn(this, checkbox_getPrototypeOf(Checkbox).call(this, element, options));

    _this.manage(on(_this.element, 'click', function (event) {
      _this._handleClick(event);
    }));

    _this.manage(on(_this.element, 'focus', function (event) {
      _this._handleFocus(event);
    }));

    _this.manage(on(_this.element, 'blur', function (event) {
      _this._handleBlur(event);
    }));

    _this._indeterminateCheckbox();

    _this._initCheckbox();

    return _this;
  }

  checkbox_createClass(Checkbox, [{
    key: "_handleClick",
    value: function _handleClick() {
      if (this.element.checked === true) {
        this.element.setAttribute('checked', '');
        this.element.setAttribute('aria-checked', 'true');
        this.element.checked = true; // nested checkboxes inside labels

        if (this.element.parentElement.classList.contains(this.options.classLabel)) {
          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'true');
        }
      } else if (this.element.checked === false) {
        this.element.removeAttribute('checked');
        this.element.setAttribute('aria-checked', 'false');
        this.element.checked = false; // nested checkboxes inside labels

        if (this.element.parentElement.classList.contains(this.options.classLabel)) {
          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'false');
        }
      }
    }
  }, {
    key: "_handleFocus",
    value: function _handleFocus() {
      if (this.element.parentElement.classList.contains(this.options.classLabel)) {
        this.element.parentElement.classList.add(this.options.classLabelFocused);
      }
    }
  }, {
    key: "_handleBlur",
    value: function _handleBlur() {
      if (this.element.parentElement.classList.contains(this.options.classLabel)) {
        this.element.parentElement.classList.remove(this.options.classLabelFocused);
      }
    }
    /**
     * Sets the new checkbox state.
     * @param {boolean|string} [state]
     *   The new checkbox state to set. `mixed` to put checkbox in indeterminate state.
     *   If omitted, this method simply makes the style reflect `aria-checked` attribute.
     */

  }, {
    key: "setState",
    value: function setState(state) {
      if (state === undefined || stateChangeTypes[state] === undefined) {
        throw new TypeError('setState expects a value of true, false or mixed.');
      }

      this.element.setAttribute('aria-checked', state);
      this.element.indeterminate = state === stateChangeTypes.mixed;
      this.element.checked = state === stateChangeTypes.true;
      var container = this.element.closest(this.options.selectorContainedCheckboxState);

      if (container) {
        container.setAttribute(this.options.attribContainedCheckboxState, state);
      }
    }
  }, {
    key: "setDisabled",
    value: function setDisabled(value) {
      if (value === undefined) {
        throw new TypeError('setDisabled expects a boolean value of true or false');
      }

      if (value === true) {
        this.element.setAttribute('disabled', true);
      } else if (value === false) {
        this.element.removeAttribute('disabled');
      }

      var container = this.element.closest(this.options.selectorContainedCheckboxDisabled);

      if (container) {
        container.setAttribute(this.options.attribContainedCheckboxDisabled, value);
      }
    }
  }, {
    key: "_indeterminateCheckbox",
    value: function _indeterminateCheckbox() {
      if (this.element.getAttribute('aria-checked') === 'mixed') {
        this.element.indeterminate = true;
      }

      if (this.element.indeterminate === true) {
        this.element.setAttribute('aria-checked', 'mixed');
      }

      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.indeterminate === true) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'mixed');
      }
    }
  }, {
    key: "_initCheckbox",
    value: function _initCheckbox() {
      if (this.element.checked === true) {
        this.element.setAttribute('aria-checked', 'true');
      }

      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.checked) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'true');
      }

      if (this.element.parentElement.classList.contains(this.options.classLabel)) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, 'false');
      }

      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.disabled) {
        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, 'true');
      }
    }
    /**
     * The map associating DOM element and copy button UI instance.
     * @member Checkbox.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode Checkbox.create .create()}, or {@linkcode Checkbox.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode Checkbox.init .init()} works.
     * @member Checkbox.options
     * @type {object}
     * @property {string} selectorInit The data attribute to find copy button UIs.
     * @property {string} selectorContainedCheckboxState The CSS selector to find a container of checkbox preserving checked state.
     * @property {string} selectorContainedCheckboxDisabled
     *   The CSS selector to find a container of checkbox preserving disabled state.
     * @property {string} classLabel The CSS class for the label.
     * @property {string} classLabelFocused The CSS class for the focused label.
     * @property {string} attribContainedCheckboxState The attribute name for the checked state of contained checkbox.
     * @property {string} attribContainedCheckboxDisabled The attribute name for the disabled state of contained checkbox.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: ".".concat(prefix, "--checkbox"),
        selectorContainedCheckboxState: '[data-contained-checkbox-state]',
        selectorContainedCheckboxDisabled: '[data-contained-checkbox-disabled]',
        classLabel: "".concat(prefix, "--checkbox-label"),
        classLabelFocused: "".concat(prefix, "--checkbox-label__focus"),
        attribContainedCheckboxState: 'data-contained-checkbox-state',
        attribContainedCheckboxDisabled: 'data-contained-checkbox-disabled'
      };
    }
  }]);

  Checkbox.components = new WeakMap();
  Checkbox.stateChangeTypes = stateChangeTypes;
  return Checkbox;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var checkbox_checkbox = (checkbox_Checkbox);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/evented-state.js
function evented_state_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    evented_state_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    evented_state_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return evented_state_typeof(obj);
}

function evented_state_toConsumableArray(arr) {
  return evented_state_arrayWithoutHoles(arr) || evented_state_iterableToArray(arr) || evented_state_nonIterableSpread();
}

function evented_state_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function evented_state_iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function evented_state_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function evented_state_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function evented_state_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function evented_state_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) evented_state_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) evented_state_defineProperties(Constructor, staticProps);
  return Constructor;
}

function evented_state_possibleConstructorReturn(self, call) {
  if (call && (evented_state_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return evented_state_assertThisInitialized(self);
}

function evented_state_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function evented_state_getPrototypeOf(o) {
  evented_state_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return evented_state_getPrototypeOf(o);
}

function evented_state_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) evented_state_setPrototypeOf(subClass, superClass);
}

function evented_state_setPrototypeOf(o, p) {
  evented_state_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return evented_state_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/* harmony default export */ var evented_state = (function (ToMix) {
  /**
   * Mix-in class to manage events associated with states.
   * @class EventedState
   */
  var EventedState =
  /*#__PURE__*/
  function (_ToMix) {
    evented_state_inherits(EventedState, _ToMix);

    function EventedState() {
      evented_state_classCallCheck(this, EventedState);

      return evented_state_possibleConstructorReturn(this, evented_state_getPrototypeOf(EventedState).apply(this, arguments));
    }

    evented_state_createClass(EventedState, [{
      key: "_changeState",

      /* eslint-disable jsdoc/check-param-names */

      /**
       * The internal implementation for {@link EventedState#changeState `.changeState()`}, performing actual change in state.
       * @param {string} [state] The new state. Can be an omitted, which means toggling.
       * @param {object} [detail]
       *   The object that should be put to event details that is fired before/after changing state.
       *   Can have a `group` property, which specifies what state to be changed.
       * @param {EventedState~changeStateCallback} callback The callback called once changing state is finished or is canceled.
       * @private
       */
      value: function _changeState() {
        throw new Error('_changeState() should be overriden to perform actual change in state.');
      }
      /**
       * Changes the state of this component.
       * @param {string} [state] The new state. Can be an omitted, which means toggling.
       * @param {object} [detail]
       *   The object that should be put to event details that is fired before/after changing state.
       *   Can have a `group` property, which specifies what state to be changed.
       * @param {EventedState~changeStateCallback} [callback] The callback called once changing state is finished or is canceled.
       */

    }, {
      key: "changeState",
      value: function changeState() {
        var _this = this;

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var state = typeof args[0] === 'string' ? args.shift() : undefined;
        var detail = Object(args[0]) === args[0] && typeof args[0] !== 'function' ? args.shift() : undefined;
        var callback = typeof args[0] === 'function' ? args.shift() : undefined;

        if (typeof this.shouldStateBeChanged === 'function' && !this.shouldStateBeChanged(state, detail)) {
          if (callback) {
            callback(null, true);
          }

          return;
        }

        var data = {
          group: detail && detail.group,
          state: state
        };
        var eventNameSuffix = [data.group, state].filter(Boolean).join('-').split('-') // Group or state may contain hyphen
        .map(function (item) {
          return item[0].toUpperCase() + item.substr(1);
        }).join('');
        var eventStart = new CustomEvent(this.options["eventBefore".concat(eventNameSuffix)], {
          bubbles: true,
          cancelable: true,
          detail: detail
        });
        var fireOnNode = detail && detail.delegatorNode || this.element;
        var canceled = !fireOnNode.dispatchEvent(eventStart);

        if (canceled) {
          if (callback) {
            var error = new Error("Changing state (".concat(JSON.stringify(data), ") has been canceled."));
            error.canceled = true;
            callback(error);
          }
        } else {
          var changeStateArgs = [state, detail].filter(Boolean);

          this._changeState.apply(this, evented_state_toConsumableArray(changeStateArgs).concat([function () {
            fireOnNode.dispatchEvent(new CustomEvent(_this.options["eventAfter".concat(eventNameSuffix)], {
              bubbles: true,
              cancelable: true,
              detail: detail
            }));

            if (callback) {
              callback();
            }
          }]));
        }
      }
      /* eslint-enable jsdoc/check-param-names */

      /**
       * Tests if change in state should happen or not.
       * Classes inheriting {@link EventedState `EventedState`} should override this function.
       * @function EventedState#shouldStateBeChanged
       * @param {string} [state] The new state. Can be an omitted, which means toggling.
       * @param {object} [detail]
       *   The object that should be put to event details that is fired before/after changing state.
       *   Can have a `group` property, which specifies what state to be changed.
       * @returns {boolean}
       *   `false` if change in state shouldn't happen, e.g. when the given new state is the same as the current one.
       */

    }]);

    return EventedState;
  }(ToMix);
  /**
   * The callback called once changing state is finished or is canceled.
   * @callback EventedState~changeStateCallback
   * @param {Error} error
   *   An error object with `true` in its `canceled` property if changing state is canceled.
   *   Cancellation happens if the handler of a custom event, that is fired before changing state happens,
   *   calls `.preventDefault()` against the event.
   * @param {boolean} keptState
   *   `true` if the call to {@link EventedState#changeState `.changeState()`} didn't cause actual change in state.
   */


  return EventedState;
});
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/event-matches.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @param {Event} event The event.
 * @param {string} selector The selector.
 * @returns {Element}
 *   The closest ancestor of the event target (or the event target itself) which matches the selectors given in parameter.
 */
function eventMatches(event, selector) {
  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by a polyfill).
  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.
  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.
  var target = event.target,
      currentTarget = event.currentTarget;

  if (typeof target.matches === 'function') {
    if (target.matches(selector)) {
      // If event target itself matches the given selector, return it
      return target;
    }

    if (target.matches("".concat(selector, " *"))) {
      var closest = target.closest(selector);

      if ((currentTarget.nodeType === Node.DOCUMENT_NODE ? currentTarget.documentElement : currentTarget).contains(closest)) {
        return closest;
      }
    }
  }

  return undefined;
}
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/file-uploader/file-uploader.js
function file_uploader_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    file_uploader_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    file_uploader_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return file_uploader_typeof(obj);
}

function file_uploader_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function file_uploader_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function file_uploader_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) file_uploader_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) file_uploader_defineProperties(Constructor, staticProps);
  return Constructor;
}

function file_uploader_possibleConstructorReturn(self, call) {
  if (call && (file_uploader_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return file_uploader_assertThisInitialized(self);
}

function file_uploader_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function file_uploader_getPrototypeOf(o) {
  file_uploader_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return file_uploader_getPrototypeOf(o);
}

function file_uploader_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) file_uploader_setPrototypeOf(subClass, superClass);
}

function file_uploader_setPrototypeOf(o, p) {
  file_uploader_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return file_uploader_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











var toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var file_uploader_FileUploader =
/*#__PURE__*/
function (_mixin) {
  file_uploader_inherits(FileUploader, _mixin);
  /**
   * File uploader.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends eventedState
   * @extends Handles
   * @param {HTMLElement} element The element working as a file uploader.
   * @param {object} [options] The component options. See static options.
   */


  function FileUploader(element) {
    var _this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    file_uploader_classCallCheck(this, FileUploader);

    _this = file_uploader_possibleConstructorReturn(this, file_uploader_getPrototypeOf(FileUploader).call(this, element, options));

    _this._changeState = function (state, detail, callback) {
      if (state === 'delete-filename-fileuploader') {
        _this.container.removeChild(detail.filenameElement);
      }

      if (typeof callback === 'function') {
        callback();
      }
    };

    _this._handleDeleteButton = function (evt) {
      var target = eventMatches(evt, _this.options.selectorCloseButton);

      if (target) {
        _this.changeState('delete-filename-fileuploader', {
          initialEvt: evt,
          filenameElement: target.closest(_this.options.selectorSelectedFile)
        });
      }
    };

    _this._handleDragDrop = function (evt) {
      var isOfSelf = _this.element.contains(evt.target); // In IE11 `evt.dataTransfer.types` is a `DOMStringList` instead of an array


      if (Array.prototype.indexOf.call(evt.dataTransfer.types, 'Files') >= 0 && !eventMatches(evt, _this.options.selectorOtherDropContainers)) {
        var inArea = isOfSelf && eventMatches(evt, _this.options.selectorDropContainer);

        if (evt.type === 'dragover') {
          evt.preventDefault();
          var dropEffect = inArea ? 'copy' : 'none';

          if (Array.isArray(evt.dataTransfer.types)) {
            // IE11 throws a "permission denied" error accessing `.effectAllowed`
            evt.dataTransfer.effectAllowed = dropEffect;
          }

          evt.dataTransfer.dropEffect = dropEffect;

          _this.dropContainer.classList.toggle(_this.options.classDragOver, Boolean(inArea));
        }

        if (evt.type === 'dragleave') {
          _this.dropContainer.classList.toggle(_this.options.classDragOver, false);
        }

        if (inArea && evt.type === 'drop') {
          evt.preventDefault();

          _this._displayFilenames(evt.dataTransfer.files);

          _this.dropContainer.classList.remove(_this.options.classDragOver);
        }
      }
    };

    _this.input = _this.element.querySelector(_this.options.selectorInput);
    _this.container = _this.element.querySelector(_this.options.selectorContainer);
    _this.dropContainer = _this.element.querySelector(_this.options.selectorDropContainer);

    if (!_this.input) {
      throw new TypeError('Cannot find the file input box.');
    }

    if (!_this.container) {
      throw new TypeError('Cannot find the file names container.');
    }

    _this.inputId = _this.input.getAttribute('id');

    _this.manage(on(_this.input, 'change', function () {
      return _this._displayFilenames();
    }));

    _this.manage(on(_this.container, 'click', _this._handleDeleteButton));

    _this.manage(on(_this.element.ownerDocument, 'dragleave', _this._handleDragDrop));

    _this.manage(on(_this.dropContainer, 'dragover', _this._handleDragDrop));

    _this.manage(on(_this.dropContainer, 'drop', _this._handleDragDrop));

    return _this;
  }

  file_uploader_createClass(FileUploader, [{
    key: "_filenamesHTML",
    value: function _filenamesHTML(name, id) {
      return "<span class=\"".concat(this.options.classSelectedFile, "\">\n      <p class=\"").concat(this.options.classFileName, "\">").concat(name, "</p>\n      <span data-for=\"").concat(id, "\" class=\"").concat(this.options.classStateContainer, "\"></span>\n    </span>");
    }
  }, {
    key: "_uploadHTML",
    value: function _uploadHTML() {
      return "\n      <div class=\"".concat(this.options.classLoadingAnimation, "\">\n        <div data-inline-loading-spinner class=\"").concat(this.options.classLoading, "\">\n          <svg class=\"").concat(this.options.classLoadingSvg, "\" viewBox=\"-75 -75 150 150\">\n            <circle class=\"").concat(this.options.classLoadingBackground, "\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n            <circle class=\"").concat(this.options.classLoadingStroke, "\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n          </svg>\n        </div>\n      </div>");
    }
  }, {
    key: "_closeButtonHTML",
    value: function _closeButtonHTML() {
      return "\n      <button class=\"".concat(this.options.classFileClose, "\" type=\"button\" aria-label=\"close\">\n      <svg aria-hidden=\"true\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\">\n      <path fill=\"#231F20\" d=\"M12 4.7l-.7-.7L8 7.3 4.7 4l-.7.7L7.3 8 4 11.3l.7.7L8 8.7l3.3 3.3.7-.7L8.7 8z\"/>\n      </svg>\n      </button>");
    }
  }, {
    key: "_checkmarkHTML",
    value: function _checkmarkHTML() {
      return "\n      <svg focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        style=\"will-change: transform;\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"".concat(this.options.classFileComplete, "\"\n        width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"\n        aria-hidden=\"true\">\n        <path d=\"M8 1C4.1 1 1 4.1 1 8s3.1 7 7 7 7-3.1 7-7-3.1-7-7-7zM7 11L4.3 8.3l.9-.8L7 9.3l4-3.9.9.8L7 11z\"></path>\n        <path d=\"M7 11L4.3 8.3l.9-.8L7 9.3l4-3.9.9.8L7 11z\" data-icon-path=\"inner-path\" opacity=\"0\"></path>\n      </svg>\n    ");
    }
  }, {
    key: "_getStateContainers",
    value: function _getStateContainers() {
      var stateContainers = toArray(this.element.querySelectorAll("[data-for=".concat(this.inputId, "]")));

      if (stateContainers.length === 0) {
        throw new TypeError('State container elements not found; invoke _displayFilenames() first');
      }

      if (stateContainers[0].dataset.for !== this.inputId) {
        throw new TypeError('File input id must equal [data-for] attribute');
      }

      return stateContainers;
    }
    /**
     * Inject selected files into DOM. Invoked on change event.
     * @param {File[]} files The files to upload.
     */

  }, {
    key: "_displayFilenames",
    value: function _displayFilenames() {
      var _this2 = this;

      var files = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.input.files;
      var container = this.element.querySelector(this.options.selectorContainer);
      var HTMLString = toArray(files).map(function (file) {
        return _this2._filenamesHTML(file.name, _this2.inputId);
      }).join('');
      container.insertAdjacentHTML('afterbegin', HTMLString);
    }
  }, {
    key: "_removeState",
    value: function _removeState(element) {
      if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        throw new TypeError('DOM element should be given to initialize this widget.');
      }

      while (element.firstChild) {
        element.removeChild(element.firstChild);
      }
    }
  }, {
    key: "_handleStateChange",
    value: function _handleStateChange(elements, selectIndex, html) {
      var _this3 = this;

      if (selectIndex === undefined) {
        elements.forEach(function (el) {
          _this3._removeState(el);

          el.insertAdjacentHTML('beforeend', html);
        });
      } else {
        elements.forEach(function (el, index) {
          if (index === selectIndex) {
            _this3._removeState(el);

            el.insertAdjacentHTML('beforeend', html);
          }
        });
      }
    }
    /**
     * Handles delete button.
     * @param {Event} evt The event triggering this action.
     * @private
     */

  }, {
    key: "setState",
    value: function setState(state, selectIndex) {
      var stateContainers = this._getStateContainers();

      if (state === 'edit') {
        this._handleStateChange(stateContainers, selectIndex, this._closeButtonHTML());
      }

      if (state === 'upload') {
        this._handleStateChange(stateContainers, selectIndex, this._uploadHTML());
      }

      if (state === 'complete') {
        this._handleStateChange(stateContainers, selectIndex, this._checkmarkHTML());
      }
    }
    /**
     * The map associating DOM element and file uploader instance.
     * @member FileUploader.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-file]',
        selectorInput: "input[type=\"file\"].".concat(prefix, "--file-input"),
        selectorContainer: '[data-file-container]',
        selectorCloseButton: ".".concat(prefix, "--file-close"),
        selectorSelectedFile: ".".concat(prefix, "--file__selected-file"),
        selectorDropContainer: "[data-file-drop-container]",
        selectorOtherDropContainers: '[data-drop-container]',
        classLoading: "".concat(prefix, "--loading ").concat(prefix, "--loading--small"),
        classLoadingAnimation: "".concat(prefix, "--inline-loading__animation"),
        classLoadingSvg: "".concat(prefix, "--loading__svg"),
        classLoadingBackground: "".concat(prefix, "--loading__background"),
        classLoadingStroke: "".concat(prefix, "--loading__stroke"),
        classFileName: "".concat(prefix, "--file-filename"),
        classFileClose: "".concat(prefix, "--file-close"),
        classFileComplete: "".concat(prefix, "--file-complete"),
        classSelectedFile: "".concat(prefix, "--file__selected-file"),
        classStateContainer: "".concat(prefix, "--file__state-container"),
        classDragOver: "".concat(prefix, "--file__drop-container--drag-over"),
        eventBeforeDeleteFilenameFileuploader: 'fileuploader-before-delete-filename',
        eventAfterDeleteFilenameFileuploader: 'fileuploader-after-delete-filename'
      };
    }
  }]);

  FileUploader.components = new WeakMap();
  return FileUploader;
}(mixin(create_component, init_component_by_search, evented_state, mixins_handles));

/* harmony default export */ var file_uploader = (file_uploader_FileUploader);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/content-switcher/content-switcher.js
function content_switcher_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    content_switcher_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    content_switcher_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return content_switcher_typeof(obj);
}

function content_switcher_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function content_switcher_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function content_switcher_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) content_switcher_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) content_switcher_defineProperties(Constructor, staticProps);
  return Constructor;
}

function content_switcher_possibleConstructorReturn(self, call) {
  if (call && (content_switcher_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return content_switcher_assertThisInitialized(self);
}

function content_switcher_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function content_switcher_getPrototypeOf(o) {
  content_switcher_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return content_switcher_getPrototypeOf(o);
}

function content_switcher_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) content_switcher_setPrototypeOf(subClass, superClass);
}

function content_switcher_setPrototypeOf(o, p) {
  content_switcher_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return content_switcher_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











var content_switcher_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var content_switcher_ContentSwitcher =
/*#__PURE__*/
function (_mixin) {
  content_switcher_inherits(ContentSwitcher, _mixin);
  /**
   * Set of content switcher buttons.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends EventedState
   * @extends Handles
   * @param {HTMLElement} element The element working as a set of content switcher buttons.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorButton] The CSS selector to find switcher buttons.
   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected switcher button.
   * @param {string} [options.classActive] The CSS class for switcher button's selected state.
   * @param {string} [options.eventBeforeSelected]
   *   The name of the custom event fired before a switcher button is selected.
   *   Cancellation of this event stops selection of content switcher button.
   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a switcher button is selected.
   */


  function ContentSwitcher(element, options) {
    var _this;

    content_switcher_classCallCheck(this, ContentSwitcher);

    _this = content_switcher_possibleConstructorReturn(this, content_switcher_getPrototypeOf(ContentSwitcher).call(this, element, options));

    _this.manage(on(_this.element, 'click', function (event) {
      _this._handleClick(event);
    }));

    return _this;
  }
  /**
   * Handles click on content switcher button set.
   * If the click is on a content switcher button, activates it.
   * @param {Event} event The event triggering this method.
   */


  content_switcher_createClass(ContentSwitcher, [{
    key: "_handleClick",
    value: function _handleClick(event) {
      var button = eventMatches(event, this.options.selectorButton);

      if (button) {
        this.changeState({
          group: 'selected',
          item: button,
          launchingEvent: event
        });
      }
    }
    /**
     * Internal method of {@linkcode ContentSwitcher#setActive .setActive()}, to select a content switcher button.
     * @private
     * @param {object} detail The detail of the event trigging this action.
     * @param {HTMLElement} detail.item The button to be selected.
     * @param {Function} callback Callback called when change in state completes.
     */

  }, {
    key: "_changeState",
    value: function _changeState(_ref, callback) {
      var _this2 = this;

      var item = _ref.item; // `options.selectorLink` is not defined in this class itself, code here primary is for inherited classes

      var itemLink = item.querySelector(this.options.selectorLink);

      if (itemLink) {
        content_switcher_toArray(this.element.querySelectorAll(this.options.selectorLink)).forEach(function (link) {
          if (link !== itemLink) {
            link.setAttribute('aria-selected', 'false');
          }
        });
        itemLink.setAttribute('aria-selected', 'true');
      }

      var selectorButtons = content_switcher_toArray(this.element.querySelectorAll(this.options.selectorButton));
      selectorButtons.forEach(function (button) {
        if (button !== item) {
          button.setAttribute('aria-selected', false);
          button.classList.toggle(_this2.options.classActive, false);
          content_switcher_toArray(button.ownerDocument.querySelectorAll(button.dataset.target)).forEach(function (element) {
            element.setAttribute('hidden', '');
            element.setAttribute('aria-hidden', 'true');
          });
        }
      });
      item.classList.toggle(this.options.classActive, true);
      item.setAttribute('aria-selected', true);
      content_switcher_toArray(item.ownerDocument.querySelectorAll(item.dataset.target)).forEach(function (element) {
        element.removeAttribute('hidden');
        element.setAttribute('aria-hidden', 'false');
      });

      if (callback) {
        callback();
      }
    }
    /**
     * Selects a content switcher button.
     * If the selected button has `data-target` attribute, DOM elements it points to as a CSS selector will be shown.
     * DOM elements associated with unselected buttons in the same way will be hidden.
     * @param {HTMLElement} item The button to be selected.
     * @param {ChangeState~callback} callback The callback is called once selection is finished
     * or is canceled. Will only invoke callback if it's passed in.
     */

  }, {
    key: "setActive",
    value: function setActive(item, callback) {
      this.changeState({
        group: 'selected',
        item: item
      }, function (error) {
        if (error) {
          if (callback) {
            callback(Object.assign(error, {
              item: item
            }));
          }
        } else if (callback) {
          callback(null, item);
        }
      });
    }
    /**
     * The map associating DOM element and content switcher set instance.
     * @member ContentSwitcher.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode ContentSwitcher.create .create()}, or {@linkcode ContentSwitcher.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode ContentSwitcher.init .init()} works.
     * @member ContentSwitcher.options
     * @type {object}
     * @property {string} selectorInit The CSS selector to find content switcher button set.
     * @property {string} [selectorButton] The CSS selector to find switcher buttons.
     * @property {string} [selectorButtonSelected] The CSS selector to find the selected switcher button.
     * @property {string} [classActive] The CSS class for switcher button's selected state.
     * @property {string} [eventBeforeSelected]
     *   The name of the custom event fired before a switcher button is selected.
     *   Cancellation of this event stops selection of content switcher button.
     * @property {string} [eventAfterSelected] The name of the custom event fired after a switcher button is selected.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-content-switcher]',
        selectorButton: "input[type=\"radio\"], .".concat(prefix, "--content-switcher-btn"),
        classActive: "".concat(prefix, "--content-switcher--selected"),
        eventBeforeSelected: 'content-switcher-beingselected',
        eventAfterSelected: 'content-switcher-selected'
      };
    }
  }]);

  ContentSwitcher.components = new WeakMap();
  return ContentSwitcher;
}(mixin(create_component, init_component_by_search, evented_state, mixins_handles));

/* harmony default export */ var content_switcher = (content_switcher_ContentSwitcher);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/tabs/tabs.js
function tabs_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    tabs_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    tabs_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return tabs_typeof(obj);
}

function tabs_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function tabs_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function tabs_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) tabs_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) tabs_defineProperties(Constructor, staticProps);
  return Constructor;
}

function tabs_possibleConstructorReturn(self, call) {
  if (call && (tabs_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return tabs_assertThisInitialized(self);
}

function tabs_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function tabs_get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    tabs_get = Reflect.get;
  } else {
    tabs_get = function _get(target, property, receiver) {
      var base = tabs_superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return tabs_get(target, property, receiver || target);
}

function tabs_superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = tabs_getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function tabs_getPrototypeOf(o) {
  tabs_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return tabs_getPrototypeOf(o);
}

function tabs_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) tabs_setPrototypeOf(subClass, superClass);
}

function tabs_setPrototypeOf(o, p) {
  tabs_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return tabs_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */







var tabs_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var tabs_Tab =
/*#__PURE__*/
function (_ContentSwitcher) {
  tabs_inherits(Tab, _ContentSwitcher);
  /**
   * Container of tabs.
   * @extends ContentSwitcher
   * @param {HTMLElement} element The element working as a container of tabs.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorMenu] The CSS selector to find the drop down menu used in narrow mode.
   * @param {string} [options.selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.
   * @param {string} [options.selectorTriggerText]
   *   The CSS selector to find the element used in narrow mode showing the selected tab item.
   * @param {string} [options.selectorButton] The CSS selector to find tab containers.
   * @param {string} [options.selectorButtonSelected] The CSS selector to find the selected tab.
   * @param {string} [options.selectorLink] The CSS selector to find the links in tabs.
   * @param {string} [options.classActive] The CSS class for tab's selected state.
   * @param {string} [options.classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.
   * @param {string} [options.eventBeforeSelected]
   *   The name of the custom event fired before a tab is selected.
   *   Cancellation of this event stops selection of tab.
   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a tab is selected.
   */


  function Tab(element, options) {
    var _this;

    tabs_classCallCheck(this, Tab);

    _this = tabs_possibleConstructorReturn(this, tabs_getPrototypeOf(Tab).call(this, element, options));

    _this.manage(on(_this.element, 'keydown', function (event) {
      _this._handleKeyDown(event);
    }));

    _this.manage(on(_this.element.ownerDocument, 'click', function (event) {
      _this._handleDocumentClick(event);
    }));

    var selected = _this.element.querySelector(_this.options.selectorButtonSelected);

    if (selected) {
      _this._updateTriggerText(selected);
    }

    return _this;
  }
  /**
   * Internal method of {@linkcode Tab#setActive .setActive()}, to select a tab item.
   * @private
   * @param {object} detail The detail of the event trigging this action.
   * @param {HTMLElement} detail.item The tab item to be selected.
   * @param {Function} callback Callback called when change in state completes.
   */


  tabs_createClass(Tab, [{
    key: "_changeState",
    value: function _changeState(detail, callback) {
      var _this2 = this;

      tabs_get(tabs_getPrototypeOf(Tab.prototype), "_changeState", this).call(this, detail, function (error) {
        if (!error) {
          _this2._updateTriggerText(detail.item);
        }

        for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          data[_key - 1] = arguments[_key];
        }

        callback.apply(void 0, [error].concat(data));
      });
    }
    /**
     * Handles click on tab container.
     * * If the click is on a tab, activates it.
     * * If the click is on the button to open the drop down menu, does so.
     * @param {Event} event The event triggering this method.
     */

  }, {
    key: "_handleClick",
    value: function _handleClick(event) {
      var button = eventMatches(event, this.options.selectorButton);
      var trigger = eventMatches(event, this.options.selectorTrigger);

      if (button && !button.classList.contains(this.options.classButtonDisabled)) {
        tabs_get(tabs_getPrototypeOf(Tab.prototype), "_handleClick", this).call(this, event);

        this._updateMenuState(false);
      }

      if (trigger) {
        this._updateMenuState();
      }
    }
    /**
     * Handles click on document.
     * @param {Event} event The triggering event.
     * @private
     */

  }, {
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(event) {
      var element = this.element;
      var isOfSelf = element.contains(event.target);

      if (isOfSelf) {
        return;
      }

      this._updateMenuState(false);
    }
    /**
     * Handles arrow keys on tab container.
     * * Left keys are used to go to previous tab.
     * * Right keys are used to go to next tab.
     * @param {Event} event The event triggering this method.
     */

  }, {
    key: "_handleKeyDown",
    value: function _handleKeyDown(event) {
      var _this3 = this;

      var triggerNode = eventMatches(event, this.options.selectorTrigger);

      if (triggerNode) {
        if (event.which === 13) {
          this._updateMenuState();
        }

        return;
      }

      var direction = {
        37: this.constructor.NAVIGATE.BACKWARD,
        39: this.constructor.NAVIGATE.FORWARD
      }[event.which];

      if (direction) {
        var buttons = tabs_toArray(this.element.querySelectorAll(this.options.selectorButtonEnabled));
        var button = this.element.querySelector(this.options.selectorButtonSelected);
        var nextIndex = Math.max(buttons.indexOf(button) + direction, -1
        /* For `button` not found in `buttons` */
        );
        var nextIndexLooped = nextIndex >= 0 && nextIndex < buttons.length ? nextIndex : nextIndex - Math.sign(nextIndex) * buttons.length;
        this.setActive(buttons[nextIndexLooped], function (error, item) {
          if (item) {
            var link = item.querySelector(_this3.options.selectorLink);

            if (link) {
              link.focus();
            }
          }
        });
        event.preventDefault();
      }
    }
    /**
     * Shows/hides the drop down menu used in narrow mode.
     * @param {boolean} [force] `true` to show the menu, `false` to hide the menu, otherwise toggles the menu.
     */

  }, {
    key: "_updateMenuState",
    value: function _updateMenuState(force) {
      var menu = this.element.querySelector(this.options.selectorMenu);
      var trigger = this.element.querySelector(this.options.selectorTrigger);

      if (menu) {
        menu.classList.toggle(this.options.classHidden, typeof force === 'undefined' ? force : !force);

        if (menu.classList.contains(this.options.classHidden)) {
          trigger.classList.remove(this.options.classOpen);
        } else {
          trigger.classList.add(this.options.classOpen);
        }
      }
    }
    /**
     * Updates the text indicating the currently selected tab item.
     * @param {HTMLElement} target The newly selected tab item.
     */

  }, {
    key: "_updateTriggerText",
    value: function _updateTriggerText(target) {
      var triggerText = this.element.querySelector(this.options.selectorTriggerText);

      if (triggerText) {
        triggerText.textContent = target.textContent;
      }
    }
    /**
     * The map associating DOM element and tab container instance.
     * @member Tab.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode ContentSwitcher.create .create()}, or {@linkcode Tab.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode Tab.init .init()} works.
     * @member Tab.options
     * @type {object}
     * @property {string} selectorInit The CSS selector to find tab containers.
     * @property {string} [selectorMenu] The CSS selector to find the drop down menu used in narrow mode.
     * @property {string} [selectorTrigger] The CSS selector to find the button to open the drop down menu used in narrow mode.
     * @property {string} [selectorTriggerText]
     *   The CSS selector to find the element used in narrow mode showing the selected tab item.
     * @property {string} [selectorButton] The CSS selector to find tab containers.
     * @property {string} [selectorButtonSelected] The CSS selector to find the selected tab.
     * @property {string} [selectorLink] The CSS selector to find the links in tabs.
     * @property {string} [classActive] The CSS class for tab's selected state.
     * @property {string} [classHidden] The CSS class for the drop down menu's hidden state used in narrow mode.
     * @property {string} [eventBeforeSelected]
     *   The name of the custom event fired before a tab is selected.
     *   Cancellation of this event stops selection of tab.
     * @property {string} [eventAfterSelected] The name of the custom event fired after a tab is selected.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return Object.assign(Object.create(content_switcher.options), {
        selectorInit: '[data-tabs]',
        selectorMenu: ".".concat(prefix, "--tabs__nav"),
        selectorTrigger: ".".concat(prefix, "--tabs-trigger"),
        selectorTriggerText: ".".concat(prefix, "--tabs-trigger-text"),
        selectorButton: ".".concat(prefix, "--tabs__nav-item"),
        selectorButtonEnabled: ".".concat(prefix, "--tabs__nav-item:not(.").concat(prefix, "--tabs__nav-item--disabled)"),
        selectorButtonSelected: ".".concat(prefix, "--tabs__nav-item--selected"),
        selectorLink: ".".concat(prefix, "--tabs__nav-link"),
        classActive: "".concat(prefix, "--tabs__nav-item--selected"),
        classHidden: "".concat(prefix, "--tabs__nav--hidden"),
        classOpen: "".concat(prefix, "--tabs-trigger--open"),
        classButtonDisabled: "".concat(prefix, "--tabs__nav-item--disabled"),
        eventBeforeSelected: 'tab-beingselected',
        eventAfterSelected: 'tab-selected'
      });
    }
    /**
     * Enum for navigating backward/forward.
     * @readonly
     * @member Tab.NAVIGATE
     * @type {object}
     * @property {number} BACKWARD Navigating backward.
     * @property {number} FORWARD Navigating forward.
     */

  }]);

  Tab.components = new WeakMap();
  Tab.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return Tab;
}(content_switcher);

/* harmony default export */ var tabs = (tabs_Tab);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/get-launching-details.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
function getLaunchingDetails(evt) {
  if (!evt || typeof evt === 'function') {
    return {
      launchingElement: null,
      launchingEvent: null
    };
  }

  var launchingElement = evt.delegateTarget || evt.currentTarget || evt;
  var launchingEvent = evt.currentTarget && evt;

  if (launchingElement && !launchingElement.nodeType) {
    throw new TypeError('DOM Node should be given for launching element.');
  }

  if (launchingEvent && !launchingEvent.type) {
    throw new TypeError('DOM event should be given for launching event.');
  }

  return {
    launchingElement: launchingElement,
    launchingEvent: launchingEvent
  };
}
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/evented-show-hide-state.js
function evented_show_hide_state_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    evented_show_hide_state_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    evented_show_hide_state_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return evented_show_hide_state_typeof(obj);
}

function evented_show_hide_state_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function evented_show_hide_state_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function evented_show_hide_state_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) evented_show_hide_state_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) evented_show_hide_state_defineProperties(Constructor, staticProps);
  return Constructor;
}

function evented_show_hide_state_possibleConstructorReturn(self, call) {
  if (call && (evented_show_hide_state_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return evented_show_hide_state_assertThisInitialized(self);
}

function evented_show_hide_state_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function evented_show_hide_state_getPrototypeOf(o) {
  evented_show_hide_state_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return evented_show_hide_state_getPrototypeOf(o);
}

function evented_show_hide_state_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) evented_show_hide_state_setPrototypeOf(subClass, superClass);
}

function evented_show_hide_state_setPrototypeOf(o, p) {
  evented_show_hide_state_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return evented_show_hide_state_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */





function eventedShowHideState(ToMix) {
  /**
   * Mix-in class to launch a floating menu.
   * @class EventedShowHideState
   */
  var EventedShowHideState =
  /*#__PURE__*/
  function (_ToMix) {
    evented_show_hide_state_inherits(EventedShowHideState, _ToMix);

    function EventedShowHideState() {
      evented_show_hide_state_classCallCheck(this, EventedShowHideState);

      return evented_show_hide_state_possibleConstructorReturn(this, evented_show_hide_state_getPrototypeOf(EventedShowHideState).apply(this, arguments));
    }

    evented_show_hide_state_createClass(EventedShowHideState, [{
      key: "show",

      /**
       */

      /**
       * Switch to 'shown' state.
       * @param [evtOrElem] The launching event or element.
       * @param {EventedState~changeStateCallback} [callback] The callback.
       */
      value: function show(evtOrElem, callback) {
        if (!evtOrElem || typeof evtOrElem === 'function') {
          callback = evtOrElem; // eslint-disable-line no-param-reassign
        }

        this.changeState('shown', getLaunchingDetails(evtOrElem), callback);
      }
      /**
       * Switch to 'hidden' state.
       * @param [evtOrElem] The launching event or element.
       * @param {EventedState~changeStateCallback} [callback] The callback.
       */

    }, {
      key: "hide",
      value: function hide(evtOrElem, callback) {
        if (!evtOrElem || typeof evtOrElem === 'function') {
          callback = evtOrElem; // eslint-disable-line no-param-reassign
        }

        this.changeState('hidden', getLaunchingDetails(evtOrElem), callback);
      }
    }]);

    return EventedShowHideState;
  }(ToMix);

  return EventedShowHideState;
}

var evented_show_hide_state_exports = [evented_state, eventedShowHideState];
/* harmony default export */ var evented_show_hide_state = (evented_show_hide_state_exports);
// EXTERNAL MODULE: ./node_modules/warning/browser.js
var browser = __webpack_require__("e834");

// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/track-blur.js
function track_blur_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    track_blur_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    track_blur_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return track_blur_typeof(obj);
}

function track_blur_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function track_blur_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function track_blur_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) track_blur_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) track_blur_defineProperties(Constructor, staticProps);
  return Constructor;
}

function track_blur_possibleConstructorReturn(self, call) {
  if (call && (track_blur_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return track_blur_assertThisInitialized(self);
}

function track_blur_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function track_blur_getPrototypeOf(o) {
  track_blur_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return track_blur_getPrototypeOf(o);
}

function track_blur_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) track_blur_setPrototypeOf(subClass, superClass);
}

function track_blur_setPrototypeOf(o, p) {
  track_blur_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return track_blur_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */





function trackBlur(ToMix) {
  var TrackBlur =
  /*#__PURE__*/
  function (_ToMix) {
    track_blur_inherits(TrackBlur, _ToMix);
    /**
     * Mix-in class to add an handler for losing focus.
     * @extends Handles
     * @param {HTMLElement} element The element working as this component.
     * @param {object} [options] The component options.
     */


    function TrackBlur(element, options) {
      var _this;

      track_blur_classCallCheck(this, TrackBlur);

      _this = track_blur_possibleConstructorReturn(this, track_blur_getPrototypeOf(TrackBlur).call(this, element, options));
      var hasFocusin = 'onfocusin' in window;
      var focusinEventName = hasFocusin ? 'focusin' : 'focus';
      var focusoutEventName = hasFocusin ? 'focusout' : 'blur';

      _this.manage(on(_this.element.ownerDocument, focusinEventName, function (event) {
        if (!(_this.options.contentNode || _this.element).contains(event.target)) {
          _this.handleBlur(event);
        }
      }, !hasFocusin));

      _this.manage(on(_this.element.ownerDocument, focusoutEventName, function (event) {
        if (!event.relatedTarget) {
          _this.handleBlur(event);
        }
      }, !hasFocusin));

      return _this;
    }
    /**
     * The method called when this component loses focus.
     * @abstract
     */


    track_blur_createClass(TrackBlur, [{
      key: "handleBlur",
      value: function handleBlur() {
        throw new Error('Components inheriting TrackBlur mix-in must implement handleBlur() method.');
      }
    }]);

    return TrackBlur;
  }(ToMix);

  return TrackBlur;
}

var track_blur_exports = [mixins_handles, trackBlur];
/* harmony default export */ var track_blur = (track_blur_exports);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/resize.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
// mdn resize function
var optimizedResize =
/* #__PURE__ */
function optimizedResize() {
  var callbacks = [];
  var running = false; // run the actual callbacks

  function runCallbacks() {
    callbacks.forEach(function (callback) {
      callback();
    });
    running = false;
  } // fired on resize event


  function resize() {
    if (!running) {
      running = true;
      window.requestAnimationFrame(runCallbacks);
    }
  } // adds callback to loop


  function addCallback(callback) {
    if (callback) {
      var index = callbacks.indexOf(callback);

      if (index < 0) {
        callbacks.push(callback);
      }
    }
  }

  return {
    // public method to add additional callback
    add: function add(callback) {
      if (!callbacks.length) {
        window.addEventListener('resize', resize);
      }

      addCallback(callback);
      return {
        release: function release() {
          var index = callbacks.indexOf(callback);

          if (index >= 0) {
            callbacks.splice(index, 1);
          }
        }
      };
    }
  };
}();

/* harmony default export */ var resize = (optimizedResize);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/floating-menu/floating-menu.js
function floating_menu_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    floating_menu_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    floating_menu_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return floating_menu_typeof(obj);
}

function floating_menu_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function floating_menu_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function floating_menu_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) floating_menu_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) floating_menu_defineProperties(Constructor, staticProps);
  return Constructor;
}

function floating_menu_possibleConstructorReturn(self, call) {
  if (call && (floating_menu_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return floating_menu_assertThisInitialized(self);
}

function floating_menu_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function floating_menu_get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    floating_menu_get = Reflect.get;
  } else {
    floating_menu_get = function _get(target, property, receiver) {
      var base = floating_menu_superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return floating_menu_get(target, property, receiver || target);
}

function floating_menu_superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = floating_menu_getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function floating_menu_getPrototypeOf(o) {
  floating_menu_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return floating_menu_getPrototypeOf(o);
}

function floating_menu_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) floating_menu_setPrototypeOf(subClass, superClass);
}

function floating_menu_setPrototypeOf(o, p) {
  floating_menu_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return floating_menu_setPrototypeOf(o, p);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */












/**
 * The structure for the position of floating menu.
 * @typedef {object} FloatingMenu~position
 * @property {number} left The left position.
 * @property {number} top The top position.
 * @property {number} right The right position.
 * @property {number} bottom The bottom position.
 */

/**
 * The structure for the size of floating menu.
 * @typedef {object} FloatingMenu~size
 * @property {number} width The width.
 * @property {number} height The height.
 */

/**
 * The structure for the position offset of floating menu.
 * @typedef {object} FloatingMenu~offset
 * @property {number} top The top position.
 * @property {number} left The left position.
 */

var DIRECTION_LEFT = 'left';
var DIRECTION_TOP = 'top';
var DIRECTION_RIGHT = 'right';
var DIRECTION_BOTTOM = 'bottom';
/**
 * @param {object} params The parameters.
 * @param {FloatingMenu~size} params.menuSize The size of the menu.
 * @param {FloatingMenu~position} params.refPosition The position of the triggering element.
 * @param {FloatingMenu~offset} [params.offset={ left: 0, top: 0 }] The position offset of the menu.
 * @param {string} [params.direction=bottom] The menu direction.
 * @param {number} [params.scrollX=0] The scroll position of the viewport.
 * @param {number} [params.scrollY=0] The scroll position of the viewport.
 * @returns {FloatingMenu~offset} The position of the menu, relative to the top-left corner of the viewport.
 * @private
 */

var getFloatingPosition = function getFloatingPosition(_ref) {
  var _DIRECTION_LEFT$DIREC;

  var menuSize = _ref.menuSize,
      refPosition = _ref.refPosition,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? {} : _ref$offset,
      _ref$direction = _ref.direction,
      direction = _ref$direction === void 0 ? DIRECTION_BOTTOM : _ref$direction,
      _ref$scrollX = _ref.scrollX,
      scrollX = _ref$scrollX === void 0 ? 0 : _ref$scrollX,
      _ref$scrollY = _ref.scrollY,
      scrollY = _ref$scrollY === void 0 ? 0 : _ref$scrollY;
  var _refPosition$left = refPosition.left,
      refLeft = _refPosition$left === void 0 ? 0 : _refPosition$left,
      _refPosition$top = refPosition.top,
      refTop = _refPosition$top === void 0 ? 0 : _refPosition$top,
      _refPosition$right = refPosition.right,
      refRight = _refPosition$right === void 0 ? 0 : _refPosition$right,
      _refPosition$bottom = refPosition.bottom,
      refBottom = _refPosition$bottom === void 0 ? 0 : _refPosition$bottom;
  var width = menuSize.width,
      height = menuSize.height;
  var _offset$top = offset.top,
      top = _offset$top === void 0 ? 0 : _offset$top,
      _offset$left = offset.left,
      left = _offset$left === void 0 ? 0 : _offset$left;
  var refCenterHorizontal = (refLeft + refRight) / 2;
  var refCenterVertical = (refTop + refBottom) / 2;
  return (_DIRECTION_LEFT$DIREC = {}, _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, {
    left: refLeft - width + scrollX - left,
    top: refCenterVertical - height / 2 + scrollY + top
  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, {
    left: refCenterHorizontal - width / 2 + scrollX + left,
    top: refTop - height + scrollY - top
  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, {
    left: refRight + scrollX + left,
    top: refCenterVertical - height / 2 + scrollY + top
  }), _defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, {
    left: refCenterHorizontal - width / 2 + scrollX + left,
    top: refBottom + scrollY + top
  }), _DIRECTION_LEFT$DIREC)[direction];
};

var floating_menu_FloatingMenu =
/*#__PURE__*/
function (_mixin) {
  floating_menu_inherits(FloatingMenu, _mixin);
  /**
   * Floating menu.
   * @extends CreateComponent
   * @extends EventedShowHideState
   * @param {HTMLElement} element The element working as a modal dialog.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorContainer] The CSS selector to find the container to put this menu in.
   * @param {string} [options.attribDirection] The attribute name to specify menu placement direction (top/right/bottom/left).
   * @param {string} [options.classShown] The CSS class for shown state, for the menu.
   * @param {string} [options.classRefShown] The CSS class for shown state, for the trigger button.
   * @param {string} [options.eventBeforeShown]
   *   The name of the custom event fired before this menu is shown.
   *   Cancellation of this event stops hiding the menu.
   * @param {string} [options.eventAfterShown]
   *   The name of the custom event telling that menu is sure shown
   *   without being canceled by the event handler named by `eventBeforeShown` option (`floating-menu-beingshown`).
   * @param {string} [options.eventBeforeHidden]
   *   The name of the custom event fired before this menu is hidden.
   *   Cancellation of this event stops hiding the menu.
   * @param {string} [options.eventAfterHidden]
   *   The name of the custom event telling that menu is sure hidden
   *   without being canceled by the event handler named by `eventBeforeHidden` option (`floating-menu-beinghidden`).
   * @param {Element} [options.refNode] The launching element of the menu. Used for calculating the geometry of the menu.
   * @param {object} [options.offset] The offset to adjust the geometry of the menu. Should have `top`/`left` properties.
   */


  function FloatingMenu(element, options) {
    var _this;

    floating_menu_classCallCheck(this, FloatingMenu);

    _this = floating_menu_possibleConstructorReturn(this, floating_menu_getPrototypeOf(FloatingMenu).call(this, element, options));

    var attribDirectionValue = _this.element.getAttribute(_this.options.attribDirection);

    if (!_this.options.direction) {
      _this.options.direction = attribDirectionValue || 'bottom';
    }

    if (!attribDirectionValue) {
      // Update attribute for styling
      _this.element.setAttribute(_this.options.attribDirection, _this.options.direction);
    }

    _this.manage(on(_this.element.ownerDocument, 'keydown', function (event) {
      _this._handleKeydown(event);
    }));

    return _this;
  }
  /**
   * Handles key press on document.
   * @param {Event} event The triggering event.
   * @private
   */


  floating_menu_createClass(FloatingMenu, [{
    key: "_handleKeydown",
    value: function _handleKeydown(event) {
      var key = event.which;
      var _this$options = this.options,
          triggerNode = _this$options.triggerNode,
          refNode = _this$options.refNode;
      var isOfMenu = this.element.contains(event.target);

      switch (key) {
        // Esc
        case 27:
          this.changeState('hidden', getLaunchingDetails(event), function () {
            if (isOfMenu) {
              (triggerNode || refNode).focus();
            }
          });
          break;

        default:
          break;
      }
    }
    /**
     * Focuses back on the trigger button if this component loses focus.
     */

  }, {
    key: "handleBlur",
    value: function handleBlur(event) {
      if (this.element.classList.contains(this.options.classShown)) {
        this.changeState('hidden', getLaunchingDetails(event));
        var _this$options2 = this.options,
            refNode = _this$options2.refNode,
            triggerNode = _this$options2.triggerNode;

        if ((event.relatedTarget === null || this.element.contains(event.relatedTarget)) && refNode && event.target !== refNode) {
          HTMLElement.prototype.focus.call(triggerNode || refNode); // SVGElement in IE11 does not have `.focus()` method
        }
      }
    }
    /**
     * @private
     * @returns {Element} The element that this menu should be placed to.
     */

  }, {
    key: "_getContainer",
    value: function _getContainer() {
      return this.element.closest(this.options.selectorContainer) || this.element.ownerDocument.body;
    }
    /**
     * @private
     * @returns {object} The menu position, with `top` and `left` properties.
     */

  }, {
    key: "_getPos",
    value: function _getPos() {
      var element = this.element;
      var _this$options3 = this.options,
          refNode = _this$options3.refNode,
          offset = _this$options3.offset,
          direction = _this$options3.direction;

      if (!refNode) {
        throw new Error('Cannot find the reference node for positioning floating menu.');
      }

      return getFloatingPosition({
        menuSize: element.getBoundingClientRect(),
        refPosition: refNode.getBoundingClientRect(),
        offset: typeof offset !== 'function' ? offset : offset(element, direction, refNode),
        direction: direction,
        scrollX: refNode.ownerDocument.defaultView.pageXOffset,
        scrollY: refNode.ownerDocument.defaultView.pageYOffset
      });
    }
    /**
     * Sees if the computed style is what this floating menu expects.
     * @private
     */

  }, {
    key: "_testStyles",
    value: function _testStyles() {
      if (!this.options.debugStyle) {
        return;
      }

      var element = this.element;
      var computedStyle = element.ownerDocument.defaultView.getComputedStyle(element);
      var styles = {
        position: 'absolute',
        right: 'auto',
        margin: 0
      };
      Object.keys(styles).forEach(function (key) {
        var expected = typeof styles[key] === 'number' ? parseFloat(styles[key]) : styles[key];
        var actual = computedStyle.getPropertyValue(key);

        if (expected !== actual) {
          // eslint-disable-next-line no-console
          console.warn("Floating menu component expects ".concat(key, ": ").concat(styles[key], " style."));
        }
      });
    }
    /**
     * Places the menu.
     * @private
     */

  }, {
    key: "_place",
    value: function _place() {
      var element = this.element;

      var _this$_getPos = this._getPos(),
          left = _this$_getPos.left,
          top = _this$_getPos.top;

      element.style.left = "".concat(left, "px");
      element.style.top = "".concat(top, "px");

      this._testStyles();
    }
    /**
     * @param {string} state The new state.
     * @returns {boolean} `true` of the current state is different from the given new state.
     */

  }, {
    key: "shouldStateBeChanged",
    value: function shouldStateBeChanged(state) {
      return (state === 'shown' || state === 'hidden') && state !== (this.element.classList.contains(this.options.classShown) ? 'shown' : 'hidden');
    }
    /**
     * Changes the shown/hidden state.
     * @private
     * @param {string} state The new state.
     * @param {object} detail The detail of the event trigging this action.
     * @param {Function} callback Callback called when change in state completes.
     */

  }, {
    key: "_changeState",
    value: function _changeState(state, detail, callback) {
      var _this2 = this;

      var shown = state === 'shown';
      var _this$options4 = this.options,
          refNode = _this$options4.refNode,
          classShown = _this$options4.classShown,
          classRefShown = _this$options4.classRefShown,
          triggerNode = _this$options4.triggerNode;

      if (!refNode) {
        throw new TypeError('Cannot find the reference node for changing the style.');
      }

      if (state === 'shown') {
        if (!this.hResize) {
          this.hResize = resize.add(function () {
            _this2._place();
          });
        }

        this._getContainer().appendChild(this.element);
      }

      this.element.setAttribute('aria-hidden', (!shown).toString());
      (triggerNode || refNode).setAttribute('aria-expanded', shown.toString());
      this.element.classList.toggle(classShown, shown);

      if (classRefShown) {
        refNode.classList.toggle(classRefShown, shown);
      }

      if (state === 'shown') {
        this._place(); // IE11 puts focus on elements with `.focus()`, even ones without `tabindex` attribute


        if (!this.element.hasAttribute(this.options.attribAvoidFocusOnOpen)) {
          var primaryFocusNode = this.element.querySelector(this.options.selectorPrimaryFocus);
          var contentNode = this.options.contentNode || this.element;
          var tabbableNode = contentNode.querySelector(js_settings.selectorTabbable); // The programmatically focusable element may be (and typically will be) the content node itself;

          var focusableNode = contentNode.matches(js_settings.selectorFocusable) ? contentNode : contentNode.querySelector(js_settings.selectorFocusable);

          if (primaryFocusNode) {
            // User defined focusable node
            primaryFocusNode.focus();
          } else if (tabbableNode) {
            // First sequentially focusable node
            tabbableNode.focus();
          } else if (focusableNode) {
            // First programmatic focusable node
            focusableNode.focus();
          } else {
            this.element.focus();

            if (false) {}
          }
        }
      }

      if (state === 'hidden' && this.hResize) {
        this.hResize.release();
        this.hResize = null;
      }

      callback();
    }
  }, {
    key: "release",
    value: function release() {
      if (this.hResize) {
        this.hResize.release();
        this.hResize = null;
      }

      floating_menu_get(floating_menu_getPrototypeOf(FloatingMenu.prototype), "release", this).call(this);
    }
  }]);

  FloatingMenu.options = {
    selectorContainer: '[data-floating-menu-container]',
    selectorPrimaryFocus: '[data-floating-menu-primary-focus]',
    attribDirection: 'data-floating-menu-direction',
    attribAvoidFocusOnOpen: 'data-avoid-focus-on-open',
    classShown: '',
    // Should be provided from options arg in constructor
    classRefShown: '',
    // Should be provided from options arg in constructor
    eventBeforeShown: 'floating-menu-beingshown',
    eventAfterShown: 'floating-menu-shown',
    eventBeforeHidden: 'floating-menu-beinghidden',
    eventAfterHidden: 'floating-menu-hidden',
    refNode: null,
    // Should be provided from options arg in constructor
    offset: {
      left: 0,
      top: 0
    }
  };
  FloatingMenu.components = new WeakMap();
  return FloatingMenu;
}(mixin(create_component, evented_show_hide_state, track_blur, mixins_handles));

/* harmony default export */ var floating_menu = (floating_menu_FloatingMenu);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/overflow-menu/overflow-menu.js
function overflow_menu_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    overflow_menu_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    overflow_menu_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return overflow_menu_typeof(obj);
}

function overflow_menu_toConsumableArray(arr) {
  return overflow_menu_arrayWithoutHoles(arr) || overflow_menu_iterableToArray(arr) || overflow_menu_nonIterableSpread();
}

function overflow_menu_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function overflow_menu_iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function overflow_menu_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function overflow_menu_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function overflow_menu_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function overflow_menu_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) overflow_menu_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) overflow_menu_defineProperties(Constructor, staticProps);
  return Constructor;
}

function overflow_menu_possibleConstructorReturn(self, call) {
  if (call && (overflow_menu_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return overflow_menu_assertThisInitialized(self);
}

function overflow_menu_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function overflow_menu_getPrototypeOf(o) {
  overflow_menu_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return overflow_menu_getPrototypeOf(o);
}

function overflow_menu_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) overflow_menu_setPrototypeOf(subClass, superClass);
}

function overflow_menu_setPrototypeOf(o, p) {
  overflow_menu_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return overflow_menu_setPrototypeOf(o, p);
}

function overflow_menu_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */












/**
 * The CSS property names of the arrow keyed by the floating menu direction.
 * @type {object<string, string>}
 */

var triggerButtonPositionProps =
/* #__PURE__ */
function () {
  var _ref;

  return _ref = {}, overflow_menu_defineProperty(_ref, DIRECTION_TOP, 'bottom'), overflow_menu_defineProperty(_ref, DIRECTION_BOTTOM, 'top'), overflow_menu_defineProperty(_ref, DIRECTION_LEFT, 'left'), overflow_menu_defineProperty(_ref, DIRECTION_RIGHT, 'right'), _ref;
}();
/**
 * Determines how the position of arrow should affect the floating menu position.
 * @type {object<string, number>}
 */


var triggerButtonPositionFactors =
/* #__PURE__ */
function () {
  var _ref2;

  return _ref2 = {}, overflow_menu_defineProperty(_ref2, DIRECTION_TOP, -2), overflow_menu_defineProperty(_ref2, DIRECTION_BOTTOM, -1), overflow_menu_defineProperty(_ref2, DIRECTION_LEFT, -2), overflow_menu_defineProperty(_ref2, DIRECTION_RIGHT, -1), _ref2;
}();
/**
 * @param {Element} menuBody The menu body with the menu arrow.
 * @param {string} direction The floating menu direction.
 * @param {Element} trigger The trigger button.
 * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.
 * @private
 */


var overflow_menu_getMenuOffset = function getMenuOffset(menuBody, direction, trigger) {
  var triggerButtonPositionProp = triggerButtonPositionProps[direction];
  var triggerButtonPositionFactor = triggerButtonPositionFactors[direction];

  if (!triggerButtonPositionProp || !triggerButtonPositionFactor) {
    console.warn('Wrong floating menu direction:', direction); // eslint-disable-line no-console
  }

  var menuWidth = menuBody.offsetWidth;
  var menuHeight = menuBody.offsetHeight; // eslint-disable-next-line no-use-before-define

  var menu = overflow_menu_OverflowMenu.components.get(trigger);

  if (!menu) {
    throw new TypeError('Overflow menu instance cannot be found.');
  }

  var flip = menuBody.classList.contains(menu.options.classMenuFlip);

  if (triggerButtonPositionProp === 'top' || triggerButtonPositionProp === 'bottom') {
    var triggerWidth = trigger.offsetWidth;
    return {
      left: (!flip ? 1 : -1) * (menuWidth / 2 - triggerWidth / 2),
      top: 0
    };
  }

  if (triggerButtonPositionProp === 'left' || triggerButtonPositionProp === 'right') {
    var triggerHeight = trigger.offsetHeight;
    return {
      left: 0,
      top: (!flip ? 1 : -1) * (menuHeight / 2 - triggerHeight / 2)
    };
  }

  return undefined;
};

var overflow_menu_OverflowMenu =
/*#__PURE__*/
function (_mixin) {
  overflow_menu_inherits(OverflowMenu, _mixin);
  /**
   * Overflow menu.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a modal dialog.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorOptionMenu] The CSS selector to find the menu.
   * @param {string} [options.selectorTrigger] The CSS selector to find the trigger button.
   * @param {string} [options.classShown] The CSS class for the shown state, for the trigger UI.
   * @param {string} [options.classMenuShown] The CSS class for the shown state, for the menu.
   * @param {string} [options.classMenuFlip] The CSS class for the flipped state of the menu.
   * @param {object} [options.objMenuOffset] The offset locating the menu for the non-flipped state.
   * @param {object} [options.objMenuOffsetFlip] The offset locating the menu for the flipped state.
   */


  function OverflowMenu(element, options) {
    var _this;

    overflow_menu_classCallCheck(this, OverflowMenu);

    _this = overflow_menu_possibleConstructorReturn(this, overflow_menu_getPrototypeOf(OverflowMenu).call(this, element, options));

    _this.getCurrentNavigation = function () {
      var focused = _this.element.ownerDocument.activeElement;
      return focused.nodeType === Node.ELEMENT_NODE && focused.matches(_this.options.selectorItem) ? focused : null;
    };

    _this.navigate = function (direction) {
      var items = overflow_menu_toConsumableArray(_this.element.ownerDocument.querySelectorAll(_this.options.selectorItem));

      var start = _this.getCurrentNavigation() || _this.element.querySelector(_this.options.selectorItemSelected);

      var getNextItem = function getNextItem(old) {
        var handleUnderflow = function handleUnderflow(index, length) {
          return index + (index >= 0 ? 0 : length);
        };

        var handleOverflow = function handleOverflow(index, length) {
          return index - (index < length ? 0 : length);
        }; // `items.indexOf(old)` may be -1 (Scenario of no previous focus)


        var index = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index, items.length), items.length)];
      };

      for (var current = getNextItem(start); current && current !== start; current = getNextItem(current)) {
        if (!current.matches(_this.options.selectorItemHidden) && !current.parentNode.matches(_this.options.selectorItemHidden) && !current.matches(_this.options.selectorItemSelected)) {
          current.focus();
          break;
        }
      }
    };

    if (_this.element.getAttribute('role') !== 'button') {
      // Would prefer to use the aria-controls with a specific ID but we
      // don't have the menuOptions list at this point to pull the ID from
      _this.triggerNode = _this.element.querySelector(_this.options.selectorTrigger);
    }

    _this.manage(on(_this.element.ownerDocument, 'click', function (event) {
      _this._handleDocumentClick(event);

      _this.wasOpenBeforeClick = undefined;
    }));

    _this.manage(on(_this.element.ownerDocument, 'keydown', function (event) {
      _this._handleKeyPress(event);
    }));

    _this.manage(on(_this.element, 'mousedown', function () {
      _this.wasOpenBeforeClick = element.classList.contains(_this.options.classShown);
    }));

    return _this;
  }
  /**
   * Changes the shown/hidden state.
   * @param {string} state The new state.
   * @param {object} detail The detail of the event trigging this action.
   * @param {Function} callback Callback called when change in state completes.
   */


  overflow_menu_createClass(OverflowMenu, [{
    key: "changeState",
    value: function changeState(state, detail, callback) {
      if (!this.optionMenu) {
        var optionMenu = this.element.querySelector(this.options.selectorOptionMenu);

        if (!optionMenu) {
          throw new Error('Cannot find the target menu.');
        } // Lazily create a component instance for menu


        this.optionMenu = floating_menu.create(optionMenu, {
          refNode: this.element,
          classShown: this.options.classMenuShown,
          classRefShown: this.options.classShown,
          offset: this.options.objMenuOffset,
          triggerNode: this.triggerNode,
          contentNode: this.element.querySelector(this.options.selectorContent)
        });
        this.children.push(this.optionMenu);
      }

      if (this.optionMenu.element.classList.contains(this.options.classMenuFlip)) {
        this.optionMenu.options.offset = this.options.objMenuOffsetFlip;
      } // Delegates the action of changing state to the menu.
      // (And thus the before/after shown/hidden events are fired from the menu)


      this.optionMenu.changeState(state, Object.assign(detail, {
        delegatorNode: this.element
      }), callback);
    }
    /**
     * Handles click on document.
     * @param {Event} event The triggering event.
     * @private
     */

  }, {
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(event) {
      var _this2 = this;

      var element = this.element,
          optionMenu = this.optionMenu,
          wasOpenBeforeClick = this.wasOpenBeforeClick,
          triggerNode = this.triggerNode;
      var isOfSelf = element.contains(event.target);
      var isOfMenu = optionMenu && optionMenu.element.contains(event.target);
      var shouldBeOpen = isOfSelf && !wasOpenBeforeClick;
      var state = shouldBeOpen ? 'shown' : 'hidden';

      if (isOfSelf) {
        if (element.tagName === 'A') {
          event.preventDefault();
        }

        event.delegateTarget = element; // eslint-disable-line no-param-reassign
      }

      if (!isOfMenu || eventMatches(event, this.options.selectorItem)) {
        this.changeState(state, getLaunchingDetails(event), function () {
          if (state === 'hidden' && isOfMenu) {
            // @todo Can clean up to use `this.triggerNode` once non-compliant code is deprecated
            _this2[triggerNode ? 'triggerNode' : 'element'].focus();
          }
        });
      }
    }
    /**
     * Provides the element to move focus from
     * @returns {Element} Currently highlighted element.
     */

  }, {
    key: "_handleKeyPress",

    /**
     * Handles key press on document.
     * @param {Event} event The triggering event.
     * @private
     */
    value: function _handleKeyPress(event) {
      var _this3 = this;

      var key = event.which;
      var element = this.element,
          optionMenu = this.optionMenu,
          options = this.options,
          triggerNode = this.triggerNode;
      var isOfMenu = optionMenu && optionMenu.element.contains(event.target);
      var isExpanded = this.element.classList.contains(this.options.classShown); // @todo Can clean up to use `this.triggerNode` once non-compliant code is deprecated

      var triggerElement = triggerNode ? 'triggerNode' : 'element';

      switch (key) {
        // Enter || Space bar
        case 13:
        case 32:
          {
            if (!isExpanded && this.element.ownerDocument.activeElement !== this.element) {
              return;
            }

            var isOfSelf = element.contains(event.target);
            var shouldBeOpen = isOfSelf && !element.classList.contains(options.classShown);
            var state = shouldBeOpen ? 'shown' : 'hidden';

            if (isOfSelf) {
              event.delegateTarget = element; // eslint-disable-line no-param-reassign

              event.preventDefault(); // prevent scrolling

              this.changeState(state, getLaunchingDetails(event), function () {
                if (state === 'hidden' && isOfMenu) {
                  _this3[triggerElement].focus();
                }
              });
            }

            break;
          }

        case 38: // up arrow

        case 40:
          // down arrow
          {
            if (!isExpanded) {
              return;
            }

            event.preventDefault(); // prevent scrolling

            var direction = {
              38: -1,
              40: 1
            }[event.which];
            this.navigate(direction);
          }
          break;

        default:
          break;
      }
    }
  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-overflow-menu]',
        selectorOptionMenu: ".".concat(prefix, "--overflow-menu-options"),
        selectorTrigger: 'button[aria-haspopup]',
        selectorContent: ".".concat(prefix, "--overflow-menu-options__content"),
        selectorItem: "\n        .".concat(prefix, "--overflow-menu-options--open\n        .").concat(prefix, "--overflow-menu-options__option:not(.").concat(prefix, "--overflow-menu-options__option--disabled) >\n        .").concat(prefix, "--overflow-menu-options__btn\n      "),
        classShown: "".concat(prefix, "--overflow-menu--open"),
        classMenuShown: "".concat(prefix, "--overflow-menu-options--open"),
        classMenuFlip: "".concat(prefix, "--overflow-menu--flip"),
        objMenuOffset: overflow_menu_getMenuOffset,
        objMenuOffsetFlip: overflow_menu_getMenuOffset
      };
    }
  }]);

  OverflowMenu.components = new WeakMap();
  return OverflowMenu;
}(mixin(create_component, init_component_by_search, evented_show_hide_state, mixins_handles));

/* harmony default export */ var overflow_menu = (overflow_menu_OverflowMenu);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/init-component-by-launcher.js
function init_component_by_launcher_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    init_component_by_launcher_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    init_component_by_launcher_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return init_component_by_launcher_typeof(obj);
}

function init_component_by_launcher_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function init_component_by_launcher_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function init_component_by_launcher_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) init_component_by_launcher_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) init_component_by_launcher_defineProperties(Constructor, staticProps);
  return Constructor;
}

function init_component_by_launcher_possibleConstructorReturn(self, call) {
  if (call && (init_component_by_launcher_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return init_component_by_launcher_assertThisInitialized(self);
}

function init_component_by_launcher_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function init_component_by_launcher_getPrototypeOf(o) {
  init_component_by_launcher_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return init_component_by_launcher_getPrototypeOf(o);
}

function init_component_by_launcher_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) init_component_by_launcher_setPrototypeOf(subClass, superClass);
}

function init_component_by_launcher_setPrototypeOf(o, p) {
  init_component_by_launcher_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return init_component_by_launcher_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */




/* harmony default export */ var init_component_by_launcher = (function (ToMix) {
  /**
   * Mix-in class to instantiate components events on launcher button.
   * @class InitComponentByLauncher
   */
  var InitComponentByLauncher =
  /*#__PURE__*/
  function (_ToMix) {
    init_component_by_launcher_inherits(InitComponentByLauncher, _ToMix);

    function InitComponentByLauncher() {
      init_component_by_launcher_classCallCheck(this, InitComponentByLauncher);

      return init_component_by_launcher_possibleConstructorReturn(this, init_component_by_launcher_getPrototypeOf(InitComponentByLauncher).apply(this, arguments));
    }

    init_component_by_launcher_createClass(InitComponentByLauncher, null, [{
      key: "init",

      /**
       * `true` suggests that this component is lazily initialized upon an action/event, etc.
       * @type {boolean}
       */

      /**
       * Instantiates this component in the given element.
       * If the given element indicates that it's an component of this class, instantiates it.
       * Otherwise, instantiates this component by clicking on launcher buttons
       * (buttons with attribute that `options.attribInitTarget` points to) of this component in the given node.
       * @param {Node} target The DOM node to instantiate this component in. Should be a document or an element.
       * @param {object} [options] The component options.
       * @param {string} [options.selectorInit] The CSS selector to find this component.
       * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target component.
       * @returns {Handle} The handle to remove the event listener to handle clicking.
       */
      value: function init() {
        var _this = this;

        var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var effectiveOptions = Object.assign(Object.create(this.options), options);

        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {
          throw new TypeError('DOM document or DOM element should be given to search for and initialize this widget.');
        }

        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {
          this.create(target, options);
        } else {
          var handles = effectiveOptions.initEventNames.map(function (name) {
            return on(target, name, function (event) {
              var launcher = eventMatches(event, "[".concat(effectiveOptions.attribInitTarget, "]"));

              if (launcher) {
                event.delegateTarget = launcher; // eslint-disable-line no-param-reassign

                var elements = launcher.ownerDocument.querySelectorAll(launcher.getAttribute(effectiveOptions.attribInitTarget));

                if (elements.length > 1) {
                  throw new Error('Target widget must be unique.');
                }

                if (elements.length === 1) {
                  if (launcher.tagName === 'A') {
                    event.preventDefault();
                  }

                  var component = _this.create(elements[0], options);

                  if (typeof component.createdByLauncher === 'function') {
                    component.createdByLauncher(event);
                  }
                }
              }
            });
          });
          return {
            release: function release() {
              for (var handle = handles.pop(); handle; handle = handles.pop()) {
                handle.release();
              }
            }
          };
        }

        return '';
      }
    }]);

    InitComponentByLauncher.forLazyInit = true;
    return InitComponentByLauncher;
  }(ToMix);

  return InitComponentByLauncher;
});
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/modal/modal.js
function modal_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    modal_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    modal_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return modal_typeof(obj);
}

function modal_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function modal_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function modal_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) modal_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) modal_defineProperties(Constructor, staticProps);
  return Constructor;
}

function modal_possibleConstructorReturn(self, call) {
  if (call && (modal_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return modal_assertThisInitialized(self);
}

function modal_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function modal_getPrototypeOf(o) {
  modal_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return modal_getPrototypeOf(o);
}

function modal_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) modal_setPrototypeOf(subClass, superClass);
}

function modal_setPrototypeOf(o, p) {
  modal_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return modal_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */












var modal_Modal =
/*#__PURE__*/
function (_mixin) {
  modal_inherits(Modal, _mixin);
  /**
   * Modal dialog.
   * @extends CreateComponent
   * @extends InitComponentByLauncher
   * @extends EventedShowHideState
   * @extends Handles
   * @param {HTMLElement} element The element working as a modal dialog.
   * @param {object} [options] The component options.
   * @param {string} [options.classVisible] The CSS class for the visible state.
   * @param {string} [options.classBody] The CSS class for `<body>` with open modal.
   * @param {string} [options.eventBeforeShown]
   *   The name of the custom event fired before this modal is shown.
   *   Cancellation of this event stops showing the modal.
   * @param {string} [options.eventAfterShown]
   *   The name of the custom event telling that modal is sure shown
   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).
   * @param {string} [options.eventBeforeHidden]
   *   The name of the custom event fired before this modal is hidden.
   *   Cancellation of this event stops hiding the modal.
   * @param {string} [options.eventAfterHidden]
   *   The name of the custom event telling that modal is sure hidden
   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).
   */


  function Modal(element, options) {
    var _this;

    modal_classCallCheck(this, Modal);

    _this = modal_possibleConstructorReturn(this, modal_getPrototypeOf(Modal).call(this, element, options));
    _this._handleFocusinListener = void 0;
    _this._handleKeydownListener = void 0;

    _this._handleFocusin = function (evt) {
      var focusWrapNode = _this.element.querySelector(_this.options.selectorModalContainer) || _this.element;

      if (_this.element.classList.contains(_this.options.classVisible) && !focusWrapNode.contains(evt.target) && _this.options.selectorsFloatingMenus.every(function (selector) {
        return !eventMatches(evt, selector);
      })) {
        _this.element.querySelector(js_settings.selectorTabbable).focus();
      }
    };

    _this._hookCloseActions();

    return _this;
  }
  /**
   * The handle for `focusin` event listener.
   * Used for "focus-wrap" feature.
   * @type {Handle}
   * @private
   */


  modal_createClass(Modal, [{
    key: "createdByLauncher",

    /**
     * A method that runs when `.init()` is called from `initComponentByLauncher`.
     * @param {Event} evt The event fired on the launcher button.
     */
    value: function createdByLauncher(evt) {
      this.show(evt);
    }
    /**
     * Determines whether or not to emit events and callback function when `.changeState()` is called from `eventedState`.
     * @param {string} state The new state.
     * @returns {boolean} `true` if the given `state` is different from current state.
     */

  }, {
    key: "shouldStateBeChanged",
    value: function shouldStateBeChanged(state) {
      if (state === 'shown') {
        return !this.element.classList.contains(this.options.classVisible);
      }

      return this.element.classList.contains(this.options.classVisible);
    }
    /**
     * Changes the shown/hidden state.
     * @private
     * @param {string} state The new state.
     * @param {object} detail The detail data to be included in the event that will be fired.
     * @param {Function} callback Callback called when change in state completes.
     */

  }, {
    key: "_changeState",
    value: function _changeState(state, detail, callback) {
      var _this2 = this;

      var handleTransitionEnd;

      var transitionEnd = function transitionEnd() {
        if (handleTransitionEnd) {
          handleTransitionEnd = _this2.unmanage(handleTransitionEnd).release();
        }

        if (state === 'shown' && _this2.element.offsetWidth > 0 && _this2.element.offsetHeight > 0) {
          _this2.previouslyFocusedNode = _this2.element.ownerDocument.activeElement;

          var focusableItem = _this2.element.querySelector(_this2.options.selectorPrimaryFocus) || _this2.element.querySelector(js_settings.selectorTabbable);

          focusableItem.focus();

          if (false) {}
        }

        callback();
      };

      if (this._handleFocusinListener) {
        this._handleFocusinListener = this.unmanage(this._handleFocusinListener).release();
      }

      if (state === 'shown') {
        var hasFocusin = 'onfocusin' in this.element.ownerDocument.defaultView;
        var focusinEventName = hasFocusin ? 'focusin' : 'focus';
        this._handleFocusinListener = this.manage(on(this.element.ownerDocument, focusinEventName, this._handleFocusin, !hasFocusin));
      }

      if (state === 'hidden') {
        this.element.classList.toggle(this.options.classVisible, false);
        this.element.ownerDocument.body.classList.toggle(this.options.classBody, false);

        if (this.options.selectorFocusOnClose || this.previouslyFocusedNode) {
          (this.element.ownerDocument.querySelector(this.options.selectorFocusOnClose) || this.previouslyFocusedNode).focus();
        }
      } else if (state === 'shown') {
        this.element.classList.toggle(this.options.classVisible, true);
        this.element.ownerDocument.body.classList.toggle(this.options.classBody, true);
      }

      handleTransitionEnd = this.manage(on(this.element, 'transitionend', transitionEnd));
    }
  }, {
    key: "_hookCloseActions",
    value: function _hookCloseActions() {
      var _this3 = this;

      this.manage(on(this.element, 'click', function (evt) {
        var closeButton = eventMatches(evt, _this3.options.selectorModalClose);

        if (closeButton) {
          evt.delegateTarget = closeButton; // eslint-disable-line no-param-reassign
        }

        if (closeButton || evt.target === _this3.element) {
          _this3.hide(evt);
        }
      }));

      if (this._handleKeydownListener) {
        this._handleKeydownListener = this.unmanage(this._handleKeydownListener).release();
      }

      this._handleKeydownListener = this.manage(on(this.element.ownerDocument.body, 'keydown', function (evt) {
        // Avoid running `evt.stopPropagation()` only when modal is shown
        if (evt.which === 27 && _this3.shouldStateBeChanged('hidden')) {
          evt.stopPropagation();

          _this3.hide(evt);
        }
      }));
    }
    /**
     * Handles `focusin` (or `focus` depending on browser support of `focusin`) event to do wrap-focus behavior.
     * @param {Event} evt The event.
     * @private
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode Modal.create .create()}, or {@linkcode Modal.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode Modal.init .init()} works.
     * @member Modal.options
     * @type {object}
     * @property {string} selectorInit The CSS class to find modal dialogs.
     * @property {string} [selectorModalClose] The selector to find elements that close the modal.
     * @property {string} [selectorPrimaryFocus] The CSS selector to determine the element to put focus when modal gets open.
     * @property {string} [selectorFocusOnClose] The CSS selector to determine the element to put focus when modal closes.
     *   If undefined, focus returns to the previously focused element prior to the modal opening.
     * @property {string} [selectorModalContainer] The CSS selector for the content container of the modal for focus wrap feature.
     * @property {string} attribInitTarget The attribute name in the launcher buttons to find target modal dialogs.
     * @property {string[]} [selectorsFloatingMenu]
     *   The CSS selectors of floating menus.
     *   Used for detecting if focus-wrap behavior should be disabled temporarily.
     * @property {string} [classVisible] The CSS class for the visible state.
     * @property {string} [classBody] The CSS class for `<body>` with open modal.
     * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.
     * @property {string} [eventBeforeShown]
     *   The name of the custom event fired before this modal is shown.
     *   Cancellation of this event stops showing the modal.
     * @property {string} [eventAfterShown]
     *   The name of the custom event telling that modal is sure shown
     *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).
     * @property {string} [eventBeforeHidden]
     *   The name of the custom event fired before this modal is hidden.
     *   Cancellation of this event stops hiding the modal.
     * @property {string} [eventAfterHidden]
     *   The name of the custom event telling that modal is sure hidden
     *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-modal]',
        selectorModalClose: '[data-modal-close]',
        selectorPrimaryFocus: '[data-modal-primary-focus]',
        selectorsFloatingMenus: [".".concat(prefix, "--overflow-menu-options"), ".".concat(prefix, "--tooltip"), '.flatpickr-calendar'],
        selectorModalContainer: ".".concat(prefix, "--modal-container"),
        classVisible: 'is-visible',
        classBody: "".concat(prefix, "--body--with-modal-open"),
        attribInitTarget: 'data-modal-target',
        initEventNames: ['click'],
        eventBeforeShown: 'modal-beingshown',
        eventAfterShown: 'modal-shown',
        eventBeforeHidden: 'modal-beinghidden',
        eventAfterHidden: 'modal-hidden'
      };
    }
  }]);

  Modal.components = new WeakMap();
  return Modal;
}(mixin(create_component, init_component_by_launcher, evented_show_hide_state, mixins_handles));

/* harmony default export */ var modal = (modal_Modal);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/loading/loading.js
function loading_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    loading_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    loading_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return loading_typeof(obj);
}

function loading_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function loading_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function loading_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) loading_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) loading_defineProperties(Constructor, staticProps);
  return Constructor;
}

function loading_possibleConstructorReturn(self, call) {
  if (call && (loading_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return loading_assertThisInitialized(self);
}

function loading_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function loading_getPrototypeOf(o) {
  loading_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return loading_getPrototypeOf(o);
}

function loading_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) loading_setPrototypeOf(subClass, superClass);
}

function loading_setPrototypeOf(o, p) {
  loading_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return loading_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var loading_Loading =
/*#__PURE__*/
function (_mixin) {
  loading_inherits(Loading, _mixin);
  /**
   * Spinner indicating loading state.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a spinner.
   * @param {object} [options] The component options.
   * @param {boolean} [options.active] `true` if this spinner should roll.
   */


  function Loading(element, options) {
    var _this;

    loading_classCallCheck(this, Loading);

    _this = loading_possibleConstructorReturn(this, loading_getPrototypeOf(Loading).call(this, element, options));
    _this.active = _this.options.active; // Initialize spinner

    _this.set(_this.active);

    return _this;
  }
  /**
   * Sets active/inactive state.
   * @param {boolean} active `true` if this spinner should roll.
   */


  loading_createClass(Loading, [{
    key: "set",
    value: function set(active) {
      if (typeof active !== 'boolean') {
        throw new TypeError('set expects a boolean.');
      }

      this.active = active;
      this.element.classList.toggle(this.options.classLoadingStop, !this.active);
      /**
       * If overlay is the parentNode then toggle it too.
       */

      var parentNode = this.element.parentNode;

      if (parentNode && parentNode.classList.contains(this.options.classLoadingOverlay)) {
        parentNode.classList.toggle(this.options.classLoadingOverlayStop, !this.active);
      }

      return this;
    }
    /**
     * Toggles active/inactive state.
     */

  }, {
    key: "toggle",
    value: function toggle() {
      return this.set(!this.active);
    }
    /**
     * @returns {boolean} `true` if this spinner is rolling.
     */

  }, {
    key: "isActive",
    value: function isActive() {
      return this.active;
    }
    /**
     * Sets state to inactive and deletes the loading element.
     */

  }, {
    key: "end",
    value: function end() {
      var _this2 = this;

      this.set(false);
      var handleAnimationEnd = this.manage(on(this.element, 'animationend', function (evt) {
        if (handleAnimationEnd) {
          handleAnimationEnd = _this2.unmanage(handleAnimationEnd).release();
        }

        if (evt.animationName === 'rotate-end-p2') {
          _this2._deleteElement();
        }
      }));
    }
    /**
     * Delete component from the DOM.
     */

  }, {
    key: "_deleteElement",
    value: function _deleteElement() {
      var parentNode = this.element.parentNode;
      parentNode.removeChild(this.element);

      if (parentNode.classList.contains(this.options.selectorLoadingOverlay)) {
        parentNode.remove();
      }
    }
    /**
     * The map associating DOM element and spinner instance.
     * @member Loading.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode Loading.create .create()}, or {@linkcode Loading.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode Loading.init .init()} works.
     * @member Loading.options
     * @type {object}
     * @property {string} selectorInit The CSS selector to find spinners.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-loading]',
        selectorLoadingOverlay: ".".concat(prefix, "--loading-overlay"),
        classLoadingOverlay: "".concat(prefix, "--loading-overlay"),
        classLoadingStop: "".concat(prefix, "--loading--stop"),
        classLoadingOverlayStop: "".concat(prefix, "--loading-overlay--stop"),
        active: true
      };
    }
  }]);

  Loading.components = new WeakMap();
  return Loading;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var loading = (loading_Loading);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/toggle-attribute.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Toggles the given attribute of the given element.
 * @param {Element} elem The element.
 * @param {string} name The attribute name.
 * @param {boolean} add `true` to set the attribute.
 */
function toggleAttribute(elem, name, add) {
  if (add) {
    elem.setAttribute(name, '');
  } else {
    elem.removeAttribute(name);
  }
}
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/inline-loading/inline-loading.js
function inline_loading_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    inline_loading_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    inline_loading_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return inline_loading_typeof(obj);
}

function inline_loading_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function inline_loading_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function inline_loading_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) inline_loading_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) inline_loading_defineProperties(Constructor, staticProps);
  return Constructor;
}

function inline_loading_possibleConstructorReturn(self, call) {
  if (call && (inline_loading_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return inline_loading_assertThisInitialized(self);
}

function inline_loading_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function inline_loading_getPrototypeOf(o) {
  inline_loading_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return inline_loading_getPrototypeOf(o);
}

function inline_loading_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) inline_loading_setPrototypeOf(subClass, superClass);
}

function inline_loading_setPrototypeOf(o, p) {
  inline_loading_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return inline_loading_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var inline_loading_InlineLoading =
/*#__PURE__*/
function (_mixin) {
  inline_loading_inherits(InlineLoading, _mixin);
  /**
   * Spinner indicating loading state.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a spinner.
   * @param {object} [options] The component options.
   * @param {string} [options.initialState] The initial state, should be `inactive`, `active` or `finished`.
   */


  function InlineLoading(element, options) {
    var _this;

    inline_loading_classCallCheck(this, InlineLoading);

    _this = inline_loading_possibleConstructorReturn(this, inline_loading_getPrototypeOf(InlineLoading).call(this, element, options)); // Sets the initial state

    var initialState = _this.options.initialState;

    if (initialState) {
      _this.setState(initialState);
    }

    return _this;
  }
  /**
   * Sets active/inactive state.
   * @param {string} state The new state, should be `inactive`, `active` or `finished`.
   */


  inline_loading_createClass(InlineLoading, [{
    key: "setState",
    value: function setState(state) {
      var states = this.constructor.states;
      var values = Object.keys(states).map(function (key) {
        return states[key];
      });

      if (values.indexOf(state) < 0) {
        throw new Error("One of the following value should be given as the state: ".concat(values.join(', ')));
      }

      var elem = this.element;
      var _this$options = this.options,
          selectorSpinner = _this$options.selectorSpinner,
          selectorFinished = _this$options.selectorFinished,
          selectorError = _this$options.selectorError,
          selectorTextActive = _this$options.selectorTextActive,
          selectorTextFinished = _this$options.selectorTextFinished,
          selectorTextError = _this$options.selectorTextError;
      var spinner = elem.querySelector(selectorSpinner);
      var finished = elem.querySelector(selectorFinished);
      var error = elem.querySelector(selectorError);
      var textActive = elem.querySelector(selectorTextActive);
      var textFinished = elem.querySelector(selectorTextFinished);
      var textError = elem.querySelector(selectorTextError);

      if (spinner) {
        spinner.classList.toggle(this.options.classLoadingStop, state !== states.ACTIVE);
        toggleAttribute(spinner, 'hidden', state !== states.INACTIVE && state !== states.ACTIVE);
      }

      if (finished) {
        toggleAttribute(finished, 'hidden', state !== states.FINISHED);
      }

      if (error) {
        toggleAttribute(error, 'hidden', state !== states.ERROR);
      }

      if (textActive) {
        toggleAttribute(textActive, 'hidden', state !== states.ACTIVE);
      }

      if (textFinished) {
        toggleAttribute(textFinished, 'hidden', state !== states.FINISHED);
      }

      if (textError) {
        toggleAttribute(textError, 'hidden', state !== states.ERROR);
      }

      return this;
    }
    /**
     * The list of states.
     * @type {object<string, string>}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode InlineLoading.create .create()},
     * or {@linkcode InlineLoading.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode InlineLoading.init .init()} works.
     * @member InlineLoading.options
     * @type {object}
     * @property {string} selectorInit The CSS selector to find inline loading components.
     * @property {string} selectorSpinner The CSS selector to find the spinner.
     * @property {string} selectorFinished The CSS selector to find the "finished" icon.
     * @property {string} selectorError The CSS selector to find the "error" icon.
     * @property {string} selectorTextActive The CSS selector to find the text describing the active state.
     * @property {string} selectorTextFinished The CSS selector to find the text describing the finished state.
     * @property {string} selectorTextError The CSS selector to find the text describing the error state.
     * @property {string} classLoadingStop The CSS class for spinner's stopped state.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-inline-loading]',
        selectorSpinner: '[data-inline-loading-spinner]',
        selectorFinished: '[data-inline-loading-finished]',
        selectorError: '[data-inline-loading-error]',
        selectorTextActive: '[data-inline-loading-text-active]',
        selectorTextFinished: '[data-inline-loading-text-finished]',
        selectorTextError: '[data-inline-loading-text-error]',
        classLoadingStop: "".concat(prefix, "--loading--stop")
      };
    }
  }]);

  InlineLoading.states = {
    INACTIVE: 'inactive',
    ACTIVE: 'active',
    FINISHED: 'finished',
    ERROR: 'error'
  };
  InlineLoading.components = new WeakMap();
  return InlineLoading;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var inline_loading = (inline_loading_InlineLoading);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/dropdown/dropdown.js
function dropdown_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    dropdown_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    dropdown_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return dropdown_typeof(obj);
}

function dropdown_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function dropdown_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function dropdown_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) dropdown_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) dropdown_defineProperties(Constructor, staticProps);
  return Constructor;
}

function dropdown_possibleConstructorReturn(self, call) {
  if (call && (dropdown_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return dropdown_assertThisInitialized(self);
}

function dropdown_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function dropdown_getPrototypeOf(o) {
  dropdown_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return dropdown_getPrototypeOf(o);
}

function dropdown_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) dropdown_setPrototypeOf(subClass, superClass);
}

function dropdown_setPrototypeOf(o, p) {
  dropdown_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return dropdown_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */










var dropdown_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var dropdown_Dropdown =
/*#__PURE__*/
function (_mixin) {
  dropdown_inherits(Dropdown, _mixin);
  /**
   * A selector with drop downs.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends TrackBlur
   * @param {HTMLElement} element The element working as a selector.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorItem] The CSS selector to find clickable areas in dropdown items.
   * @param {string} [options.selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.
   * @param {string} [options.classSelected] The CSS class for the selected dropdown item.
   * @param {string} [options.classOpen] The CSS class for the open state.
   * @param {string} [options.classDisabled] The CSS class for the disabled state.
   * @param {string} [options.eventBeforeSelected]
   *   The name of the custom event fired before a drop down item is selected.
   *   Cancellation of this event stops selection of drop down item.
   * @param {string} [options.eventAfterSelected] The name of the custom event fired after a drop down item is selected.
   */


  function Dropdown(element, options) {
    var _this;

    dropdown_classCallCheck(this, Dropdown);

    _this = dropdown_possibleConstructorReturn(this, dropdown_getPrototypeOf(Dropdown).call(this, element, options));

    _this.manage(on(_this.element.ownerDocument, 'click', function (event) {
      _this._toggle(event);
    }));

    _this.manage(on(_this.element, 'keydown', function (event) {
      _this._handleKeyDown(event);
    }));

    _this.manage(on(_this.element, 'click', function (event) {
      var item = eventMatches(event, _this.options.selectorItem);

      if (item) {
        _this.select(item);
      }
    })); // When using the active descendant approach we use a class to give focus styles during keyboard (up/down arrows)
    // navigation instead of relying on the :focus selector. This leaves the potential to have multiple items when
    // switching interactions between keyboard and mouse users. To more closely align with Carbon React implementation,
    // we want the focus class to move as the user hovers over items. This also updates the location of focus based on
    // the last hovered item if the user switches back to using the keyboard.


    if ( // NOTE: `selectorTrigger` does NOT match the trigger button in older markup
    _this.element.querySelector(_this.options.selectorTrigger) && _this.element.querySelector(_this.options.selectorMenu)) {
      // Using the latest HTML structure that supports the aria-activedescendant attribute
      _this.manage(on(_this.element, 'mouseover', function (event) {
        var item = eventMatches(event, _this.options.selectorItem);

        if (item) {
          _this._updateFocus(item);
        }
      }));
    }

    return _this;
  }
  /**
   * Handles keydown event.
   * @param {Event} event The event triggering this method.
   */


  dropdown_createClass(Dropdown, [{
    key: "_handleKeyDown",
    value: function _handleKeyDown(event) {
      var isOpen = this.element.classList.contains(this.options.classOpen);
      var direction = {
        38: this.constructor.NAVIGATE.BACKWARD,
        40: this.constructor.NAVIGATE.FORWARD
      }[event.which];

      if (isOpen && direction !== undefined) {
        this.navigate(direction);
        event.preventDefault(); // Prevents up/down keys from scrolling container
      } else {
        // get selected item
        // in v10.0, the anchor elements fire click events on Enter keypress when a dropdown item is selected
        // in v10.5 (#3586), focus is no longer placed on the dropdown items and is instead kept fixed on the ul menu
        // so we need to manually call getCurrentNavigation and select the item
        var item = this.getCurrentNavigation();

        if (item && isOpen && (event.which === 13 || event.which === 32) && !this.element.ownerDocument.activeElement.matches(this.options.selectorItem)) {
          event.preventDefault();
          this.select(item);
        }

        this._toggle(event);
      }
    }
    /**
     * When using aria-activedescendant we want to make sure attributes and classes
     * are properly cleaned up when the dropdown is closed
     * @private
     */

  }, {
    key: "_focusCleanup",
    value: function _focusCleanup() {
      // NOTE: `selectorTrigger` does NOT match the trigger button in older markup
      var triggerNode = this.element.querySelector(this.options.selectorTrigger); // only want to grab the listNode IF it's using the latest a11y HTML structure

      var listNode = triggerNode ? this.element.querySelector(this.options.selectorMenu) : null;

      if (listNode) {
        listNode.removeAttribute('aria-activedescendant');
        var focusedItem = this.element.querySelector(this.options.selectorItemFocused);

        if (focusedItem) {
          focusedItem.classList.remove(this.options.classFocused);
        }
      }
    }
    /**
     * Update focus using aria-activedescendant HTML structure
     * @param {HTMLElement} itemToFocus The element to be focused.
     */

  }, {
    key: "_updateFocus",
    value: function _updateFocus(itemToFocus) {
      // NOTE: `selectorTrigger` does NOT match the trigger button in older markup
      var triggerNode = this.element.querySelector(this.options.selectorTrigger); // only want to grab the listNode IF it's using the latest a11y HTML structure

      var listNode = triggerNode ? this.element.querySelector(this.options.selectorMenu) : null;
      var previouslyFocused = listNode.querySelector(this.options.selectorItemFocused);
      itemToFocus.classList.add(this.options.classFocused);
      listNode.setAttribute('aria-activedescendant', itemToFocus.id);

      if (previouslyFocused) {
        previouslyFocused.classList.remove(this.options.classFocused);
      }
    }
    /**
     * Opens and closes the dropdown menu.
     * @param {Event} [event] The event triggering this method.
     *
     * @todo https://github.com/carbon-design-system/carbon/issues/3641
     */

  }, {
    key: "_toggle",
    value: function _toggle(event) {
      var _this2 = this;

      var isDisabled = this.element.classList.contains(this.options.classDisabled);

      if (isDisabled) {
        return;
      } // NOTE: `selectorTrigger` does NOT match the trigger button in older markup


      var triggerNode = this.element.querySelector(this.options.selectorTrigger);

      if ( // User presses down arrow
      event.which === 40 && !event.target.matches(this.options.selectorItem) || // User presses space or enter and the trigger is not a button OR event is not fired by trigger
      (!triggerNode || !triggerNode.contains(event.target)) && [13, 32].indexOf(event.which) >= 0 && !event.target.matches(this.options.selectorItem) || // User presses esc
      event.which === 27 || // User clicks
      event.type === 'click') {
        var isOpen = this.element.classList.contains(this.options.classOpen);
        var isOfSelf = this.element.contains(event.target); // Determine if the open className should be added, removed, or toggled

        var actions = {
          add: isOfSelf && event.which === 40 && !isOpen,
          remove: (!isOfSelf || event.which === 27) && isOpen,
          toggle: isOfSelf && event.which !== 27 && event.which !== 40
        };
        var changedState = false;
        Object.keys(actions).forEach(function (action) {
          if (actions[action]) {
            changedState = true;

            _this2.element.classList[action](_this2.options.classOpen);
          }
        });
        var listItems = dropdown_toArray(this.element.querySelectorAll(this.options.selectorItem)); // only want to grab the listNode IF it's using the latest a11y HTML structure

        var listNode = triggerNode ? this.element.querySelector(this.options.selectorMenu) : null; // @todo remove conditionals for elements existing once legacy structure is depreciated

        if (changedState && this.element.classList.contains(this.options.classOpen)) {
          // toggled open
          if (triggerNode) {
            triggerNode.setAttribute('aria-expanded', 'true');
          }

          (listNode || this.element).focus();

          if (listNode) {
            var selectedNode = listNode.querySelector(this.options.selectorLinkSelected);
            listNode.setAttribute('aria-activedescendant', (selectedNode || listItems[0]).id);
            (selectedNode || listItems[0]).classList.add(this.options.classFocused);
          }
        } else if (changedState && (isOfSelf || actions.remove)) {
          // toggled close
          // timer is used to call focus AFTER the click event on
          // trigger button (which is caused by keypress e.g. during keyboard navigation)
          setTimeout(function () {
            return (triggerNode || _this2.element).focus();
          }, 0);

          if (triggerNode) {
            triggerNode.setAttribute('aria-expanded', 'false');
          }

          this._focusCleanup();
        } // @todo remove once legacy structure is depreciated


        if (!triggerNode) {
          listItems.forEach(function (item) {
            if (_this2.element.classList.contains(_this2.options.classOpen)) {
              item.tabIndex = 0;
            } else {
              item.tabIndex = -1;
            }
          });
        }

        var menuListNode = this.element.querySelector(this.options.selectorMenu);

        if (menuListNode) {
          menuListNode.tabIndex = this.element.classList.contains(this.options.classOpen) ? '0' : '-1';
        }
      }
    }
    /**
     * @returns {Element} Currently highlighted element.
     */

  }, {
    key: "getCurrentNavigation",
    value: function getCurrentNavigation() {
      var focusedNode; // Using the latest semantic markup structure where trigger is a button
      // @todo remove conditional once legacy structure is depreciated
      // NOTE: `selectorTrigger` does NOT match the trigger button in older markup

      if (this.element.querySelector(this.options.selectorTrigger)) {
        var listNode = this.element.querySelector(this.options.selectorMenu);
        var focusedId = listNode.getAttribute('aria-activedescendant');
        focusedNode = focusedId ? listNode.querySelector("#".concat(focusedId)) : null;
      } else {
        var focused = this.element.ownerDocument.activeElement;
        focusedNode = focused.nodeType === Node.ELEMENT_NODE && focused.matches(this.options.selectorItem) ? focused : null;
      }

      return focusedNode;
    }
    /**
     * Moves up/down the focus.
     * @param {number} direction The direction of navigating.
     */
    // @todo create issue it's a better UX to move the focus when the user hovers so they stay in sync

  }, {
    key: "navigate",
    value: function navigate(direction) {
      var items = dropdown_toArray(this.element.querySelectorAll(this.options.selectorItem));
      var start = this.getCurrentNavigation() || this.element.querySelector(this.options.selectorLinkSelected);

      var getNextItem = function getNextItem(old) {
        var handleUnderflow = function handleUnderflow(i, l) {
          return i + (i >= 0 ? 0 : l);
        };

        var handleOverflow = function handleOverflow(i, l) {
          return i - (i < l ? 0 : l);
        }; // `items.indexOf(old)` may be -1 (Scenario of no previous focus)


        var index = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index, items.length), items.length)];
      };

      var isShowSelected = this.element.classList.contains(this.options.classShowSelected);

      for (var current = getNextItem(start); current && current !== start; current = getNextItem(current)) {
        if (!current.matches(this.options.selectorItemHidden) && !current.parentNode.matches(this.options.selectorItemHidden) && (isShowSelected || !isShowSelected && !current.parentElement.matches(this.options.selectorItemSelected))) {
          // Using the latest semantic markup structure where trigger is a button
          // @todo remove conditional once legacy structure is depreciated
          // NOTE: `selectorTrigger` does NOT match the trigger button in older markup
          if (this.element.querySelector(this.options.selectorTrigger)) {
            this._updateFocus(current);
          } else {
            current.focus();
          }

          break;
        }
      }
    }
    /**
     * Handles clicking on the dropdown options, doing the following:
     * * Change Dropdown text to selected option.
     * * Remove selected option from options when selected.
     * * Emit custom events.
     * @param {HTMLElement} itemToSelect The element to be activated.
     */

  }, {
    key: "select",
    value: function select(itemToSelect) {
      var _this3 = this;

      var eventStart = new CustomEvent(this.options.eventBeforeSelected, {
        bubbles: true,
        cancelable: true,
        detail: {
          item: itemToSelect
        }
      });

      if (this.element.dispatchEvent(eventStart)) {
        if (this.element.dataset.dropdownType !== 'navigation') {
          // NOTE: `selectorTrigger` does NOT match the trigger button in older markup
          var selectorText = !this.element.querySelector(this.options.selectorTrigger) && this.element.dataset.dropdownType !== 'inline' ? this.options.selectorText : this.options.selectorTextInner;
          var text = this.element.querySelector(selectorText);

          if (text) {
            text.innerHTML = itemToSelect.innerHTML;
          }

          itemToSelect.parentElement.classList.add(this.options.classSelected);
        }

        this.element.dataset.value = itemToSelect.parentElement.dataset.value;
        dropdown_toArray(this.element.querySelectorAll(this.options.selectorLinkSelected)).forEach(function (item) {
          if (itemToSelect !== item) {
            item.parentElement.classList.remove(_this3.options.classSelected);
          }
        });
        this.element.dispatchEvent(new CustomEvent(this.options.eventAfterSelected, {
          bubbles: true,
          cancelable: true,
          detail: {
            item: itemToSelect
          }
        }));
      }
    }
    /**
     * Closes the dropdown menu if this component loses focus.
     */

  }, {
    key: "handleBlur",
    value: function handleBlur() {
      this.element.classList.remove(this.options.classOpen);

      this._focusCleanup();
    }
    /**
     * The map associating DOM element and selector instance.
     * @member Dropdown.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode Dropdown.create .create()}, or {@linkcode Dropdown.init .init()},
     * properties in this object are overridden for the instance being create and how {@linkcode Dropdown.init .init()} works.
     * @member Dropdown.options
     * @type {object}
     * @property {string} selectorInit The CSS selector to find selectors.
     * @property {string} [selectorTrigger]
     *   The CSS selector to find the trigger button when using a11y compliant markup.
     *   NOTE: Does NOT match the trigger button in older markup.
     * @property {string} [selectorMenu] The CSS selector to find menu list when using a11y compliant markup.
     * @property {string} [selectorText] The CSS selector to find the element showing the selected item.
     * @property {string} [selectorTextInner] The CSS selector to find the element showing the selected item, used for inline mode.
     * @property {string} [selectorItem] The CSS selector to find clickable areas in dropdown items.
     * @property {string} [selectorItemHidden]
     *   The CSS selector to find hidden dropdown items.
     *   Used to skip dropdown items for keyboard navigation.
     * @property {string} [selectorItemSelected] The CSS selector to find the clickable area in the selected dropdown item.
     * @property {string} [selectorItemFocused] The CSS selector to find the clickable area in the focused dropdown item.
     * @property {string} [selectorLinkSelected] The CSS selector to target the link node of the selected dropdown item.
     * @property {string} [classShowSelected] The CSS class for the show selected modifier of the dropdown.
     * @property {string} [classSelected] The CSS class for the selected dropdown item.
     * @property {string} [classFocused] The CSS class for the focused dropdown item.
     * @property {string} [classOpen] The CSS class for the open state.
     * @property {string} [classDisabled] The CSS class for the disabled state.
     * @property {string} [eventBeforeSelected]
     *   The name of the custom event fired before a drop down item is selected.
     *   Cancellation of this event stops selection of drop down item.
     * @property {string} [eventAfterSelected] The name of the custom event fired after a drop down item is selected.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-dropdown]',
        selectorTrigger: "button.".concat(prefix, "--dropdown-text"),
        // NOTE: Does NOT match the trigger button in older markup.
        selectorMenu: ".".concat(prefix, "--dropdown-list"),
        selectorText: ".".concat(prefix, "--dropdown-text"),
        selectorTextInner: ".".concat(prefix, "--dropdown-text__inner"),
        selectorItem: ".".concat(prefix, "--dropdown-link"),
        selectorItemSelected: ".".concat(prefix, "--dropdown--selected"),
        selectorItemFocused: ".".concat(prefix, "--dropdown--focused"),
        selectorItemHidden: "[hidden],[aria-hidden=\"true\"]",
        selectorLinkSelected: ".".concat(prefix, "--dropdown--selected .").concat(prefix, "--dropdown-link"),
        classShowSelected: "".concat(prefix, "--dropdown--show-selected"),
        classSelected: "".concat(prefix, "--dropdown--selected"),
        classFocused: "".concat(prefix, "--dropdown--focused"),
        classOpen: "".concat(prefix, "--dropdown--open"),
        classDisabled: "".concat(prefix, "--dropdown--disabled"),
        eventBeforeSelected: 'dropdown-beingselected',
        eventAfterSelected: 'dropdown-selected'
      };
    }
    /**
     * Enum for navigating backward/forward.
     * @readonly
     * @member Dropdown.NAVIGATE
     * @type {object}
     * @property {number} BACKWARD Navigating backward.
     * @property {number} FORWARD Navigating forward.
     */

  }]);

  Dropdown.components = new WeakMap();
  Dropdown.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return Dropdown;
}(mixin(create_component, init_component_by_search, track_blur));

/* harmony default export */ var dropdown = (dropdown_Dropdown);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/number-input/number-input.js
function number_input_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    number_input_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    number_input_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return number_input_typeof(obj);
}

function number_input_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function number_input_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function number_input_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) number_input_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) number_input_defineProperties(Constructor, staticProps);
  return Constructor;
}

function number_input_possibleConstructorReturn(self, call) {
  if (call && (number_input_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return number_input_assertThisInitialized(self);
}

function number_input_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function number_input_getPrototypeOf(o) {
  number_input_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return number_input_getPrototypeOf(o);
}

function number_input_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) number_input_setPrototypeOf(subClass, superClass);
}

function number_input_setPrototypeOf(o, p) {
  number_input_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return number_input_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var number_input_NumberInput =
/*#__PURE__*/
function (_mixin) {
  number_input_inherits(NumberInput, _mixin);
  /**
   * Number input UI.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a number input UI.
   */


  function NumberInput(element, options) {
    var _this;

    number_input_classCallCheck(this, NumberInput);

    _this = number_input_possibleConstructorReturn(this, number_input_getPrototypeOf(NumberInput).call(this, element, options)); // Broken DOM tree is seen with up/down arrows <svg> in IE, which breaks event delegation.
    // <svg> does not have `Element.classList` in IE11

    _this.manage(on(_this.element.querySelector('.up-icon'), 'click', function (event) {
      _this._handleClick(event);
    }));

    _this.manage(on(_this.element.querySelector('.down-icon'), 'click', function (event) {
      _this._handleClick(event);
    }));

    return _this;
  }
  /**
   * Increase/decrease number by clicking on up/down icons.
   * @param {Event} event The event triggering this method.
   */


  number_input_createClass(NumberInput, [{
    key: "_handleClick",
    value: function _handleClick(event) {
      var numberInput = this.element.querySelector(this.options.selectorInput);
      var target = event.currentTarget.getAttribute('class').split(' ');

      if (target.indexOf('up-icon') >= 0) {
        ++numberInput.value;
      } else if (target.indexOf('down-icon') >= 0) {
        --numberInput.value;
      } // Programmatic change in value (including `stepUp()`/`stepDown()`) won't fire change event


      numberInput.dispatchEvent(new CustomEvent('change', {
        bubbles: true,
        cancelable: false
      }));
    }
    /**
     * The map associating DOM element and number input UI instance.
     * @member NumberInput.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.
     * @member NumberInput.options
     * @type {object}
     * @property {string} selectorInit The CSS selector to find number input UIs.
     * @property {string} [selectorInput] The CSS selector to find the `<input>` element.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-numberinput]',
        selectorInput: ".".concat(prefix, "--number input")
      };
    }
  }]);

  NumberInput.components = new WeakMap();
  return NumberInput;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var number_input = (number_input_NumberInput);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/data-table/data-table.js
function data_table_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    data_table_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    data_table_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return data_table_typeof(obj);
}

function data_table_toConsumableArray(arr) {
  return data_table_arrayWithoutHoles(arr) || data_table_iterableToArray(arr) || data_table_nonIterableSpread();
}

function data_table_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function data_table_iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function data_table_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function data_table_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function data_table_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function data_table_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) data_table_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) data_table_defineProperties(Constructor, staticProps);
  return Constructor;
}

function data_table_possibleConstructorReturn(self, call) {
  if (call && (data_table_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return data_table_assertThisInitialized(self);
}

function data_table_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function data_table_getPrototypeOf(o) {
  data_table_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return data_table_getPrototypeOf(o);
}

function data_table_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) data_table_setPrototypeOf(subClass, superClass);
}

function data_table_setPrototypeOf(o, p) {
  data_table_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return data_table_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











var data_table_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var data_table_DataTable =
/*#__PURE__*/
function (_mixin) {
  data_table_inherits(DataTable, _mixin);
  /**
   * Data Table
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends   EventedState
   * @param {HTMLElement} element The root element of tables
   * @param {object} [options] the... options
   * @param {string} [options.selectorInit] selector initialization
   * @param {string} [options.selectorExpandCells] css selector for expand
   * @param {string} [options.expandableRow] css selector for expand
   * @param {string} [options.selectorParentRows] css selector for rows housing expansion
   * @param {string} [options.selectorTableBody] root css for table body
   * @param {string} [options.eventTrigger] selector for event bubble capture points
   * @param {string} [options.eventParentContainer] used find the bubble container
   */


  function DataTable(_element, options) {
    var _this;

    data_table_classCallCheck(this, DataTable);

    _this = data_table_possibleConstructorReturn(this, data_table_getPrototypeOf(DataTable).call(this, _element, options));

    _this._sortToggle = function (detail) {
      var element = detail.element,
          previousValue = detail.previousValue;
      data_table_toArray(_this.tableHeaders).forEach(function (header) {
        var sortEl = header.querySelector(_this.options.selectorTableSort);

        if (sortEl !== null && sortEl !== element) {
          sortEl.classList.remove(_this.options.classTableSortActive);
          sortEl.classList.remove(_this.options.classTableSortAscending);
        }
      });

      if (!previousValue) {
        element.dataset.previousValue = 'ascending';
        element.classList.add(_this.options.classTableSortActive);
        element.classList.add(_this.options.classTableSortAscending);
      } else if (previousValue === 'ascending') {
        element.dataset.previousValue = 'descending';
        element.classList.add(_this.options.classTableSortActive);
        element.classList.remove(_this.options.classTableSortAscending);
      } else if (previousValue === 'descending') {
        element.removeAttribute('data-previous-value');
        element.classList.remove(_this.options.classTableSortActive);
        element.classList.remove(_this.options.classTableSortAscending);
      }
    };

    _this._selectToggle = function (detail) {
      var element = detail.element;
      var checked = element.checked; // increment the  count

      _this.state.checkboxCount += checked ? 1 : -1;
      _this.countEl.textContent = _this.state.checkboxCount;
      var row = element.parentNode.parentNode;
      row.classList.toggle(_this.options.classTableSelected); // toggle on/off batch action bar

      _this._actionBarToggle(_this.state.checkboxCount > 0);
    };

    _this._selectAllToggle = function (_ref) {
      var element = _ref.element;
      var checked = element.checked;
      var inputs = data_table_toArray(_this.element.querySelectorAll(_this.options.selectorCheckbox));
      _this.state.checkboxCount = checked ? inputs.length - 1 : 0;
      inputs.forEach(function (item) {
        item.checked = checked;
        var row = item.parentNode.parentNode;

        if (checked && row) {
          row.classList.add(_this.options.classTableSelected);
        } else {
          row.classList.remove(_this.options.classTableSelected);
        }
      });

      _this._actionBarToggle(_this.state.checkboxCount > 0);

      if (_this.batchActionEl) {
        _this.countEl.textContent = _this.state.checkboxCount;
      }
    };

    _this._actionBarCancel = function () {
      var inputs = data_table_toArray(_this.element.querySelectorAll(_this.options.selectorCheckbox));
      var row = data_table_toArray(_this.element.querySelectorAll(_this.options.selectorTableSelected));
      row.forEach(function (item) {
        item.classList.remove(_this.options.classTableSelected);
      });
      inputs.forEach(function (item) {
        item.checked = false;
      });
      _this.state.checkboxCount = 0;

      _this._actionBarToggle(false);

      if (_this.batchActionEl) {
        _this.countEl.textContent = _this.state.checkboxCount;
      }
    };

    _this._actionBarToggle = function (toggleOn) {
      var handleTransitionEnd;

      var transition = function transition(evt) {
        if (handleTransitionEnd) {
          handleTransitionEnd = _this.unmanage(handleTransitionEnd).release();
        }

        if (evt.target.matches(_this.options.selectorActions)) {
          if (_this.batchActionEl.dataset.active === 'false') {
            _this.batchActionEl.setAttribute('tabIndex', -1);
          } else {
            _this.batchActionEl.setAttribute('tabIndex', 0);
          }
        }
      };

      if (toggleOn) {
        _this.batchActionEl.dataset.active = true;

        _this.batchActionEl.classList.add(_this.options.classActionBarActive);
      } else if (_this.batchActionEl) {
        _this.batchActionEl.dataset.active = false;

        _this.batchActionEl.classList.remove(_this.options.classActionBarActive);
      }

      if (_this.batchActionEl) {
        handleTransitionEnd = _this.manage(on(_this.batchActionEl, 'transitionend', transition));
      }
    };

    _this._rowExpandToggle = function (_ref2) {
      var element = _ref2.element,
          forceExpand = _ref2.forceExpand;
      var parent = element.closest(_this.options.eventParentContainer); // NOTE: `data-previous-value` keeps UI state before this method makes change in style
      // eslint-disable-next-line eqeqeq

      var shouldExpand = forceExpand != null ? forceExpand : element.dataset.previousValue === undefined || element.dataset.previousValue === 'expanded';

      if (shouldExpand) {
        element.dataset.previousValue = 'collapsed';
        parent.classList.add(_this.options.classExpandableRow);
      } else {
        parent.classList.remove(_this.options.classExpandableRow);
        element.dataset.previousValue = 'expanded';

        var expandHeader = _this.element.querySelector(_this.options.selectorExpandHeader);

        if (expandHeader) {
          expandHeader.dataset.previousValue = 'expanded';
        }
      }
    };

    _this._rowExpandToggleAll = function (_ref3) {
      var element = _ref3.element; // NOTE: `data-previous-value` keeps UI state before this method makes change in style

      var shouldExpand = element.dataset.previousValue === undefined || element.dataset.previousValue === 'expanded';
      element.dataset.previousValue = shouldExpand ? 'collapsed' : 'expanded';

      var expandCells = _this.element.querySelectorAll(_this.options.selectorExpandCells);

      Array.prototype.forEach.call(expandCells, function (cell) {
        _this._rowExpandToggle({
          element: cell,
          forceExpand: shouldExpand
        });
      });
    };

    _this._expandableHoverToggle = function (evt) {
      var element = eventMatches(evt, _this.options.selectorChildRow);

      if (element) {
        element.previousElementSibling.classList.toggle(_this.options.classExpandableRowHover, evt.type === 'mouseover');
      }
    };

    _this._toggleState = function (element, evt) {
      var data = element.dataset;
      var label = data.label ? data.label : '';
      var previousValue = data.previousValue ? data.previousValue : '';
      var initialEvt = evt;

      _this.changeState({
        group: data.event,
        element: element,
        label: label,
        previousValue: previousValue,
        initialEvt: initialEvt
      });
    };

    _this._keydownHandler = function (evt) {
      var searchContainer = _this.element.querySelector(_this.options.selectorToolbarSearchContainer);

      var searchEvent = eventMatches(evt, _this.options.selectorSearchMagnifier);
      var activeSearch = searchContainer.classList.contains(_this.options.classToolbarSearchActive);

      if (evt.which === 27) {
        _this._actionBarCancel();
      }

      if (searchContainer && searchEvent && evt.which === 13) {
        _this.activateSearch(searchContainer);
      }

      if (activeSearch && evt.which === 27) {
        _this.deactivateSearch(searchContainer, evt);
      }
    };

    _this.refreshRows = function () {
      var newExpandCells = data_table_toArray(_this.element.querySelectorAll(_this.options.selectorExpandCells));
      var newExpandableRows = data_table_toArray(_this.element.querySelectorAll(_this.options.selectorExpandableRows));
      var newParentRows = data_table_toArray(_this.element.querySelectorAll(_this.options.selectorParentRows)); // check if this is a refresh or the first time

      if (_this.parentRows.length > 0) {
        var diffParentRows = newParentRows.filter(function (newRow) {
          return !_this.parentRows.some(function (oldRow) {
            return oldRow === newRow;
          });
        }); // check if there are expandable rows

        if (newExpandableRows.length > 0) {
          var diffExpandableRows = diffParentRows.map(function (newRow) {
            return newRow.nextElementSibling;
          });
          var mergedExpandableRows = [].concat(data_table_toConsumableArray(data_table_toArray(_this.expandableRows)), data_table_toConsumableArray(data_table_toArray(diffExpandableRows)));
          _this.expandableRows = mergedExpandableRows;
        }
      } else if (newExpandableRows.length > 0) {
        _this.expandableRows = newExpandableRows;
      }

      _this.expandCells = newExpandCells;
      _this.parentRows = newParentRows;
    };

    _this.container = _element.parentNode;
    _this.toolbarEl = _this.element.querySelector(_this.options.selectorToolbar);
    _this.batchActionEl = _this.element.querySelector(_this.options.selectorActions);
    _this.countEl = _this.element.querySelector(_this.options.selectorCount);
    _this.cancelEl = _this.element.querySelector(_this.options.selectorActionCancel);
    _this.tableHeaders = _this.element.querySelectorAll('th');
    _this.tableBody = _this.element.querySelector(_this.options.selectorTableBody);
    _this.expandCells = [];
    _this.expandableRows = [];
    _this.parentRows = [];

    _this.refreshRows();

    _this.manage(on(_this.element, 'mouseover', _this._expandableHoverToggle));

    _this.manage(on(_this.element, 'mouseout', _this._expandableHoverToggle));

    _this.manage(on(_this.element, 'click', function (evt) {
      var eventElement = eventMatches(evt, _this.options.eventTrigger);

      var searchContainer = _this.element.querySelector(_this.options.selectorToolbarSearchContainer);

      if (eventElement) {
        _this._toggleState(eventElement, evt);
      }

      if (searchContainer) {
        _this._handleDocumentClick(evt);
      }
    }));

    _this.manage(on(_this.element, 'keydown', _this._keydownHandler));

    _this.state = {
      checkboxCount: 0
    };
    return _this;
  }

  data_table_createClass(DataTable, [{
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(evt) {
      var searchContainer = this.element.querySelector(this.options.selectorToolbarSearchContainer);
      var searchEvent = eventMatches(evt, this.options.selectorSearchMagnifier);
      var activeSearch = searchContainer.classList.contains(this.options.classToolbarSearchActive);

      if (searchContainer && searchEvent) {
        this.activateSearch(searchContainer);
      }

      if (activeSearch) {
        this.deactivateSearch(searchContainer, evt);
      }
    }
  }, {
    key: "activateSearch",
    value: function activateSearch(container) {
      var input = container.querySelector(this.options.selectorSearchInput);
      container.classList.add(this.options.classToolbarSearchActive);
      input.focus();
    }
  }, {
    key: "deactivateSearch",
    value: function deactivateSearch(container, evt) {
      var trigger = container.querySelector(this.options.selectorSearchMagnifier);
      var input = container.querySelector(this.options.selectorSearchInput);
      var svg = trigger.querySelector('svg');

      if (input.value.length === 0 && evt.target !== input && evt.target !== trigger && evt.target !== svg) {
        container.classList.remove(this.options.classToolbarSearchActive);
        trigger.focus();
      }

      if (evt.which === 27 && evt.target === input) {
        container.classList.remove(this.options.classToolbarSearchActive);
        trigger.focus();
      }
    }
  }, {
    key: "_changeState",
    value: function _changeState(detail, callback) {
      this[this.constructor.eventHandlers[detail.group]](detail);
      callback();
    }
  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: "[data-table]",
        selectorToolbar: ".".concat(prefix, "--table--toolbar"),
        selectorActions: ".".concat(prefix, "--batch-actions"),
        selectorCount: '[data-items-selected]',
        selectorActionCancel: ".".concat(prefix, "--batch-summary__cancel"),
        selectorCheckbox: ".".concat(prefix, "--checkbox"),
        selectorExpandHeader: "th.".concat(prefix, "--table-expand"),
        selectorExpandCells: "td.".concat(prefix, "--table-expand"),
        selectorExpandableRows: ".".concat(prefix, "--expandable-row"),
        selectorParentRows: ".".concat(prefix, "--parent-row"),
        selectorChildRow: '[data-child-row]',
        selectorTableBody: 'tbody',
        selectorTableSort: ".".concat(prefix, "--table-sort"),
        selectorTableSelected: ".".concat(prefix, "--data-table--selected"),
        selectorToolbarSearchContainer: ".".concat(prefix, "--toolbar-search-container-expandable"),
        selectorSearchMagnifier: ".".concat(prefix, "--search-magnifier"),
        selectorSearchInput: ".".concat(prefix, "--search-input"),
        classExpandableRow: "".concat(prefix, "--expandable-row"),
        classExpandableRowHidden: "".concat(prefix, "--expandable-row--hidden"),
        classExpandableRowHover: "".concat(prefix, "--expandable-row--hover"),
        classTableSortAscending: "".concat(prefix, "--table-sort--ascending"),
        classTableSortActive: "".concat(prefix, "--table-sort--active"),
        classToolbarSearchActive: "".concat(prefix, "--toolbar-search-container-active"),
        classActionBarActive: "".concat(prefix, "--batch-actions--active"),
        classTableSelected: "".concat(prefix, "--data-table--selected"),
        eventBeforeExpand: "data-table-beforetoggleexpand",
        eventAfterExpand: "data-table-aftertoggleexpand",
        eventBeforeExpandAll: "data-table-beforetoggleexpandall",
        eventAfterExpandAll: "data-table-aftertoggleexpandall",
        eventBeforeSort: "data-table-beforetogglesort",
        eventAfterSort: "data-table-aftertogglesort",
        eventTrigger: '[data-event]',
        eventParentContainer: '[data-parent-row]'
      };
    }
  }]);

  DataTable.components = new WeakMap();
  DataTable.eventHandlers = {
    expand: '_rowExpandToggle',
    expandAll: '_rowExpandToggleAll',
    sort: '_sortToggle',
    select: '_selectToggle',
    'select-all': '_selectAllToggle',
    'action-bar-cancel': '_actionBarCancel'
  };
  return DataTable;
}(mixin(create_component, init_component_by_search, evented_state, mixins_handles));

/* harmony default export */ var data_table = (data_table_DataTable);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/data-table-v2/data-table-v2.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/* harmony default export */ var data_table_v2 = (data_table);
// EXTERNAL MODULE: ./node_modules/carbon-components/node_modules/flatpickr/dist/flatpickr.js
var flatpickr = __webpack_require__("3f45");
var flatpickr_default = /*#__PURE__*/__webpack_require__.n(flatpickr);

// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/date-picker/date-picker.js
function date_picker_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    date_picker_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    date_picker_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return date_picker_typeof(obj);
}

function date_picker_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function date_picker_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function date_picker_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) date_picker_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) date_picker_defineProperties(Constructor, staticProps);
  return Constructor;
}

function date_picker_possibleConstructorReturn(self, call) {
  if (call && (date_picker_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return date_picker_assertThisInitialized(self);
}

function date_picker_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function date_picker_get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    date_picker_get = Reflect.get;
  } else {
    date_picker_get = function _get(target, property, receiver) {
      var base = date_picker_superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return date_picker_get(target, property, receiver || target);
}

function date_picker_superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = date_picker_getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function date_picker_getPrototypeOf(o) {
  date_picker_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return date_picker_getPrototypeOf(o);
}

function date_picker_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) date_picker_setPrototypeOf(subClass, superClass);
}

function date_picker_setPrototypeOf(o, p) {
  date_picker_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return date_picker_setPrototypeOf(o, p);
}

function date_picker_toConsumableArray(arr) {
  return date_picker_arrayWithoutHoles(arr) || date_picker_iterableToArray(arr) || date_picker_nonIterableSpread();
}

function date_picker_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function date_picker_iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function date_picker_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









/* eslint no-underscore-dangle: [2, { "allow": ["_input", "_updateClassNames", "_updateInputFields"], "allowAfterThis": true }] */
// `this.options` create-component mix-in creates prototype chain
// so that `options` given in constructor argument wins over the one defined in static `options` property
// 'Flatpickr' wants flat structure of object instead

function flattenOptions(options) {
  var o = {}; // eslint-disable-next-line guard-for-in, no-restricted-syntax

  for (var key in options) {
    o[key] = options[key];
  }

  return o;
} // Weekdays shorthand for english locale


flatpickr_default.a.l10ns.en.weekdays.shorthand.forEach(function (day, index) {
  var currentDay = flatpickr_default.a.l10ns.en.weekdays.shorthand;

  if (currentDay[index] === 'Thu' || currentDay[index] === 'Th') {
    currentDay[index] = 'Th';
  } else {
    currentDay[index] = currentDay[index].charAt(0);
  }
});

var date_picker_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};
/**
 * @param {number} monthNumber The month number.
 * @param {boolean} shorthand `true` to use shorthand month.
 * @param {Locale} locale The Flatpickr locale data.
 * @returns {string} The month string.
 */


var monthToStr = function monthToStr(monthNumber, shorthand, locale) {
  return locale.months[shorthand ? 'shorthand' : 'longhand'][monthNumber];
};
/**
 * @param {object} config Plugin configuration.
 * @param {boolean} [config.shorthand] `true` to use shorthand month.
 * @param {string} config.selectorFlatpickrMonthYearContainer The CSS selector for the container of month/year selection UI.
 * @param {string} config.selectorFlatpickrYearContainer The CSS selector for the container of year selection UI.
 * @param {string} config.selectorFlatpickrCurrentMonth The CSS selector for the text-based month selection UI.
 * @param {string} config.classFlatpickrCurrentMonth The CSS class for the text-based month selection UI.
 * @returns {Plugin} A Flatpickr plugin to use text instead of `<select>` for month picker.
 */


var carbonFlatpickrMonthSelectPlugin = function carbonFlatpickrMonthSelectPlugin(config) {
  return function (fp) {
    var setupElements = function setupElements() {
      var _fp$monthElements;

      if (!fp.monthElements) {
        return;
      }

      fp.monthElements.forEach(function (elem) {
        if (!elem.parentNode) return;
        elem.parentNode.removeChild(elem);
      });

      (_fp$monthElements = fp.monthElements).splice.apply(_fp$monthElements, [0, fp.monthElements.length].concat(date_picker_toConsumableArray(fp.monthElements.map(function () {
        // eslint-disable-next-line no-underscore-dangle
        var monthElement = fp._createElement('span', config.classFlatpickrCurrentMonth);

        monthElement.textContent = monthToStr(fp.currentMonth, config.shorthand === true, fp.l10n);
        fp.yearElements[0].closest(config.selectorFlatpickrMonthYearContainer).insertBefore(monthElement, fp.yearElements[0].closest(config.selectorFlatpickrYearContainer));
        return monthElement;
      }))));
    };

    var updateCurrentMonth = function updateCurrentMonth() {
      var monthStr = monthToStr(fp.currentMonth, config.shorthand === true, fp.l10n);
      fp.yearElements.forEach(function (elem) {
        var currentMonthContainer = elem.closest(config.selectorFlatpickrMonthYearContainer);
        Array.prototype.forEach.call(currentMonthContainer.querySelectorAll('.cur-month'), function (monthElement) {
          monthElement.textContent = monthStr;
        });
      });
    };

    var register = function register() {
      fp.loadedPlugins.push('carbonFlatpickrMonthSelectPlugin');
    };

    return {
      onMonthChange: updateCurrentMonth,
      onValueUpdate: updateCurrentMonth,
      onOpen: updateCurrentMonth,
      onReady: [setupElements, updateCurrentMonth, register]
    };
  };
};

var date_picker_DatePicker =
/*#__PURE__*/
function (_mixin) {
  date_picker_inherits(DatePicker, _mixin);
  /**
   * DatePicker.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as an date picker.
   */


  function DatePicker(element, options) {
    var _this;

    date_picker_classCallCheck(this, DatePicker);

    _this = date_picker_possibleConstructorReturn(this, date_picker_getPrototypeOf(DatePicker).call(this, element, options));

    _this._handleFocus = function () {
      if (_this.calendar) {
        _this.calendar.open();
      }
    };

    _this._handleBlur = function (event) {
      if (_this.calendar) {
        var focusTo = event.relatedTarget;

        if (!focusTo || !_this.element.contains(focusTo) && (!_this.calendar.calendarContainer || !_this.calendar.calendarContainer.contains(focusTo))) {
          _this.calendar.close();
        }
      }
    };

    _this._initDatePicker = function (type) {
      if (type === 'range') {
        // Given FlatPickr assumes one `<input>` even in range mode,
        // use a hidden `<input>` for such purpose, separate from our from/to `<input>`s
        var doc = _this.element.ownerDocument;
        var rangeInput = doc.createElement('input');
        rangeInput.className = _this.options.classVisuallyHidden;
        rangeInput.setAttribute('aria-hidden', 'true');

        _this.element.appendChild(rangeInput);

        _this._rangeInput = rangeInput; // An attempt to open the date picker dropdown when this component gets focus,
        // and close the date picker dropdown when this component loses focus

        var w = doc.defaultView;
        var hasFocusin = 'onfocusin' in w;
        var hasFocusout = 'onfocusout' in w;
        var focusinEventName = hasFocusin ? 'focusin' : 'focus';
        var focusoutEventName = hasFocusout ? 'focusout' : 'blur';

        _this.manage(on(_this.element, focusinEventName, _this._handleFocus, !hasFocusin));

        _this.manage(on(_this.element, focusoutEventName, _this._handleBlur, !hasFocusout));

        _this.manage(on(_this.element.querySelector(_this.options.selectorDatePickerIcon), focusoutEventName, _this._handleBlur, !hasFocusout));
      }

      var self = date_picker_assertThisInitialized(_this);

      var date = type === 'range' ? _this._rangeInput : _this.element.querySelector(_this.options.selectorDatePickerInput);
      var _this$options = _this.options,
          _onClose = _this$options.onClose,
          _onChange = _this$options.onChange,
          _onMonthChange = _this$options.onMonthChange,
          _onYearChange = _this$options.onYearChange,
          _onOpen = _this$options.onOpen,
          _onValueUpdate = _this$options.onValueUpdate;
      var calendar = new flatpickr_default.a(date, Object.assign(flattenOptions(_this.options), {
        allowInput: true,
        mode: type,
        disableMobile: true,
        positionElement: type === 'range' && _this.element.querySelector(_this.options.selectorDatePickerInputFrom),
        onClose: function onClose(selectedDates) {
          // An attempt to disable Flatpickr's focus tracking system,
          // which has adverse effect with our old set up with two `<input>`s or our latest setup with a hidden `<input>`
          if (self.shouldForceOpen) {
            if (self.calendar.calendarContainer) {
              self.calendar.calendarContainer.classList.add('open');
            }

            self.calendar.isOpen = true;
          }

          for (var _len = arguments.length, remainder = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            remainder[_key - 1] = arguments[_key];
          }

          if (!_onClose || _onClose.call.apply(_onClose, [this, selectedDates].concat(remainder)) !== false) {
            self._updateClassNames(calendar);

            self._updateInputFields(selectedDates, type);
          }
        },
        onChange: function onChange() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }

          if (!_onChange || _onChange.call.apply(_onChange, [this].concat(args)) !== false) {
            self._updateClassNames(calendar);

            if (type === 'range') {
              if (calendar.selectedDates.length === 1 && calendar.isOpen) {
                self.element.querySelector(self.options.selectorDatePickerInputTo).classList.add(self.options.classFocused);
              } else {
                self.element.querySelector(self.options.selectorDatePickerInputTo).classList.remove(self.options.classFocused);
              }
            }
          }
        },
        onMonthChange: function onMonthChange() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }

          if (!_onMonthChange || _onMonthChange.call.apply(_onMonthChange, [this].concat(args)) !== false) {
            self._updateClassNames(calendar);
          }
        },
        onYearChange: function onYearChange() {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }

          if (!_onYearChange || _onYearChange.call.apply(_onYearChange, [this].concat(args)) !== false) {
            self._updateClassNames(calendar);
          }
        },
        onOpen: function onOpen() {
          // An attempt to disable Flatpickr's focus tracking system,
          // which has adverse effect with our old set up with two `<input>`s or our latest setup with a hidden `<input>`
          self.shouldForceOpen = true;
          setTimeout(function () {
            self.shouldForceOpen = false;
          }, 0);

          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }

          if (!_onOpen || _onOpen.call.apply(_onOpen, [this].concat(args)) !== false) {
            self._updateClassNames(calendar);
          }
        },
        onValueUpdate: function onValueUpdate() {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }

          if ((!_onValueUpdate || _onValueUpdate.call.apply(_onValueUpdate, [this].concat(args)) !== false) && type === 'range') {
            self._updateInputFields(self.calendar.selectedDates, type);
          }
        },
        nextArrow: _this._rightArrowHTML(),
        prevArrow: _this._leftArrowHTML(),
        plugins: [].concat(date_picker_toConsumableArray(_this.options.plugins || []), [carbonFlatpickrMonthSelectPlugin(_this.options)])
      }));

      if (type === 'range') {
        _this._addInputLogic(_this.element.querySelector(_this.options.selectorDatePickerInputFrom), 0);

        _this._addInputLogic(_this.element.querySelector(_this.options.selectorDatePickerInputTo), 1);
      }

      _this.manage(on(_this.element.querySelector(_this.options.selectorDatePickerIcon), 'click', function () {
        calendar.open();
      }));

      _this._updateClassNames(calendar);

      if (type !== 'range') {
        _this._addInputLogic(date);
      }

      return calendar;
    };

    _this._addInputLogic = function (input, index) {
      if (!isNaN(index) && (index < 0 || index > 1)) {
        throw new RangeError("The index of <input> (".concat(index, ") is out of range."));
      }

      var inputField = input;

      _this.manage(on(inputField, 'change', function (evt) {
        if (evt.isTrusted || evt.detail && evt.detail.isNotFromFlatpickr) {
          var inputDate = _this.calendar.parseDate(inputField.value);

          if (inputDate && !isNaN(inputDate.valueOf())) {
            if (isNaN(index)) {
              _this.calendar.setDate(inputDate);
            } else {
              var selectedDates = _this.calendar.selectedDates;
              selectedDates[index] = inputDate;

              _this.calendar.setDate(selectedDates);
            }
          }
        }

        _this._updateClassNames(_this.calendar);
      })); // An attempt to temporarily set the `<input>` being edited as the one FlatPicker manages,
      // as FlatPicker attempts to take over `keydown` event handler on `document` to run on the date picker dropdown.


      _this.manage(on(inputField, 'keydown', function (evt) {
        var origInput = _this.calendar._input;
        _this.calendar._input = evt.target;
        setTimeout(function () {
          _this.calendar._input = origInput;
        });
      }));
    };

    _this._updateClassNames = function (_ref) {
      var calendarContainer = _ref.calendarContainer,
          selectedDates = _ref.selectedDates;

      if (calendarContainer) {
        calendarContainer.classList.add(_this.options.classCalendarContainer);
        calendarContainer.querySelector('.flatpickr-month').classList.add(_this.options.classMonth);
        calendarContainer.querySelector('.flatpickr-weekdays').classList.add(_this.options.classWeekdays);
        calendarContainer.querySelector('.flatpickr-days').classList.add(_this.options.classDays);
        date_picker_toArray(calendarContainer.querySelectorAll('.flatpickr-weekday')).forEach(function (item) {
          var currentItem = item;
          currentItem.innerHTML = currentItem.innerHTML.replace(/\s+/g, '');
          currentItem.classList.add(_this.options.classWeekday);
        });
        date_picker_toArray(calendarContainer.querySelectorAll('.flatpickr-day')).forEach(function (item) {
          item.classList.add(_this.options.classDay);

          if (item.classList.contains('today') && selectedDates.length > 0) {
            item.classList.add('no-border');
          } else if (item.classList.contains('today') && selectedDates.length === 0) {
            item.classList.remove('no-border');
          }
        });
      }
    };

    _this._updateInputFields = function (selectedDates, type) {
      if (type === 'range') {
        if (selectedDates.length === 2) {
          _this.element.querySelector(_this.options.selectorDatePickerInputFrom).value = _this._formatDate(selectedDates[0]);
          _this.element.querySelector(_this.options.selectorDatePickerInputTo).value = _this._formatDate(selectedDates[1]);
        } else if (selectedDates.length === 1) {
          _this.element.querySelector(_this.options.selectorDatePickerInputFrom).value = _this._formatDate(selectedDates[0]);
        }
      } else if (selectedDates.length === 1) {
        _this.element.querySelector(_this.options.selectorDatePickerInput).value = _this._formatDate(selectedDates[0]);
      }

      _this._updateClassNames(_this.calendar);
    };

    _this._formatDate = function (date) {
      return _this.calendar.formatDate(date, _this.calendar.config.dateFormat);
    };

    var _type = _this.element.getAttribute(_this.options.attribType);

    _this.calendar = _this._initDatePicker(_type);

    if (_this.calendar.calendarContainer) {
      _this.manage(on(_this.element, 'keydown', function (e) {
        if (e.which === 40) {
          e.preventDefault();

          (_this.calendar.selectedDateElem || _this.calendar.todayDateElem || _this.calendar.calendarContainer).focus();
        }
      }));

      _this.manage(on(_this.calendar.calendarContainer, 'keydown', function (e) {
        if (e.which === 9 && _type === 'range') {
          _this._updateClassNames(_this.calendar);

          _this.element.querySelector(_this.options.selectorDatePickerInputFrom).focus();
        }
      }));
    }

    return _this;
  }
  /**
   * Opens the date picker dropdown when this component gets focus.
   * Used only for range mode for now.
   * @private
   */


  date_picker_createClass(DatePicker, [{
    key: "_rightArrowHTML",
    value: function _rightArrowHTML() {
      return "\n      <svg\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        style=\"will-change: transform;\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        aria-hidden=\"true\">\n          <path d=\"M11 8l-5 5-.7-.7L9.6 8 5.3 3.7 6 3z\"></path>\n      </svg>";
    }
  }, {
    key: "_leftArrowHTML",
    value: function _leftArrowHTML() {
      return "\n      <svg\n        focusable=\"false\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        style=\"will-change: transform;\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"M5 8l5-5 .7.7L6.4 8l4.3 4.3-.7.7z\"></path>\n      </svg>";
    }
  }, {
    key: "release",
    value: function release() {
      if (this._rangeInput && this._rangeInput.parentNode) {
        this._rangeInput.parentNode.removeChild(this._rangeInput);
      }

      if (this.calendar) {
        try {
          this.calendar.destroy();
        } catch (err) {} // eslint-disable-line no-empty


        this.calendar = null;
      }

      return date_picker_get(date_picker_getPrototypeOf(DatePicker.prototype), "release", this).call(this);
    }
    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode DatePicker.create .create()}, or {@linkcode DatePicker.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode DatePicker.init .init()} works.
     * @property {string} selectorInit The CSS selector to find date picker UIs.
     */

  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-date-picker]',
        selectorDatePickerInput: '[data-date-picker-input]',
        selectorDatePickerInputFrom: '[data-date-picker-input-from]',
        selectorDatePickerInputTo: '[data-date-picker-input-to]',
        selectorDatePickerIcon: '[data-date-picker-icon]',
        selectorFlatpickrMonthYearContainer: '.flatpickr-current-month',
        selectorFlatpickrYearContainer: '.numInputWrapper',
        selectorFlatpickrCurrentMonth: '.cur-month',
        classCalendarContainer: "".concat(prefix, "--date-picker__calendar"),
        classMonth: "".concat(prefix, "--date-picker__month"),
        classWeekdays: "".concat(prefix, "--date-picker__weekdays"),
        classDays: "".concat(prefix, "--date-picker__days"),
        classWeekday: "".concat(prefix, "--date-picker__weekday"),
        classDay: "".concat(prefix, "--date-picker__day"),
        classFocused: "".concat(prefix, "--focused"),
        classVisuallyHidden: "".concat(prefix, "--visually-hidden"),
        classFlatpickrCurrentMonth: 'cur-month',
        attribType: 'data-date-picker-type',
        dateFormat: 'm/d/Y'
      };
    }
    /**
     * The map associating DOM element and date picker UI instance.
     * @type {WeakMap}
     */

  }]);

  DatePicker.components = new WeakMap();
  return DatePicker;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var date_picker = (date_picker_DatePicker);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/pagination/pagination.js
function pagination_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    pagination_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    pagination_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return pagination_typeof(obj);
}

function pagination_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function pagination_possibleConstructorReturn(self, call) {
  if (call && (pagination_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return pagination_assertThisInitialized(self);
}

function pagination_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function pagination_getPrototypeOf(o) {
  pagination_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return pagination_getPrototypeOf(o);
}

function pagination_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) pagination_setPrototypeOf(subClass, superClass);
}

function pagination_setPrototypeOf(o, p) {
  pagination_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return pagination_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var pagination_Pagination =
/*#__PURE__*/
function (_mixin) {
  pagination_inherits(Pagination, _mixin);
  /**
   * Pagination component.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @param {HTMLElement} element The element working as a pagination component.
   * @param {object} [options] The component options.
   * @property {string} [selectorInit] The CSS selector to find pagination components.
   * @property {string} [selectorItemsPerPageInput]
   *   The CSS selector to find the input that determines the number of items per page.
   * @property {string} [selectorPageNumberInput] The CSS selector to find the input that changes the page displayed.
   * @property {string} [selectorPageBackward] The CSS selector to find the button that goes back a page.
   * @property {string} [selectorPageForward] The CSS selector to find the button that goes forward a page.
   * @property {string} [eventItemsPerPage]
   *   The name of the custom event fired when a user changes the number of items per page.
   *   event.detail.value contains the number of items a user wishes to see.
   * @property {string} [eventPageNumber]
   *   The name of the custom event fired when a user inputs a specific page number.
   *   event.detail.value contains the value that the user input.
   * @property {string} [eventPageChange]
   *   The name of the custom event fired when a user goes forward or backward a page.
   *   event.detail.direction contains the direction a user wishes to go.
   */


  function Pagination(element, options) {
    var _this;

    pagination_classCallCheck(this, Pagination);

    _this = pagination_possibleConstructorReturn(this, pagination_getPrototypeOf(Pagination).call(this, element, options));

    _this._emitEvent = function (evtName, detail) {
      var event = new CustomEvent("".concat(evtName), {
        bubbles: true,
        cancelable: true,
        detail: detail
      });

      _this.element.dispatchEvent(event);
    };

    _this.manage(on(_this.element, 'click', function (evt) {
      if (eventMatches(evt, _this.options.selectorPageBackward)) {
        var detail = {
          initialEvt: evt,
          element: evt.target,
          direction: 'backward'
        };

        _this._emitEvent(_this.options.eventPageChange, detail);
      } else if (eventMatches(evt, _this.options.selectorPageForward)) {
        var _detail = {
          initialEvt: evt,
          element: evt.target,
          direction: 'forward'
        };

        _this._emitEvent(_this.options.eventPageChange, _detail);
      }
    }));

    _this.manage(on(_this.element, 'input', function (evt) {
      if (eventMatches(evt, _this.options.selectorItemsPerPageInput)) {
        var detail = {
          initialEvt: evt,
          element: evt.target,
          value: evt.target.value
        };

        _this._emitEvent(_this.options.eventItemsPerPage, detail);
      } else if (eventMatches(evt, _this.options.selectorPageNumberInput)) {
        var _detail2 = {
          initialEvt: evt,
          element: evt.target,
          value: evt.target.value
        };

        _this._emitEvent(_this.options.eventPageNumber, _detail2);
      }
    }));

    return _this;
  }
  /**
   * Dispatches a custom event
   * @param {string} evtName name of the event to be dispatched.
   * @param {object} detail contains the original event and any other necessary details.
   */


  Pagination.components = new WeakMap();
  Pagination.options = {
    selectorInit: '[data-pagination]',
    selectorItemsPerPageInput: '[data-items-per-page]',
    selectorPageNumberInput: '[data-page-number-input]',
    selectorPageBackward: '[data-page-backward]',
    selectorPageForward: '[data-page-forward]',
    eventItemsPerPage: 'itemsPerPage',
    eventPageNumber: 'pageNumber',
    eventPageChange: 'pageChange'
  };
  return Pagination;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var pagination = (pagination_Pagination);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/svg-toggle-class.js
function svg_toggle_class_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


function svgToggleClass(svg, name, forceAdd) {
  var list = svg.getAttribute('class').trim().split(/\s+/);
  var uniqueList = Object.keys(list.reduce(function (o, item) {
    return Object.assign(o, svg_toggle_class_defineProperty({}, item, 1));
  }, {}));
  var index = uniqueList.indexOf(name);
  var found = index >= 0;
  var add = forceAdd === undefined ? !found : forceAdd;

  if (found === !add) {
    if (add) {
      uniqueList.push(name);
    } else {
      uniqueList.splice(index, 1);
    }

    svg.setAttribute('class', uniqueList.join(' '));
  }
}

/* harmony default export */ var svg_toggle_class = (svgToggleClass);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/search/search.js
function search_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    search_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    search_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return search_typeof(obj);
}

function search_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function search_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function search_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) search_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) search_defineProperties(Constructor, staticProps);
  return Constructor;
}

function search_possibleConstructorReturn(self, call) {
  if (call && (search_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return search_assertThisInitialized(self);
}

function search_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function search_getPrototypeOf(o) {
  search_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return search_getPrototypeOf(o);
}

function search_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) search_setPrototypeOf(subClass, superClass);
}

function search_setPrototypeOf(o, p) {
  search_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return search_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











var search_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var search_Search =
/*#__PURE__*/
function (_mixin) {
  search_inherits(Search, _mixin);
  /**
   * Search with Options.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as the search component.
   * @param {object} [options] The component options
   * @property {string} [options.selectorInit]
   *   The selector to find search UIs with options.
   * @property {string} [options.selectorSearchView]
   *   The selector to find the search view icon containers.
   * @property {string} [options.selectorSearchInput]
   *   The selector to find the search input.
   * @property {string} [options.selectorClearIcon]
   *   The selector for the clear icon that clears the search box.
   * @property {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.
   * @property {string} [options.classClearHidden] The class used to hide the clear icon.
   * @property {string} [options.classLayoutHidden] The class used to hide nonselected layout view.
   */


  function Search(element, options) {
    var _this;

    search_classCallCheck(this, Search);

    _this = search_possibleConstructorReturn(this, search_getPrototypeOf(Search).call(this, element, options));

    var closeIcon = _this.element.querySelector(_this.options.selectorClearIcon);

    var input = _this.element.querySelector(_this.options.selectorSearchInput);

    if (!input) {
      throw new Error('Cannot find the search input.');
    }

    if (closeIcon) {
      _this.manage(on(closeIcon, 'click', function () {
        svg_toggle_class(closeIcon, _this.options.classClearHidden, true);
        input.value = '';
        input.focus();
      }));
    }

    _this.manage(on(_this.element, 'click', function (evt) {
      var toggleItem = eventMatches(evt, _this.options.selectorIconContainer);
      if (toggleItem) _this.toggleLayout(toggleItem);
    }));

    _this.manage(on(input, 'input', function (evt) {
      if (closeIcon) _this.showClear(evt.target.value, closeIcon);
    }));

    return _this;
  }
  /**
   * Toggles between the grid and list layout.
   * @param {HTMLElement} element The element contining the layout toggle.
   */


  search_createClass(Search, [{
    key: "toggleLayout",
    value: function toggleLayout(element) {
      var _this2 = this;

      search_toArray(element.querySelectorAll(this.options.selectorSearchView)).forEach(function (item) {
        item.classList.toggle(_this2.options.classLayoutHidden);
      });
    }
    /**
     * Toggles the clear icon visibility
     * @param {HTMLElement} value The element serving as the search input.
     * @param {HTMLElement} icon The element serving as close icon.
     */

  }, {
    key: "showClear",
    value: function showClear(value, icon) {
      svg_toggle_class(icon, this.options.classClearHidden, value.length === 0);
    }
    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode Search.create .create()}, or {@linkcode Search.init .init()},
     * properties in this object are overriden for the instance being created
     * and how {@linkcode Search.init .init()} works.
     * @member Search.options
     * @type {object}
     * @property {string} [options.selectorInit]
     *   The selector to find search UIs with options.
     * @property {string} [options.selectorSearchView]
     *   The selector to find the search view icon containers.
     * @property {string} [options.selectorSearchInput]
     *   The selector to find the search input.
     * @property {string} [options.selectorClearIcon]
     *   The selector for the clear icon that clears the search box.
     * @property {string} [options.selectorIconContainer] The data attribute selector for the icon layout container.
     * @property {string} [options.classClearHidden] The class used to hide the clear icon.
     * @property {string} [options.classLayoutHidden] The class used to hide nonselected layout view.
     */

  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-search]',
        selectorSearchView: '[data-search-view]',
        selectorSearchInput: ".".concat(prefix, "--search-input"),
        selectorClearIcon: ".".concat(prefix, "--search-close"),
        selectorIconContainer: ".".concat(prefix, "--search-button[data-search-toggle]"),
        classClearHidden: "".concat(prefix, "--search-close--hidden"),
        classLayoutHidden: "".concat(prefix, "--search-view--hidden")
      };
    }
    /**
     * The map associating DOM element and search instance.
     * @member Search.components
     * @type {WeakMap}
     */

  }]);

  Search.components = new WeakMap();
  return Search;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var search = (search_Search);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/accordion/accordion.js
function accordion_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    accordion_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    accordion_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return accordion_typeof(obj);
}

function accordion_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function accordion_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function accordion_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) accordion_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) accordion_defineProperties(Constructor, staticProps);
  return Constructor;
}

function accordion_possibleConstructorReturn(self, call) {
  if (call && (accordion_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return accordion_assertThisInitialized(self);
}

function accordion_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function accordion_getPrototypeOf(o) {
  accordion_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return accordion_getPrototypeOf(o);
}

function accordion_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) accordion_setPrototypeOf(subClass, superClass);
}

function accordion_setPrototypeOf(o, p) {
  accordion_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return accordion_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */










var accordion_Accordion =
/*#__PURE__*/
function (_mixin) {
  accordion_inherits(Accordion, _mixin);
  /**
   * Accordion.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as an accordion.
   */


  function Accordion(element, options) {
    var _this;

    accordion_classCallCheck(this, Accordion);

    _this = accordion_possibleConstructorReturn(this, accordion_getPrototypeOf(Accordion).call(this, element, options));

    _this.manage(on(_this.element, 'click', function (event) {
      var item = eventMatches(event, _this.options.selectorAccordionItem);

      if (item && !eventMatches(event, _this.options.selectorAccordionContent)) {
        _this._toggle(item);
      }
    }));
    /**
     *
     *  DEPRECATE in v8
     *
     *  Swapping to a button elemenet instead of a div
     *  automatically maps click events to keypress as well
     *  This event listener now is only added if user is using
     *  the older markup
     */


    if (!_this._checkIfButton()) {
      _this.manage(on(_this.element, 'keypress', function (event) {
        var item = eventMatches(event, _this.options.selectorAccordionItem);

        if (item && !eventMatches(event, _this.options.selectorAccordionContent)) {
          _this._handleKeypress(event);
        }
      }));
    }

    return _this;
  }

  accordion_createClass(Accordion, [{
    key: "_checkIfButton",
    value: function _checkIfButton() {
      return this.element.firstElementChild.firstElementChild.nodeName === 'BUTTON';
    }
    /**
     * Handles toggling of active state of accordion via keyboard
     * @param {Event} event The event triggering this method.
     */

  }, {
    key: "_handleKeypress",
    value: function _handleKeypress(event) {
      if (event.which === 13 || event.which === 32) {
        this._toggle(event.target);
      }
    }
  }, {
    key: "_toggle",
    value: function _toggle(element) {
      var heading = element.querySelector(this.options.selectorAccordionItemHeading);
      var expanded = heading.getAttribute('aria-expanded');

      if (expanded !== null) {
        heading.setAttribute('aria-expanded', expanded === 'true' ? 'false' : 'true');
      }

      element.classList.toggle(this.options.classActive);
    }
    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode NumberInput.create .create()}, or {@linkcode NumberInput.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode NumberInput.init .init()} works.
     * @property {string} selectorInit The CSS selector to find accordion UIs.
     */

  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-accordion]',
        selectorAccordionItem: ".".concat(prefix, "--accordion__item"),
        selectorAccordionItemHeading: ".".concat(prefix, "--accordion__heading"),
        selectorAccordionContent: ".".concat(prefix, "--accordion__content"),
        classActive: "".concat(prefix, "--accordion__item--active")
      };
    }
    /**
     * The map associating DOM element and accordion UI instance.
     * @type {WeakMap}
     */

  }]);

  Accordion.components = new WeakMap();
  return Accordion;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var accordion = (accordion_Accordion);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/copy-button/copy-button.js
function copy_button_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    copy_button_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    copy_button_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return copy_button_typeof(obj);
}

function copy_button_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function copy_button_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function copy_button_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) copy_button_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) copy_button_defineProperties(Constructor, staticProps);
  return Constructor;
}

function copy_button_possibleConstructorReturn(self, call) {
  if (call && (copy_button_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return copy_button_assertThisInitialized(self);
}

function copy_button_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function copy_button_getPrototypeOf(o) {
  copy_button_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return copy_button_getPrototypeOf(o);
}

function copy_button_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) copy_button_setPrototypeOf(subClass, superClass);
}

function copy_button_setPrototypeOf(o, p) {
  copy_button_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return copy_button_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var copy_button_CopyButton =
/*#__PURE__*/
function (_mixin) {
  copy_button_inherits(CopyButton, _mixin);
  /**
   * CopyBtn UI.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a copy button UI.
   */


  function CopyButton(element, options) {
    var _this;

    copy_button_classCallCheck(this, CopyButton);

    _this = copy_button_possibleConstructorReturn(this, copy_button_getPrototypeOf(CopyButton).call(this, element, options));

    _this.manage(on(_this.element, 'click', function () {
      return _this.handleClick();
    }));

    _this.manage(on(_this.element, 'animationend', function (event) {
      return _this.handleAnimationEnd(event);
    }));

    return _this;
  }
  /**
   * Cleanup animation classes
   */


  copy_button_createClass(CopyButton, [{
    key: "handleAnimationEnd",
    value: function handleAnimationEnd(event) {
      if (event.animationName === 'hide-feedback') {
        this.element.classList.remove(this.options.classAnimating);
        this.element.classList.remove(this.options.classFadeOut);
      }
    }
    /**
     * Show the feedback tooltip on click. Hide the feedback tooltip after specified timeout value.
     */

  }, {
    key: "handleClick",
    value: function handleClick() {
      var _this2 = this;

      var feedback = this.element.querySelector(this.options.feedbackTooltip);

      if (feedback) {
        feedback.classList.add(this.options.classShowFeedback);
        setTimeout(function () {
          feedback.classList.remove(_this2.options.classShowFeedback);
        }, this.options.timeoutValue);
      } else {
        this.element.classList.add(this.options.classAnimating);
        this.element.classList.add(this.options.classFadeIn);
        setTimeout(function () {
          _this2.element.classList.remove(_this2.options.classFadeIn);

          _this2.element.classList.add(_this2.options.classFadeOut);
        }, this.options.timeoutValue);
      }
    }
    /**
     * The map associating DOM element and copy button UI instance.
     * @member CopyBtn.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode CopyBtn.create .create()}, or {@linkcode CopyBtn.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode CopyBtn.init .init()} works.
     * @member CopyBtn.options
     * @type {object}
     * @property {string} selectorInit The data attribute to find copy button UIs.
     * @property {string} feedbackTooltip The data attribute to find feedback tooltip.
     * @property {string} classShowFeedback The CSS selector for showing the feedback tooltip.
     * @property {number} timeoutValue The specified timeout value before the feedback tooltip is hidden.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-copy-btn]',
        feedbackTooltip: '[data-feedback]',
        classShowFeedback: "".concat(prefix, "--btn--copy__feedback--displayed"),
        classAnimating: "".concat(prefix, "--copy-btn--animating"),
        classFadeIn: "".concat(prefix, "--copy-btn--fade-in"),
        classFadeOut: "".concat(prefix, "--copy-btn--fade-out"),
        timeoutValue: 2000
      };
    }
  }]);

  CopyButton.components = new WeakMap();
  return CopyButton;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var copy_button = (copy_button_CopyButton);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/notification/notification.js
function notification_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    notification_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    notification_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return notification_typeof(obj);
}

function notification_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function notification_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function notification_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) notification_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) notification_defineProperties(Constructor, staticProps);
  return Constructor;
}

function notification_possibleConstructorReturn(self, call) {
  if (call && (notification_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return notification_assertThisInitialized(self);
}

function notification_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function notification_getPrototypeOf(o) {
  notification_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return notification_getPrototypeOf(o);
}

function notification_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) notification_setPrototypeOf(subClass, superClass);
}

function notification_setPrototypeOf(o, p) {
  notification_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return notification_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var notification_Notification =
/*#__PURE__*/
function (_mixin) {
  notification_inherits(Notification, _mixin);
  /**
   * InlineNotification.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a InlineNotification.
   */


  function Notification(element, options) {
    var _this;

    notification_classCallCheck(this, Notification);

    _this = notification_possibleConstructorReturn(this, notification_getPrototypeOf(Notification).call(this, element, options));

    _this._changeState = function (state, callback) {
      if (state === 'delete-notification') {
        _this.element.parentNode.removeChild(_this.element);

        _this.release();
      }

      callback();
    };

    _this.button = element.querySelector(_this.options.selectorButton);

    if (_this.button) {
      _this.manage(on(_this.button, 'click', function (evt) {
        if (evt.currentTarget === _this.button) {
          _this.remove();
        }
      }));
    }

    return _this;
  }

  notification_createClass(Notification, [{
    key: "remove",
    value: function remove() {
      this.changeState('delete-notification');
    }
    /**
     * The map associating DOM element and accordion UI instance.
     * @type {WeakMap}
     */

  }]);

  Notification.components = new WeakMap();
  Notification.options = {
    selectorInit: '[data-notification]',
    selectorButton: '[data-notification-btn]',
    eventBeforeDeleteNotification: 'notification-before-delete',
    eventAfterDeleteNotification: 'notification-after-delete'
  };
  return Notification;
}(mixin(create_component, init_component_by_search, evented_state, mixins_handles));

/* harmony default export */ var notification = (notification_Notification);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/toolbar/toolbar.js
function toolbar_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    toolbar_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    toolbar_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return toolbar_typeof(obj);
}

function toolbar_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function toolbar_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function toolbar_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) toolbar_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) toolbar_defineProperties(Constructor, staticProps);
  return Constructor;
}

function toolbar_possibleConstructorReturn(self, call) {
  if (call && (toolbar_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return toolbar_assertThisInitialized(self);
}

function toolbar_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function toolbar_getPrototypeOf(o) {
  toolbar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return toolbar_getPrototypeOf(o);
}

function toolbar_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) toolbar_setPrototypeOf(subClass, superClass);
}

function toolbar_setPrototypeOf(o, p) {
  toolbar_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return toolbar_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */










var toolbar_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var toolbar_Toolbar =
/*#__PURE__*/
function (_mixin) {
  toolbar_inherits(Toolbar, _mixin);
  /**
   * Toolbar.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as an toolbar.
   */


  function Toolbar(element, options) {
    var _this;

    toolbar_classCallCheck(this, Toolbar);

    _this = toolbar_possibleConstructorReturn(this, toolbar_getPrototypeOf(Toolbar).call(this, element, options));

    if (!_this.element.dataset.tableTarget) {
      console.warn('There is no table bound to this toolbar!'); // eslint-disable-line no-console
    } else {
      var boundTable = _this.element.ownerDocument.querySelector(_this.element.dataset.tableTarget);

      var rowHeightBtns = _this.element.querySelector(_this.options.selectorRowHeight);

      if (rowHeightBtns) {
        _this.manage(on(rowHeightBtns, 'click', function (event) {
          _this._handleRowHeightChange(event, boundTable);
        })); // toArray(this.element.querySelectorAll(this.options.selectorRowHeight)).forEach((item) => {
        //   item.addEventListener('click', (event) => { this._handleRowHeightChange(event, boundTable); });
        // });

      }
    }

    _this.manage(on(_this.element.ownerDocument, 'keydown', function (evt) {
      _this._handleKeyDown(evt);
    }));

    _this.manage(on(_this.element.ownerDocument, 'click', function (evt) {
      _this._handleDocumentClick(evt);
    }));

    return _this;
  }
  /**
   * Handles toggling of active state of the toolbar search input
   * @param {Event} event The event triggering this method.
   */


  toolbar_createClass(Toolbar, [{
    key: "_handleDocumentClick",
    value: function _handleDocumentClick(event) {
      var _this2 = this;

      var searchInput = eventMatches(event, this.options.selectorSearch);
      var isOfSelfSearchInput = searchInput && this.element.contains(searchInput);

      if (isOfSelfSearchInput) {
        var shouldBeOpen = isOfSelfSearchInput && !this.element.classList.contains(this.options.classSearchActive);
        searchInput.classList.toggle(this.options.classSearchActive, shouldBeOpen);

        if (shouldBeOpen) {
          searchInput.querySelector('input').focus();
        }
      }

      var targetComponentElement = eventMatches(event, this.options.selectorInit);
      toolbar_toArray(this.element.ownerDocument.querySelectorAll(this.options.selectorSearch)).forEach(function (item) {
        if (!targetComponentElement || !targetComponentElement.contains(item)) {
          item.classList.remove(_this2.options.classSearchActive);
        }
      });
    }
    /**
     * Handles toggling of active state of the toolbar search input via the keyboard
     * @param {Event} event The event triggering this method.
     */

  }, {
    key: "_handleKeyDown",
    value: function _handleKeyDown(event) {
      var searchInput = eventMatches(event, this.options.selectorSearch);

      if (searchInput && event.which === 27) {
        searchInput.classList.remove(this.options.classSearchActive);
      }
    }
    /**
     * Handles toggling of the row height of the associated table
     * @param {Event} event The event triggering this method.
     * @param {HTMLElement} boundTable The table associated with the toolbar.
     */

  }, {
    key: "_handleRowHeightChange",
    value: function _handleRowHeightChange(event, boundTable) {
      var _event$currentTarget$ = event.currentTarget.querySelector('input:checked'),
          value = _event$currentTarget$.value;

      if (value === 'tall') {
        boundTable.classList.add(this.options.classTallRows);
      } else {
        boundTable.classList.remove(this.options.classTallRows);
      }
    }
    /**
     * The map associating DOM element and Toolbar UI instance.
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * properties in this object are overriden for the instance being created.
     * @property {string} selectorInit The CSS selector to find toolbar instances.
     * @property {string} selectorSearch The CSS selector to find search inputs in a toolbar.
     * @property {string} selectorRowHeight The CSS selector to find the row height inputs in a toolbar.
     * @property {string} classTallRows The CSS class for making table rows into tall rows.
     * @property {string} classSearchActive The CSS class the active state of the search input.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-toolbar]',
        selectorSearch: '[data-toolbar-search]',
        selectorRowHeight: '[data-row-height]',
        classTallRows: "".concat(prefix, "--responsive-table--tall"),
        classSearchActive: "".concat(prefix, "--toolbar-search--active")
      };
    }
  }]);

  Toolbar.components = new WeakMap();
  return Toolbar;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var toolbar = (toolbar_Toolbar);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/mixins/init-component-by-event.js
function init_component_by_event_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    init_component_by_event_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    init_component_by_event_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return init_component_by_event_typeof(obj);
}

function init_component_by_event_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function init_component_by_event_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function init_component_by_event_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) init_component_by_event_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) init_component_by_event_defineProperties(Constructor, staticProps);
  return Constructor;
}

function init_component_by_event_possibleConstructorReturn(self, call) {
  if (call && (init_component_by_event_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return init_component_by_event_assertThisInitialized(self);
}

function init_component_by_event_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function init_component_by_event_getPrototypeOf(o) {
  init_component_by_event_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return init_component_by_event_getPrototypeOf(o);
}

function init_component_by_event_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) init_component_by_event_setPrototypeOf(subClass, superClass);
}

function init_component_by_event_setPrototypeOf(o, p) {
  init_component_by_event_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return init_component_by_event_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */




/* harmony default export */ var init_component_by_event = (function (ToMix) {
  /**
   * Mix-in class to instantiate components upon events.
   * @class InitComponentByEvent
   */
  var InitComponentByEvent =
  /*#__PURE__*/
  function (_ToMix) {
    init_component_by_event_inherits(InitComponentByEvent, _ToMix);

    function InitComponentByEvent() {
      init_component_by_event_classCallCheck(this, InitComponentByEvent);

      return init_component_by_event_possibleConstructorReturn(this, init_component_by_event_getPrototypeOf(InitComponentByEvent).apply(this, arguments));
    }

    init_component_by_event_createClass(InitComponentByEvent, null, [{
      key: "init",

      /**
       * `true` suggests that this component is lazily initialized upon an action/event, etc.
       * @type {boolean}
       */

      /**
       * Instantiates this component in the given element.
       * If the given element indicates that it's an component of this class, instantiates it.
       * Otherwise, instantiates this component by clicking on this component in the given node.
       * @param {Node} target The DOM node to instantiate this component in. Should be a document or an element.
       * @param {object} [options] The component options.
       * @param {string} [options.selectorInit] The CSS selector to find this component.
       * @returns {Handle} The handle to remove the event listener to handle clicking.
       */
      value: function init() {
        var _this = this;

        var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var effectiveOptions = Object.assign(Object.create(this.options), options);

        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {
          throw new TypeError('DOM document or DOM element should be given to search for and initialize this widget.');
        }

        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {
          this.create(target, options);
        } else {
          // To work around non-bubbling `focus` event, use `focusin` event instead of it's available, and "capture mode" otherwise
          var hasFocusin = 'onfocusin' in (target.nodeType === Node.ELEMENT_NODE ? target.ownerDocument : target).defaultView;
          var handles = effectiveOptions.initEventNames.map(function (name) {
            var eventName = name === 'focus' && hasFocusin ? 'focusin' : name;
            return on(target, eventName, function (event) {
              var element = eventMatches(event, effectiveOptions.selectorInit); // Instantiated components handles events by themselves

              if (element && !_this.components.has(element)) {
                var component = _this.create(element, options);

                if (typeof component.createdByEvent === 'function') {
                  component.createdByEvent(event);
                }
              }
            }, name === 'focus' && !hasFocusin);
          });
          return {
            release: function release() {
              for (var handle = handles.pop(); handle; handle = handles.pop()) {
                handle.release();
              }
            }
          };
        }

        return '';
      }
    }]);

    InitComponentByEvent.forLazyInit = true;
    return InitComponentByEvent;
  }(ToMix);

  return InitComponentByEvent;
});
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/tooltip/tooltip.js
function tooltip_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    tooltip_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    tooltip_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return tooltip_typeof(obj);
}

function tooltip_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function tooltip_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function tooltip_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) tooltip_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) tooltip_defineProperties(Constructor, staticProps);
  return Constructor;
}

function tooltip_possibleConstructorReturn(self, call) {
  if (call && (tooltip_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return tooltip_assertThisInitialized(self);
}

function tooltip_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function tooltip_getPrototypeOf(o) {
  tooltip_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return tooltip_getPrototypeOf(o);
}

function tooltip_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) tooltip_setPrototypeOf(subClass, superClass);
}

function tooltip_setPrototypeOf(o, p) {
  tooltip_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return tooltip_setPrototypeOf(o, p);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        tooltip_defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function tooltip_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











/**
 * @param {Element} menuBody The menu body with the menu arrow.
 * @param {string} menuDirection Where the floating menu menu should be placed relative to the trigger button.
 * @returns {FloatingMenu~offset} The adjustment of the floating menu position, upon the position of the menu arrow.
 * @private
 */

var tooltip_getMenuOffset = function getMenuOffset(menuBody, menuDirection) {
  var _DIRECTION_LEFT$DIREC, _DIRECTION_LEFT$DIREC2;

  var arrowStyle = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody, ':before');
  var arrowPositionProp = (_DIRECTION_LEFT$DIREC = {}, tooltip_defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_LEFT, 'right'), tooltip_defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_TOP, 'bottom'), tooltip_defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_RIGHT, 'left'), tooltip_defineProperty(_DIRECTION_LEFT$DIREC, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC)[menuDirection];
  var menuPositionAdjustmentProp = (_DIRECTION_LEFT$DIREC2 = {}, tooltip_defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_LEFT, 'left'), tooltip_defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_TOP, 'top'), tooltip_defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_RIGHT, 'left'), tooltip_defineProperty(_DIRECTION_LEFT$DIREC2, DIRECTION_BOTTOM, 'top'), _DIRECTION_LEFT$DIREC2)[menuDirection];
  var values = [arrowPositionProp, 'border-bottom-width'].reduce(function (o, name) {
    return _objectSpread({}, o, tooltip_defineProperty({}, name, Number((/^([\d-.]+)px$/.exec(arrowStyle.getPropertyValue(name)) || [])[1])));
  }, {});
  var margin = 0;

  if (menuDirection !== DIRECTION_BOTTOM) {
    var style = menuBody.ownerDocument.defaultView.getComputedStyle(menuBody);
    margin = Number((/^([\d-.]+)px$/.exec(style.getPropertyValue('margin-top')) || [])[1]);
  }

  values[arrowPositionProp] = values[arrowPositionProp] || -6; // IE, etc.

  if (Object.keys(values).every(function (name) {
    return !isNaN(values[name]);
  })) {
    var arrowPosition = values[arrowPositionProp],
        borderBottomWidth = values['border-bottom-width'];
    return tooltip_defineProperty({
      left: 0,
      top: 0
    }, menuPositionAdjustmentProp, Math.sqrt(Math.pow(borderBottomWidth, 2) * 2) - arrowPosition + margin * (menuDirection === DIRECTION_TOP ? 2 : 1));
  }

  return undefined;
};
/**
 * Key codes for allowed keys that will trigger opening a tooltip
 * @type {Integer[]}
 * @private
 */


var allowedOpenKeys = [32, 13];

var tooltip_Tooltip =
/*#__PURE__*/
function (_mixin) {
  tooltip_inherits(Tooltip, _mixin);
  /**
   * Tooltip.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   */


  function Tooltip(element, options) {
    var _this;

    tooltip_classCallCheck(this, Tooltip);

    _this = tooltip_possibleConstructorReturn(this, tooltip_getPrototypeOf(Tooltip).call(this, element, options));
    _this._hasContextMenu = false;

    _this._hookOn(element);

    return _this;
  }
  /**
   * A flag to detect if `oncontextmenu` event is fired right before `focus`/`blur` events.
   * @type {boolean}
   */


  tooltip_createClass(Tooltip, [{
    key: "createdByEvent",

    /**
     * A method called when this widget is created upon events.
     * @param {Event} event The event triggering the creation.
     */
    value: function createdByEvent(event) {
      var relatedTarget = event.relatedTarget,
          type = event.type,
          which = event.which;

      if (type === 'click' || allowedOpenKeys.includes(which)) {
        this._handleClick({
          relatedTarget: relatedTarget,
          type: type,
          details: getLaunchingDetails(event)
        });
      }
    }
    /**
     * Changes the shown/hidden state.
     * @param {string} state The new state.
     * @param {object} detail The detail of the event trigging this action.
     * @param {Function} callback Callback called when change in state completes.
     */

  }, {
    key: "changeState",
    value: function changeState(state, detail, callback) {
      if (!this.tooltip) {
        var tooltip = this.element.ownerDocument.querySelector(this.element.getAttribute(this.options.attribTooltipTarget));

        if (!tooltip) {
          throw new Error('Cannot find the target tooltip.');
        } // Lazily create a component instance for tooltip


        this.tooltip = floating_menu.create(tooltip, {
          refNode: this.element,
          classShown: this.options.classShown,
          offset: this.options.objMenuOffset,
          contentNode: tooltip.querySelector(this.options.selectorContent)
        });

        this._hookOn(tooltip);

        this.children.push(this.tooltip);
      } // Delegates the action of changing state to the tooltip.
      // (And thus the before/after shown/hidden events are fired from the tooltip)


      this.tooltip.changeState(state, Object.assign(detail, {
        delegatorNode: this.element
      }), callback);
    }
    /**
     * Attaches event handlers to show the tooltip.
     * @param {Element} element The element to attach the events to.
     * @private
     */

  }, {
    key: "_hookOn",
    value: function _hookOn(element) {
      var _this2 = this;
      /**
       * Setup the _handleClick function for displaying a tooltip
       * @param {Event} evt - user initiated event
       * @param {Integer[]} [allowedKeys] - allowed key codes the user may press to open the tooltip
       * @private
       */


      var handleClickContextMenu = function handleClickContextMenu(evt, allowedKeys) {
        var relatedTarget = evt.relatedTarget,
            type = evt.type,
            which = evt.which; // Allow user to use `space` or `enter` to open tooltip

        if (typeof allowedKeys === 'undefined' || allowedKeys.includes(which)) {
          var hadContextMenu = _this2._hasContextMenu;
          _this2._hasContextMenu = type === 'contextmenu';

          _this2._handleClick({
            relatedTarget: relatedTarget,
            type: type,
            hadContextMenu: hadContextMenu,
            details: getLaunchingDetails(evt)
          });
        }
      };

      this.manage(on(element, 'click', handleClickContextMenu, false));

      if (this.element.tagName !== 'BUTTON') {
        this.manage(on(this.element, 'keydown', function (event) {
          handleClickContextMenu(event, allowedOpenKeys);
        }, false));
      }
    }
    /**
     * Handles click/focus events.
     * @param {object} params The parameters.
     * @param {Element} params.relatedTarget The element that focus went to. (For `blur` event)
     * @param {string} params.type The event type triggering this method.
     * @param {boolean} params.hadContextMenu
     * @param {object} params.details The event details.
     * @private
     */

  }, {
    key: "_handleClick",
    value: function _handleClick(_ref2) {
      var relatedTarget = _ref2.relatedTarget,
          type = _ref2.type,
          hadContextMenu = _ref2.hadContextMenu,
          details = _ref2.details;
      var state = {
        click: 'shown',
        keydown: 'shown',
        blur: 'hidden',
        touchleave: 'hidden',
        touchcancel: 'hidden'
      }[type];
      var shouldPreventClose;

      if (type === 'blur') {
        // Note: SVGElement in IE11 does not have `.contains()`
        var wentToSelf = relatedTarget && this.element.contains && this.element.contains(relatedTarget) || this.tooltip && this.tooltip.element.contains(relatedTarget);
        shouldPreventClose = hadContextMenu || wentToSelf;
      }

      if (!shouldPreventClose) {
        this.changeState(state, details);
      }
    }
  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-tooltip-trigger]',
        selectorContent: ".".concat(prefix, "--tooltip__content"),
        classShown: "".concat(prefix, "--tooltip--shown"),
        attribTooltipTarget: 'data-tooltip-target',
        objMenuOffset: tooltip_getMenuOffset,
        initEventNames: ['click', 'keydown']
      };
    }
  }]);

  Tooltip.components = new WeakMap();
  return Tooltip;
}(mixin(create_component, init_component_by_event, evented_show_hide_state, mixins_handles));

/* harmony default export */ var tooltip_tooltip = (tooltip_Tooltip);
// EXTERNAL MODULE: ./node_modules/lodash.debounce/index.js
var lodash_debounce = __webpack_require__("f7fe");
var lodash_debounce_default = /*#__PURE__*/__webpack_require__.n(lodash_debounce);

// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/tooltip/tooltip--simple.js
function tooltip_simple_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    tooltip_simple_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    tooltip_simple_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return tooltip_simple_typeof(obj);
}

function tooltip_simple_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function tooltip_simple_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function tooltip_simple_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) tooltip_simple_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) tooltip_simple_defineProperties(Constructor, staticProps);
  return Constructor;
}

function tooltip_simple_possibleConstructorReturn(self, call) {
  if (call && (tooltip_simple_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return tooltip_simple_assertThisInitialized(self);
}

function tooltip_simple_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function tooltip_simple_getPrototypeOf(o) {
  tooltip_simple_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return tooltip_simple_getPrototypeOf(o);
}

function tooltip_simple_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) tooltip_simple_setPrototypeOf(subClass, superClass);
}

function tooltip_simple_setPrototypeOf(o, p) {
  tooltip_simple_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return tooltip_simple_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











var tooltip_simple_TooltipSimple =
/*#__PURE__*/
function (_mixin) {
  tooltip_simple_inherits(TooltipSimple, _mixin);
  /**
   * Simple Tooltip.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element - The element functioning as a text field.
   */


  function TooltipSimple(element, options) {
    var _this;

    tooltip_simple_classCallCheck(this, TooltipSimple);

    _this = tooltip_simple_possibleConstructorReturn(this, tooltip_simple_getPrototypeOf(TooltipSimple).call(this, element, options));
    _this.tooltipFadeOut = lodash_debounce_default()(function () {
      var tooltipTriggerButton = _this.getTooltipTriggerButton();

      if (tooltipTriggerButton) {
        tooltipTriggerButton.classList.remove(_this.options.classTooltipVisible);
      }
    }, 100);

    _this.getTooltipTriggerButton = function () {
      return _this.element.matches(_this.options.selectorTriggerButton) ? _this.element : _this.element.querySelector(_this.options.selectorTriggerButton);
    };

    _this.allowTooltipVisibility = function (_ref) {
      var visible = _ref.visible;

      var tooltipTriggerButton = _this.getTooltipTriggerButton();

      if (!tooltipTriggerButton) {
        return;
      }

      if (visible) {
        tooltipTriggerButton.classList.remove(_this.options.classTooltipHidden);
      } else {
        tooltipTriggerButton.classList.add(_this.options.classTooltipHidden);
      }
    };

    _this.manage(on(_this.element.ownerDocument, 'keydown', function (event) {
      // ESC
      if (event.which === 27) {
        _this.allowTooltipVisibility({
          visible: false
        });

        var tooltipTriggerButton = _this.getTooltipTriggerButton();

        if (tooltipTriggerButton) {
          tooltipTriggerButton.classList.remove(_this.options.classTooltipVisible);
        }
      }
    }));

    _this.manage(on(_this.element, 'mouseenter', function () {
      _this.tooltipFadeOut.cancel();

      _this.allowTooltipVisibility({
        visible: true
      });

      var tooltipTriggerButton = _this.getTooltipTriggerButton();

      if (tooltipTriggerButton) {
        tooltipTriggerButton.classList.add(_this.options.classTooltipVisible);
      }
    }));

    _this.manage(on(_this.element, 'mouseleave', _this.tooltipFadeOut));

    _this.manage(on(_this.element, 'focusin', function (event) {
      if (eventMatches(event, _this.options.selectorTriggerButton)) {
        _this.allowTooltipVisibility({
          visible: true
        });
      }
    }));

    return _this;
  }

  tooltip_simple_createClass(TooltipSimple, null, [{
    key: "options",

    /**
     * The component options.
     *
     * If `options` is specified in the constructor,
     * {@linkcode TooltipSimple.create .create()},
     * or {@linkcode TooltipSimple.init .init()},
     * properties in this object are overriden for the instance being
     * created and how {@linkcode TooltipSimple.init .init()} works.
     * @property {string} selectorInit The CSS selector to find simple tooltip UIs.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-tooltip-definition],[data-tooltip-icon]',
        selectorTriggerButton: ".".concat(prefix, "--tooltip__trigger.").concat(prefix, "--tooltip--a11y"),
        classTooltipHidden: "".concat(prefix, "--tooltip--hidden"),
        classTooltipVisible: "".concat(prefix, "--tooltip--visible")
      };
    }
    /**
     * The map associating DOM element and simple tooltip UI instance.
     * @type {WeakMap}
     */

  }]);

  TooltipSimple.components = new WeakMap();
  return TooltipSimple;
}(mixin(create_component, init_component_by_search, mixins_handles));


// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/progress-indicator/progress-indicator.js
function progress_indicator_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    progress_indicator_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    progress_indicator_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return progress_indicator_typeof(obj);
}

function progress_indicator_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function progress_indicator_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function progress_indicator_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) progress_indicator_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) progress_indicator_defineProperties(Constructor, staticProps);
  return Constructor;
}

function progress_indicator_possibleConstructorReturn(self, call) {
  if (call && (progress_indicator_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return progress_indicator_assertThisInitialized(self);
}

function progress_indicator_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function progress_indicator_getPrototypeOf(o) {
  progress_indicator_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return progress_indicator_getPrototypeOf(o);
}

function progress_indicator_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) progress_indicator_setPrototypeOf(subClass, superClass);
}

function progress_indicator_setPrototypeOf(o, p) {
  progress_indicator_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return progress_indicator_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */







var progress_indicator_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var progress_indicator_ProgressIndicator =
/*#__PURE__*/
function (_mixin) {
  progress_indicator_inherits(ProgressIndicator, _mixin);
  /**
   * ProgressIndicator.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @param {HTMLElement} element The element representing the ProgressIndicator.
   * @param {object} [options] The component options.
   * @property {string} [options.selectorStepElement] The CSS selector to find step elements.
   * @property {string} [options.selectorCurrent] The CSS selector to find the current step element.
   * @property {string} [options.selectorIncomplete] The CSS class to find incomplete step elements.
   * @property {string} [options.selectorComplete] The CSS selector to find completed step elements.
   * @property {string} [options.classStep] The className for a step element.
   * @property {string} [options.classComplete] The className for a completed step element.
   * @property {string} [options.classCurrent] The className for the current step element.
   * @property {string} [options.classIncomplete] The className for a incomplete step element.
   */


  function ProgressIndicator(element, options) {
    var _this;

    progress_indicator_classCallCheck(this, ProgressIndicator);

    _this = progress_indicator_possibleConstructorReturn(this, progress_indicator_getPrototypeOf(ProgressIndicator).call(this, element, options));
    /**
     * The component state.
     * @type {object}
     */

    _this.state = {
      /**
       * The current step index.
       * @type {number}
       */
      currentIndex: _this.getCurrent().index,

      /**
       * Total number of steps.
       * @type {number}
       */
      totalSteps: _this.getSteps().length
    };

    _this.addOverflowTooltip();

    return _this;
  }
  /**
   * Returns all steps with details about element and index.
   */


  progress_indicator_createClass(ProgressIndicator, [{
    key: "getSteps",
    value: function getSteps() {
      return progress_indicator_toArray(this.element.querySelectorAll(this.options.selectorStepElement)).map(function (element, index) {
        return {
          element: element,
          index: index
        };
      });
    }
    /**
     * Returns current step; gives detail about element and index.
     */

  }, {
    key: "getCurrent",
    value: function getCurrent() {
      var currentEl = this.element.querySelector(this.options.selectorCurrent);
      return this.getSteps().filter(function (step) {
        return step.element === currentEl;
      })[0];
    }
    /**
     * Sets the current step.
     * * @param {Number} new step index or use default in `this.state.currentIndex`.
     */

  }, {
    key: "setCurrent",
    value: function setCurrent() {
      var _this2 = this;

      var newCurrentStep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state.currentIndex;
      var changed = false;

      if (newCurrentStep !== this.state.currentIndex) {
        this.state.currentIndex = newCurrentStep;
        changed = true;
      }

      if (changed) {
        this.getSteps().forEach(function (step) {
          if (step.index < newCurrentStep) {
            _this2._updateStep({
              element: step.element,
              className: _this2.options.classComplete,
              html: _this2._getSVGComplete()
            });
          }

          if (step.index === newCurrentStep) {
            _this2._updateStep({
              element: step.element,
              className: _this2.options.classCurrent,
              html: _this2._getCurrentSVG()
            });
          }

          if (step.index > newCurrentStep) {
            _this2._updateStep({
              element: step.element,
              className: _this2.options.classIncomplete,
              html: _this2._getIncompleteSVG()
            });
          }
        });
      }
    }
    /**
     * Update step with correct inline SVG and className
     * @param {object} args
     * @param {object} [args.element] target element
     * @param {object} [args.className] new className
     * @param {object} [args.html] new inline SVG to insert
     */

  }, {
    key: "_updateStep",
    value: function _updateStep(args) {
      var element = args.element,
          className = args.className,
          html = args.html;

      if (element.firstElementChild) {
        element.removeChild(element.firstElementChild);
      }

      if (!element.classList.contains(className)) {
        element.setAttribute('class', this.options.classStep);
        element.classList.add(className);
      }

      element.insertAdjacentHTML('afterbegin', html);
    }
    /**
     * Returns HTML string for an SVG used to represent a compelted step (checkmark)
     */

  }, {
    key: "_getSVGComplete",
    value: function _getSVGComplete() {
      return "<svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\">\n        <circle cx=\"12\" cy=\"12\" r=\"12\"></circle>\n        <polygon points=\"10.3 13.6 7.7 11 6.3 12.4 10.3 16.4 17.8 9 16.4 7.6\"></polygon>\n      </svg>";
    }
    /**
     * Returns HTML string for an SVG used to represent current step (circles, like a radio button, but not.)
     */

  }, {
    key: "_getCurrentSVG",
    value: function _getCurrentSVG() {
      return "<svg>\n        <circle cx=\"12\" cy=\"12\" r=\"12\"></circle>\n        <circle cx=\"12\" cy=\"12\" r=\"6\"></circle>\n      </svg>";
    }
    /**
     * Returns HTML string for an SVG used to represent incomple step (grey empty circle)
     */

  }, {
    key: "_getIncompleteSVG",
    value: function _getIncompleteSVG() {
      return "<svg>\n        <circle cx=\"12\" cy=\"12\" r=\"12\"></circle>\n      </svg>";
    }
  }, {
    key: "addOverflowTooltip",
    value: function addOverflowTooltip() {
      var _this3 = this;

      var stepLabels = progress_indicator_toArray(this.element.querySelectorAll(this.options.selectorLabel));
      var tooltips = progress_indicator_toArray(this.element.querySelectorAll(this.options.selectorTooltip));
      stepLabels.forEach(function (step) {
        if (step.scrollWidth > _this3.options.maxWidth) {
          step.classList.add(_this3.options.classOverflowLabel);
        }
      });
      tooltips.forEach(function (tooltip) {
        var childText = tooltip.querySelector(_this3.options.selectorTooltipText);

        if (childText.scrollHeight > _this3.options.tooltipMaxHeight) {
          tooltip.classList.add(_this3.options.classTooltipMulti);
        }
      });
    }
  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode ProgressIndicator.create .create()}, or {@linkcode ProgressIndicator.init .init()},
     * properties in this object are overriden for the instance being created.
     * @member ProgressIndicator.options
     * @type {object}
     * @property {string} selectorInit The CSS selector to find content switcher button set.
     * @property {string} [selectorStepElement] The CSS selector to find step elements.
     * @property {string} [selectorCurrent] The CSS selector to find the current step element.
     * @property {string} [selectorIncomplete] The CSS class to find incomplete step elements.
     * @property {string} [selectorComplete] The CSS selector to find completed step elements.
     * @property {string} [classStep] The className for a step element.
     * @property {string} [classComplete] The className for a completed step element.
     * @property {string} [classCurrent] The className for the current step element.
     * @property {string} [classIncomplete] The className for a incomplete step element.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-progress]',
        selectorStepElement: ".".concat(prefix, "--progress-step"),
        selectorCurrent: ".".concat(prefix, "--progress-step--current"),
        selectorIncomplete: ".".concat(prefix, "--progress-step--incomplete"),
        selectorComplete: ".".concat(prefix, "--progress-step--complete"),
        selectorLabel: ".".concat(prefix, "--progress-label"),
        selectorTooltip: ".".concat(prefix, "--tooltip"),
        selectorTooltipText: ".".concat(prefix, "--tooltip__text"),
        classStep: "".concat(prefix, "--progress-step"),
        classComplete: "".concat(prefix, "--progress-step--complete"),
        classCurrent: "".concat(prefix, "--progress-step--current"),
        classIncomplete: "".concat(prefix, "--progress-step--incomplete"),
        classOverflowLabel: "".concat(prefix, "--progress-label-overflow"),
        classTooltipMulti: "".concat(prefix, "--tooltip_multi"),
        maxWidth: 87,
        tooltipMaxHeight: 21
      };
    }
  }]);

  ProgressIndicator.components = new WeakMap();
  return ProgressIndicator;
}(mixin(create_component, init_component_by_search));

/* harmony default export */ var progress_indicator = (progress_indicator_ProgressIndicator);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/structured-list/structured-list.js
function structured_list_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    structured_list_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    structured_list_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return structured_list_typeof(obj);
}

function structured_list_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function structured_list_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function structured_list_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) structured_list_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) structured_list_defineProperties(Constructor, staticProps);
  return Constructor;
}

function structured_list_possibleConstructorReturn(self, call) {
  if (call && (structured_list_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return structured_list_assertThisInitialized(self);
}

function structured_list_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function structured_list_getPrototypeOf(o) {
  structured_list_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return structured_list_getPrototypeOf(o);
}

function structured_list_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) structured_list_setPrototypeOf(subClass, superClass);
}

function structured_list_setPrototypeOf(o, p) {
  structured_list_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return structured_list_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */










var structured_list_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var structured_list_StructuredList =
/*#__PURE__*/
function (_mixin) {
  structured_list_inherits(StructuredList, _mixin);
  /**
   * StructuredList
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The root element of tables
   * @param {object} [options] the... options
   * @param {string} [options.selectorInit] selector initialization
   * @param {string} [options.selectorRow] css selector for selected row
   */


  function StructuredList(element, options) {
    var _this;

    structured_list_classCallCheck(this, StructuredList);

    _this = structured_list_possibleConstructorReturn(this, structured_list_getPrototypeOf(StructuredList).call(this, element, options));

    _this.manage(on(_this.element, 'keydown', function (evt) {
      if (evt.which === 37 || evt.which === 38 || evt.which === 39 || evt.which === 40) {
        _this._handleKeydownArrow(evt);
      }

      if (evt.which === 13 || evt.which === 32) {
        _this._handleKeydownChecked(evt);
      }
    }));

    _this.manage(on(_this.element, 'click', function (evt) {
      _this._handleClick(evt);
    }));

    return _this;
  }

  structured_list_createClass(StructuredList, [{
    key: "_direction",
    value: function _direction(evt) {
      return {
        37: -1,
        // backward
        38: -1,
        // backward
        39: 1,
        // forward
        40: 1 // forward

      }[evt.which];
    }
  }, {
    key: "_nextIndex",
    value: function _nextIndex(array, arrayItem, direction) {
      return array.indexOf(arrayItem) + direction; // returns -1, 0, 1, 2, 3, 4...
    }
  }, {
    key: "_getInput",
    value: function _getInput(index) {
      var rows = structured_list_toArray(this.element.querySelectorAll(this.options.selectorRow));
      return this.element.ownerDocument.querySelector(this.options.selectorListInput(rows[index].getAttribute('for')));
    }
  }, {
    key: "_handleInputChecked",
    value: function _handleInputChecked(index) {
      var rows = this.element.querySelectorAll(this.options.selectorRow);
      var input = this.getInput(index) || rows[index].querySelector('input');
      input.checked = true;
    }
  }, {
    key: "_handleClick",
    value: function _handleClick(evt) {
      var _this2 = this;

      var selectedRow = eventMatches(evt, this.options.selectorRow);
      structured_list_toArray(this.element.querySelectorAll(this.options.selectorRow)).forEach(function (row) {
        return row.classList.remove(_this2.options.classActive);
      });

      if (selectedRow) {
        selectedRow.classList.add(this.options.classActive);
      }
    } // Handle Enter or Space keydown events for selecting <label> rows

  }, {
    key: "_handleKeydownChecked",
    value: function _handleKeydownChecked(evt) {
      var _this3 = this;

      evt.preventDefault(); // prevent spacebar from scrolling page

      var selectedRow = eventMatches(evt, this.options.selectorRow);
      structured_list_toArray(this.element.querySelectorAll(this.options.selectorRow)).forEach(function (row) {
        return row.classList.remove(_this3.options.classActive);
      });

      if (selectedRow) {
        selectedRow.classList.add(this.options.classActive);
        var input = selectedRow.querySelector(this.options.selectorListInput(selectedRow.getAttribute('for'))) || selectedRow.querySelector('input');
        input.checked = true;
      }
    } // Handle up and down keydown events for selecting <label> rows

  }, {
    key: "_handleKeydownArrow",
    value: function _handleKeydownArrow(evt) {
      var _this4 = this;

      evt.preventDefault(); // prevent arrow keys from scrolling

      var selectedRow = eventMatches(evt, this.options.selectorRow);

      var direction = this._direction(evt);

      if (direction && selectedRow !== undefined) {
        var rows = structured_list_toArray(this.element.querySelectorAll(this.options.selectorRow));
        rows.forEach(function (row) {
          return row.classList.remove(_this4.options.classActive);
        });
        var firstIndex = 0;

        var nextIndex = this._nextIndex(rows, selectedRow, direction);

        var lastIndex = rows.length - 1;

        var getSelectedIndex = function getSelectedIndex() {
          switch (nextIndex) {
            case -1:
              return lastIndex;

            case rows.length:
              return firstIndex;

            default:
              return nextIndex;
          }
        };

        var selectedIndex = getSelectedIndex();
        rows[selectedIndex].classList.add(this.options.classActive);
        rows[selectedIndex].focus();

        this._handleInputChecked(selectedIndex);
      }
    }
  }], [{
    key: "options",
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-structured-list]',
        selectorRow: "[data-structured-list] .".concat(prefix, "--structured-list-tbody > label.").concat(prefix, "--structured-list-row"),
        selectorListInput: function selectorListInput(id) {
          return "#".concat(id, ".").concat(prefix, "--structured-list-input");
        },
        classActive: "".concat(prefix, "--structured-list-row--selected")
      };
    }
  }]);

  StructuredList.components = new WeakMap();
  return StructuredList;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var structured_list = (structured_list_StructuredList);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/slider/slider.js
function slider_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    slider_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    slider_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return slider_typeof(obj);
}

function slider_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function slider_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function slider_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) slider_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) slider_defineProperties(Constructor, staticProps);
  return Constructor;
}

function slider_possibleConstructorReturn(self, call) {
  if (call && (slider_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return slider_assertThisInitialized(self);
}

function slider_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function slider_getPrototypeOf(o) {
  slider_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return slider_getPrototypeOf(o);
}

function slider_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) slider_setPrototypeOf(subClass, superClass);
}

function slider_setPrototypeOf(o, p) {
  slider_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return slider_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */










var slider_Slider =
/*#__PURE__*/
function (_mixin) {
  slider_inherits(Slider, _mixin);
  /**
   * Slider.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as an slider.
   */


  function Slider(element, options) {
    var _this;

    slider_classCallCheck(this, Slider);

    _this = slider_possibleConstructorReturn(this, slider_getPrototypeOf(Slider).call(this, element, options));

    _this._changeState = function (state, detail, callback) {
      callback();
    };

    _this.sliderActive = false;
    _this.dragging = false;
    _this.track = _this.element.querySelector(_this.options.selectorTrack);
    _this.filledTrack = _this.element.querySelector(_this.options.selectorFilledTrack);
    _this.thumb = _this.element.querySelector(_this.options.selectorThumb);
    _this.input = _this.element.querySelector(_this.options.selectorInput);

    if (_this.element.dataset.sliderInputBox) {
      _this.boundInput = _this.element.ownerDocument.querySelector(_this.element.dataset.sliderInputBox);

      _this._updateInput();

      _this.manage(on(_this.boundInput, 'change', function (evt) {
        _this.setValue(evt.target.value);
      }));

      _this.manage(on(_this.boundInput, 'focus', function (evt) {
        evt.target.select();
      })); // workaround for safari


      _this.manage(on(_this.boundInput, 'mouseup', function (evt) {
        evt.preventDefault();
      }));
    }

    _this._updatePosition();

    _this.manage(on(_this.thumb, 'mousedown', function () {
      _this.sliderActive = true;
    }));

    _this.manage(on(_this.element.ownerDocument, 'mouseup', function () {
      _this.sliderActive = false;
    }));

    _this.manage(on(_this.element.ownerDocument, 'mousemove', function (evt) {
      var disabled = _this.element.classList.contains(_this.options.classDisabled);

      if (_this.sliderActive === true && !disabled) {
        _this._updatePosition(evt);
      }
    }));

    _this.manage(on(_this.thumb, 'keydown', function (evt) {
      var disabled = _this.element.classList.contains(_this.options.classDisabled);

      if (!disabled) {
        _this._updatePosition(evt);
      }
    }));

    _this.manage(on(_this.track, 'click', function (evt) {
      var disabled = _this.element.classList.contains(_this.options.classDisabled);

      if (!disabled) {
        _this._updatePosition(evt);
      }
    }));

    return _this;
  }

  slider_createClass(Slider, [{
    key: "_updatePosition",
    value: function _updatePosition(evt) {
      var _this2 = this;

      var _this$_calcValue = this._calcValue(evt),
          left = _this$_calcValue.left,
          newValue = _this$_calcValue.newValue;

      if (this.dragging) {
        return;
      }

      this.dragging = true;
      requestAnimationFrame(function () {
        _this2.dragging = false;
        _this2.thumb.style.left = "".concat(left, "%");
        _this2.filledTrack.style.transform = "translate(0%, -50%) scaleX(".concat(left / 100, ")");
        _this2.input.value = newValue;

        _this2._updateInput();

        _this2.changeState('slider-value-change', {
          value: newValue
        });
      });
    }
  }, {
    key: "_calcValue",
    value: function _calcValue(evt) {
      var _this$getInputProps = this.getInputProps(),
          value = _this$getInputProps.value,
          min = _this$getInputProps.min,
          max = _this$getInputProps.max,
          step = _this$getInputProps.step;

      var range = max - min;
      var valuePercentage = (value - min) / range * 100;
      var left;
      var newValue;
      left = valuePercentage;
      newValue = value;

      if (evt) {
        var type = evt.type;

        if (type === 'keydown') {
          var direction = {
            40: -1,
            // decreasing
            37: -1,
            // decreasing
            38: 1,
            // increasing
            39: 1 // increasing

          }[evt.which];

          if (direction !== undefined) {
            var multiplier = evt.shiftKey === true ? range / step / this.options.stepMultiplier : 1;
            var stepMultiplied = step * multiplier;
            var stepSize = stepMultiplied / range * 100;
            left = valuePercentage + stepSize * direction;
            newValue = Number(value) + stepMultiplied * direction;
          }
        }

        if (type === 'mousemove' || type === 'click') {
          if (type === 'click') {
            this.element.querySelector(this.options.selectorThumb).classList.add(this.options.classThumbClicked);
          } else {
            this.element.querySelector(this.options.selectorThumb).classList.remove(this.options.classThumbClicked);
          }

          var track = this.track.getBoundingClientRect();
          var unrounded = (evt.clientX - track.left) / track.width;
          var rounded = Math.round(range * unrounded / step) * step;
          left = rounded / range * 100;
          newValue = rounded + min;
        }
      }

      if (newValue <= Number(min)) {
        left = 0;
        newValue = min;
      }

      if (newValue >= Number(max)) {
        left = 100;
        newValue = max;
      }

      return {
        left: left,
        newValue: newValue
      };
    }
  }, {
    key: "_updateInput",
    value: function _updateInput() {
      if (this.boundInput) {
        this.boundInput.value = this.input.value;
      }
    }
  }, {
    key: "getInputProps",
    value: function getInputProps() {
      var values = {
        value: Number(this.input.value),
        min: Number(this.input.min),
        max: Number(this.input.max),
        step: this.input.step ? Number(this.input.step) : 1
      };
      return values;
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this.input.value = value;

      this._updatePosition();
    }
  }, {
    key: "stepUp",
    value: function stepUp() {
      this.input.stepUp();

      this._updatePosition();
    }
  }, {
    key: "stepDown",
    value: function stepDown() {
      this.input.stepDown();

      this._updatePosition();
    }
    /**
     * The map associating DOM element and Slider UI instance.
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * properties in this object are overriden for the instance being created.
     * @property {string} selectorInit The CSS selector to find slider instances.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-slider]',
        selectorTrack: ".".concat(prefix, "--slider__track"),
        selectorFilledTrack: ".".concat(prefix, "--slider__filled-track"),
        selectorThumb: ".".concat(prefix, "--slider__thumb"),
        selectorInput: ".".concat(prefix, "--slider__input"),
        classDisabled: "".concat(prefix, "--slider--disabled"),
        classThumbClicked: "".concat(prefix, "--slider__thumb--clicked"),
        eventBeforeSliderValueChange: 'slider-before-value-change',
        eventAfterSliderValueChange: 'slider-after-value-change',
        stepMultiplier: 4
      };
    }
  }]);

  Slider.components = new WeakMap();
  return Slider;
}(mixin(create_component, init_component_by_search, evented_state, mixins_handles));

/* harmony default export */ var slider = (slider_Slider);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/tile/tile.js
function tile_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    tile_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    tile_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return tile_typeof(obj);
}

function tile_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function tile_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function tile_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) tile_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) tile_defineProperties(Constructor, staticProps);
  return Constructor;
}

function tile_possibleConstructorReturn(self, call) {
  if (call && (tile_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return tile_assertThisInitialized(self);
}

function tile_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function tile_get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    tile_get = Reflect.get;
  } else {
    tile_get = function _get(target, property, receiver) {
      var base = tile_superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return tile_get(target, property, receiver || target);
}

function tile_superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = tile_getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function tile_getPrototypeOf(o) {
  tile_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return tile_getPrototypeOf(o);
}

function tile_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) tile_setPrototypeOf(subClass, superClass);
}

function tile_setPrototypeOf(o, p) {
  tile_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return tile_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */








var tile_Tile =
/*#__PURE__*/
function (_mixin) {
  tile_inherits(Tile, _mixin);
  /**
   * Tile.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @param {HTMLElement} element The element working as an Tile.
   */


  function Tile(element, options) {
    var _this;

    tile_classCallCheck(this, Tile);

    _this = tile_possibleConstructorReturn(this, tile_getPrototypeOf(Tile).call(this, element, options));

    _this._getClass = function (type) {
      var typeObj = {
        expandable: _this.options.classExpandedTile,
        clickable: _this.options.classClickableTile,
        selectable: _this.options.classSelectableTile
      };
      return typeObj[type];
    };

    _this._hookActions = function (tileClass) {
      var isExpandable = _this.tileType === 'expandable';

      if (isExpandable) {
        var aboveTheFold = _this.element.querySelector(_this.options.selectorAboveTheFold);

        var getStyle = _this.element.ownerDocument.defaultView.getComputedStyle(_this.element, null);

        var tilePaddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);
        var tilePaddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);
        var tilePadding = tilePaddingTop + tilePaddingBottom;

        if (aboveTheFold) {
          _this.tileHeight = _this.element.getBoundingClientRect().height;
          _this.atfHeight = aboveTheFold.getBoundingClientRect().height + tilePadding;
          _this.element.style.maxHeight = "".concat(_this.atfHeight, "px");
        }

        if (_this.element.classList.contains(_this.options.classExpandedTile)) {
          _this._setTileHeight();
        }
      }

      _this.element.addEventListener('click', function (evt) {
        var input = eventMatches(evt, _this.options.selectorTileInput);

        if (!input) {
          _this.element.classList.toggle(tileClass);
        }

        if (isExpandable) {
          _this._setTileHeight();
        }
      });

      _this.element.addEventListener('keydown', function (evt) {
        var input = _this.element.querySelector(_this.options.selectorTileInput);

        if (input) {
          if (evt.which === 13 || evt.which === 32) {
            if (!isExpandable) {
              _this.element.classList.toggle(tileClass);

              input.checked = !input.checked;
            }
          }
        }
      });
    };

    _this._setTileHeight = function () {
      var isExpanded = _this.element.classList.contains(_this.options.classExpandedTile);

      _this.element.style.maxHeight = isExpanded ? "".concat(_this.tileHeight, "px") : "".concat(_this.atfHeight, "px");
    };

    _this.tileType = _this.element.dataset.tile;
    _this.tileHeight = 0; // Tracks expandable tile height

    _this.atfHeight = 0; // Tracks above the fold height

    _this._hookActions(_this._getClass(_this.tileType));

    return _this;
  }

  tile_createClass(Tile, [{
    key: "release",
    value: function release() {
      tile_get(tile_getPrototypeOf(Tile.prototype), "release", this).call(this);
    }
    /**
     * The map associating DOM element and Tile UI instance.
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * properties in this object are overriden for the instance being created.
     * @property {string} selectorInit The CSS selector to find Tile instances.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-tile]',
        selectorAboveTheFold: '[data-tile-atf]',
        selectorTileInput: '[data-tile-input]',
        classExpandedTile: "".concat(prefix, "--tile--is-expanded"),
        classClickableTile: "".concat(prefix, "--tile--is-clicked"),
        classSelectableTile: "".concat(prefix, "--tile--is-selected")
      };
    }
  }]);

  Tile.components = new WeakMap();
  return Tile;
}(mixin(create_component, init_component_by_search));

/* harmony default export */ var tile = (tile_Tile);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/code-snippet/code-snippet.js
function code_snippet_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    code_snippet_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    code_snippet_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return code_snippet_typeof(obj);
}

function code_snippet_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function code_snippet_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function code_snippet_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) code_snippet_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) code_snippet_defineProperties(Constructor, staticProps);
  return Constructor;
}

function code_snippet_possibleConstructorReturn(self, call) {
  if (call && (code_snippet_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return code_snippet_assertThisInitialized(self);
}

function code_snippet_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function code_snippet_getPrototypeOf(o) {
  code_snippet_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return code_snippet_getPrototypeOf(o);
}

function code_snippet_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) code_snippet_setPrototypeOf(subClass, superClass);
}

function code_snippet_setPrototypeOf(o, p) {
  code_snippet_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return code_snippet_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */








var code_snippet_CodeSnippet =
/*#__PURE__*/
function (_mixin) {
  code_snippet_inherits(CodeSnippet, _mixin);
  /**
   * CodeSnippet UI.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a CodeSnippet UI.
   */


  function CodeSnippet(element, options) {
    var _this;

    code_snippet_classCallCheck(this, CodeSnippet);

    _this = code_snippet_possibleConstructorReturn(this, code_snippet_getPrototypeOf(CodeSnippet).call(this, element, options));

    _this._initCodeSnippet();

    _this.element.querySelector(_this.options.classExpandBtn).addEventListener('click', function (evt) {
      return _this._handleClick(evt);
    });

    return _this;
  }

  code_snippet_createClass(CodeSnippet, [{
    key: "_handleClick",
    value: function _handleClick() {
      var expandBtn = this.element.querySelector(this.options.classExpandText);
      this.element.classList.toggle(this.options.classExpanded);

      if (this.element.classList.contains(this.options.classExpanded)) {
        expandBtn.textContent = expandBtn.getAttribute(this.options.attribShowLessText);
      } else {
        expandBtn.textContent = expandBtn.getAttribute(this.options.attribShowMoreText);
      }
    }
  }, {
    key: "_initCodeSnippet",
    value: function _initCodeSnippet() {
      var expandBtn = this.element.querySelector(this.options.classExpandText);

      if (!expandBtn) {
        throw new TypeError('Cannot find the expand button.');
      }

      expandBtn.textContent = expandBtn.getAttribute(this.options.attribShowMoreText);

      if (this.element.offsetHeight < this.options.minHeight) {
        this.element.classList.add(this.options.classHideExpand);
      }
    }
    /**
     * The map associating DOM element and code snippet UI instance.
     * @member CodeSnippet.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode CodeSnippet.create .create()},
     * or {@linkcode CodeSnippet.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode CodeSnippet.init .init()} works.
     * @member CodeSnippet.options
     * @type {object}
     * @property {string} selectorInit The data attribute to find code snippet UIs.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-code-snippet]',
        attribShowMoreText: 'data-show-more-text',
        attribShowLessText: 'data-show-less-text',
        minHeight: 288,
        classExpanded: "".concat(prefix, "--snippet--expand"),
        classExpandBtn: ".".concat(prefix, "--snippet-btn--expand"),
        classExpandText: ".".concat(prefix, "--snippet-btn--text"),
        classHideExpand: "".concat(prefix, "--snippet-btn--expand--hide")
      };
    }
  }]);

  CodeSnippet.components = new WeakMap();
  return CodeSnippet;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var code_snippet = (code_snippet_CodeSnippet);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/text-input/text-input.js
function text_input_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    text_input_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    text_input_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return text_input_typeof(obj);
}

function text_input_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function text_input_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function text_input_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) text_input_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) text_input_defineProperties(Constructor, staticProps);
  return Constructor;
}

function text_input_possibleConstructorReturn(self, call) {
  if (call && (text_input_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return text_input_assertThisInitialized(self);
}

function text_input_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function text_input_getPrototypeOf(o) {
  text_input_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return text_input_getPrototypeOf(o);
}

function text_input_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) text_input_setPrototypeOf(subClass, superClass);
}

function text_input_setPrototypeOf(o, p) {
  text_input_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return text_input_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */










var text_input_TextInput =
/*#__PURE__*/
function (_mixin) {
  text_input_inherits(TextInput, _mixin);
  /**
   * Text Input.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element - The element functioning as a text field.
   */


  function TextInput(_element, options) {
    var _this;

    text_input_classCallCheck(this, TextInput);

    _this = text_input_possibleConstructorReturn(this, text_input_getPrototypeOf(TextInput).call(this, _element, options));

    _this._setIconVisibility = function (_ref) {
      var iconVisibilityOn = _ref.iconVisibilityOn,
          iconVisibilityOff = _ref.iconVisibilityOff,
          passwordIsVisible = _ref.passwordIsVisible,
          selectorPasswordVisibilityTooltip = _ref.selectorPasswordVisibilityTooltip;

      if (passwordIsVisible) {
        iconVisibilityOn.setAttribute('hidden', true);
        iconVisibilityOff.removeAttribute('hidden');
        selectorPasswordVisibilityTooltip.textContent = 'Hide password';
        return;
      }

      iconVisibilityOn.removeAttribute('hidden');
      iconVisibilityOff.setAttribute('hidden', true);
      selectorPasswordVisibilityTooltip.textContent = 'Show password';
    };

    _this._toggle = function (_ref2) {
      var element = _ref2.element,
          button = _ref2.button; // toggle action must come before querying the classList

      element.classList.toggle(_this.options.passwordIsVisible);
      var passwordIsVisible = element.classList.contains(_this.options.passwordIsVisible);
      var iconVisibilityOn = button.querySelector(_this.options.svgIconVisibilityOn);
      var iconVisibilityOff = button.querySelector(_this.options.svgIconVisibilityOff);
      var input = element.querySelector(_this.options.selectorPasswordField);
      var selectorPasswordVisibilityTooltip = element.querySelector(_this.options.selectorPasswordVisibilityTooltip);

      _this._setIconVisibility({
        iconVisibilityOn: iconVisibilityOn,
        iconVisibilityOff: iconVisibilityOff,
        passwordIsVisible: passwordIsVisible,
        selectorPasswordVisibilityTooltip: selectorPasswordVisibilityTooltip
      });

      input.type = passwordIsVisible ? 'text' : 'password';
    };

    _this.manage(on(_this.element, 'click', function (event) {
      var toggleVisibilityButton = eventMatches(event, _this.options.selectorPasswordVisibilityButton);

      if (toggleVisibilityButton) {
        _this._toggle({
          element: _element,
          button: toggleVisibilityButton
        });
      }
    }));

    return _this;
  }
  /**
   *
   * @param {object} obj - Object containing selectors and visibility status
   * @param {HTMLElement} obj.iconVisibilityOn - The element functioning as
   * the SVG icon for visibility on
   * @param {HTMLElement} obj.iconVisibilityOff - The element functioning as
   * the SVG icon for visibility off
   * @param {boolean} obj.passwordIsVisible - The visibility of the password in the
   * input field
   */


  text_input_createClass(TextInput, null, [{
    key: "options",

    /**
     * The component options.
     *
     * If `options` is specified in the constructor,
     * {@linkcode TextInput.create .create()},
     * or {@linkcode TextInput.init .init()},
     * properties in this object are overriden for the instance being
     * created and how {@linkcode TextInput.init .init()} works.
     * @property {string} selectorInit The CSS selector to find text input UIs.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-text-input]',
        selectorPasswordField: ".".concat(prefix, "--text-input[data-toggle-password-visibility]"),
        selectorPasswordVisibilityButton: ".".concat(prefix, "--text-input--password__visibility__toggle"),
        selectorPasswordVisibilityTooltip: ".".concat(prefix, "--text-input--password__visibility__toggle > .").concat(prefix, "--assistive-text"),
        passwordIsVisible: "".concat(prefix, "--text-input--password-visible"),
        svgIconVisibilityOn: "svg.".concat(prefix, "--icon--visibility-on"),
        svgIconVisibilityOff: "svg.".concat(prefix, "--icon--visibility-off")
      };
    }
    /**
     * The map associating DOM element and text input UI instance.
     * @type {WeakMap}
     */

  }]);

  TextInput.components = new WeakMap();
  return TextInput;
}(mixin(create_component, init_component_by_search, mixins_handles));


// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/ui-shell/side-nav.js
function side_nav_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    side_nav_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    side_nav_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return side_nav_typeof(obj);
}

function side_nav_toConsumableArray(arr) {
  return side_nav_arrayWithoutHoles(arr) || side_nav_iterableToArray(arr) || side_nav_nonIterableSpread();
}

function side_nav_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function side_nav_iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function side_nav_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function side_nav_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function side_nav_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function side_nav_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) side_nav_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) side_nav_defineProperties(Constructor, staticProps);
  return Constructor;
}

function side_nav_possibleConstructorReturn(self, call) {
  if (call && (side_nav_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return side_nav_assertThisInitialized(self);
}

function side_nav_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function side_nav_getPrototypeOf(o) {
  side_nav_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return side_nav_getPrototypeOf(o);
}

function side_nav_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) side_nav_setPrototypeOf(subClass, superClass);
}

function side_nav_setPrototypeOf(o, p) {
  side_nav_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return side_nav_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var side_nav_prefix = js_settings.prefix;

var side_nav_SideNav =
/*#__PURE__*/
function (_mixin) {
  side_nav_inherits(SideNav, _mixin);
  /**
   * The map associating DOM element and copy button UI instance.
   * @member SideNav.components
   * @type {WeakMap}
   */

  /**
   * Side nav.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a side nav.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorSideNavToggle]
   *   The CSS selector to find the toggle button.
   * @param {string} [options.selectorSideNavSubmenu] The CSS selector to find the trigger buttons for sub nav items.
   * @param {string} [options.selectorSideNavItem] The CSS selector to find the nav items.
   * @param {string} [options.selectorSideNavLink] The CSS selector to find the interactive potions in non-nested nav items.
   * @param {string} [options.selectorSideNavLinkCurrent]
   *   The CSS selector to find the interactive potion in active non-nested nav item.
   * @param {string} [options.classSideNavExpanded] The CSS class for the expanded state.
   * @param {string} [options.classSideNavItemActive]
   *   The CSS class for the active/inactive state for nav items.
   * @param {string} [options.classSideNavLinkCurrent]
   *   The CSS class for the active/inactive state of the interactive potion in non-nested nav items.
   */


  function SideNav(element, options) {
    var _this;

    side_nav_classCallCheck(this, SideNav);

    _this = side_nav_possibleConstructorReturn(this, side_nav_getPrototypeOf(SideNav).call(this, element, options));

    _this._handleClick = function (evt) {
      var matchesToggle = eventMatches(evt, _this.options.selectorSideNavToggle);
      var matchesNavSubmenu = eventMatches(evt, _this.options.selectorSideNavSubmenu);
      var matchesSideNavLink = eventMatches(evt, _this.options.selectorSideNavLink);

      if (!matchesToggle && !matchesNavSubmenu && !matchesSideNavLink) {
        return;
      }

      if (matchesToggle) {
        _this.changeState(!_this.isNavExpanded() ? _this.constructor.state.EXPANDED : _this.constructor.state.COLLAPSED);

        return;
      }

      if (matchesNavSubmenu) {
        var isSubmenuExpanded = matchesNavSubmenu.getAttribute('aria-expanded') === 'true';
        matchesNavSubmenu.setAttribute('aria-expanded', "".concat(!isSubmenuExpanded));
        return;
      }

      if (matchesSideNavLink) {
        side_nav_toConsumableArray(_this.element.querySelectorAll(_this.options.selectorSideNavLinkCurrent)).forEach(function (el) {
          el.classList.remove(_this.options.classSideNavItemActive, _this.options.classSideNavLinkCurrent);
          el.removeAttribute('aria-current');
        });

        matchesSideNavLink.classList.add(_this.options.classSideNavLinkCurrent);
        var closestSideNavItem = matchesSideNavLink.closest(_this.options.selectorSideNavItem);

        if (closestSideNavItem) {
          closestSideNavItem.classList.add(_this.options.classSideNavItemActive);
        }
      }
    };

    _this.manage(on(element, 'click', _this._handleClick));

    return _this;
  }
  /**
   * Enum for toggling side nav visibility
   * @readonly
   * @member SideNav.state
   * @type {object}
   * @property {string} EXPANDED Opening/visible
   * @property {string} COLLAPSED Closing/hidden
   */


  side_nav_createClass(SideNav, [{
    key: "isNavExpanded",

    /**
     * @returns {boolean} `true` if the nav is expanded.
     */
    value: function isNavExpanded() {
      return this.element.classList.contains(this.options.classSideNavExpanded);
    }
    /**
     * Changes the expanded/collapsed state.
     */

  }, {
    key: "changeState",
    value: function changeState(state) {
      this.element.classList.toggle(this.options.classSideNavExpanded, state === this.constructor.state.EXPANDED);
    }
  }]);

  SideNav.components = new WeakMap();
  SideNav.state = {
    EXPANDED: 'expanded',
    COLLAPSED: 'collapsed'
  };
  SideNav.options = {
    selectorInit: '[data-side-nav]',
    selectorSideNavToggle: ".".concat(side_nav_prefix, "--side-nav__toggle"),
    selectorSideNavSubmenu: ".".concat(side_nav_prefix, "--side-nav__submenu"),
    selectorSideNavItem: ".".concat(side_nav_prefix, "--side-nav__item"),
    selectorSideNavLink: ".".concat(side_nav_prefix, "--side-nav__link"),
    selectorSideNavLinkCurrent: "[aria-current=\"page\"],.".concat(side_nav_prefix, "--side-nav__link--current,.").concat(side_nav_prefix, "--side-nav__item--active"),
    classSideNavExpanded: "".concat(side_nav_prefix, "--side-nav--expanded"),
    classSideNavItemActive: "".concat(side_nav_prefix, "--side-nav__item--active"),
    classSideNavLinkCurrent: "".concat(side_nav_prefix, "--side-nav__link--current")
  };
  return SideNav;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var side_nav = (side_nav_SideNav);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/ui-shell/header-submenu.js
function header_submenu_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    header_submenu_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    header_submenu_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return header_submenu_typeof(obj);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function header_submenu_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function header_submenu_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function header_submenu_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) header_submenu_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) header_submenu_defineProperties(Constructor, staticProps);
  return Constructor;
}

function header_submenu_possibleConstructorReturn(self, call) {
  if (call && (header_submenu_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return header_submenu_assertThisInitialized(self);
}

function header_submenu_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function header_submenu_getPrototypeOf(o) {
  header_submenu_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return header_submenu_getPrototypeOf(o);
}

function header_submenu_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) header_submenu_setPrototypeOf(subClass, superClass);
}

function header_submenu_setPrototypeOf(o, p) {
  header_submenu_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return header_submenu_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */










var forEach =
/* #__PURE__ */
function () {
  return Array.prototype.forEach;
}();

var header_submenu_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var header_submenu_HeaderSubmenu =
/*#__PURE__*/
function (_mixin) {
  header_submenu_inherits(HeaderSubmenu, _mixin);
  /**
   * Sub menus in header nav.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a submenu in header nav.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorTrigger] The CSS selector to find the trigger button.
   * @param {string} [options.selectorItem] The CSS selector to find the menu items.
   * @param {string} [options.attribExpanded] The attribute that represents the expanded/collapsed state.
   */


  function HeaderSubmenu(element, options) {
    var _this;

    header_submenu_classCallCheck(this, HeaderSubmenu);

    _this = header_submenu_possibleConstructorReturn(this, header_submenu_getPrototypeOf(HeaderSubmenu).call(this, element, options));

    _this._getAction = function (event) {
      var isFlyoutMenu = eventMatches(event, _this.options.selectorFlyoutMenu);

      if (isFlyoutMenu) {
        return _this.constructor.actions.DELEGATE_TO_FLYOUT_MENU;
      }

      switch (event.type) {
        case 'keydown':
          return {
            32: _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS,
            // space bar
            13: _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS,
            // enter
            27: _this.constructor.actions.CLOSE_SUBMENU // esc
            // possible arrow keys

          }[event.which];

        case 'click':
          return eventMatches(event, _this.options.selectorItem) ? _this.constructor.actions.CLOSE_SUBMENU : null;

        case 'blur':
        case 'focusout':
          {
            var isOfSelf = _this.element.contains(event.relatedTarget);

            return isOfSelf ? null : _this.constructor.actions.CLOSE_SUBMENU;
          }

        case 'mouseenter':
          return _this.constructor.actions.OPEN_SUBMENU;

        case 'mouseleave':
          return _this.constructor.actions.CLOSE_SUBMENU;

        default:
          return null;
      }
    };

    _this._getNewState = function (action) {
      var trigger = _this.element.querySelector(_this.options.selectorTrigger);

      var isExpanded = trigger.getAttribute(_this.options.attribExpanded) === 'true';

      switch (action) {
        case _this.constructor.actions.CLOSE_SUBMENU:
          return false;

        case _this.constructor.actions.OPEN_SUBMENU:
          return true;

        case _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS:
          return !isExpanded;

        default:
          return isExpanded;
      }
    };

    _this._setState = function (_ref) {
      var shouldBeExpanded = _ref.shouldBeExpanded,
          shouldFocusOnOpen = _ref.shouldFocusOnOpen;

      var trigger = _this.element.querySelector(_this.options.selectorTrigger);

      trigger.setAttribute(_this.options.attribExpanded, shouldBeExpanded);
      forEach.call(_this.element.querySelectorAll(_this.options.selectorItem), function (item) {
        item.tabIndex = shouldBeExpanded ? 0 : -1;
      }); // focus first submenu item

      if (shouldBeExpanded && shouldFocusOnOpen) {
        _this.element.querySelector(_this.options.selectorItem).focus();
      }
    };

    _this.getCurrentNavigation = function () {
      var focused = _this.element.ownerDocument.activeElement;
      return focused.nodeType === Node.ELEMENT_NODE && focused.matches(_this.options.selectorItem) ? focused : null;
    };

    _this.navigate = function (direction) {
      var items = header_submenu_toArray(_this.element.querySelectorAll(_this.options.selectorItem));

      var start = _this.getCurrentNavigation() || _this.element.querySelector(_this.options.selectorItemSelected);

      var getNextItem = function getNextItem(old) {
        var handleUnderflow = function handleUnderflow(index, length) {
          return index + (index >= 0 ? 0 : length);
        };

        var handleOverflow = function handleOverflow(index, length) {
          return index - (index < length ? 0 : length);
        }; // `items.indexOf(old)` may be -1 (Scenario of no previous focus)


        var index = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index, items.length), items.length)];
      };

      for (var current = getNextItem(start); current && current !== start; current = getNextItem(current)) {
        if (!current.matches(_this.options.selectorItemHidden) && !current.parentNode.matches(_this.options.selectorItemHidden) && !current.matches(_this.options.selectorItemSelected)) {
          current.focus();
          break;
        }
      }
    };

    _this._handleEvent = function (event) {
      var trigger = _this.element.querySelector(_this.options.selectorTrigger);

      if (!trigger) {
        return;
      }

      var action = _this._getAction(event);

      if (action) {
        var shouldBeExpanded = _this._getNewState(action);

        _this._setState({
          shouldBeExpanded: shouldBeExpanded
        });
      }
    };

    _this._handleKeyDown = function (event) {
      var trigger = _this.element.querySelector(_this.options.selectorTrigger);

      if (!trigger) {
        return;
      }

      var action = _this._getAction(event);

      if (event.which === 32) {
        event.preventDefault();
      }

      switch (action) {
        case _this.constructor.actions.DELEGATE_TO_FLYOUT_MENU:
          // currently we do not have a scenario that handles flyout menu
          // handleFlyoutMenu
          break;
        // currently we do not have a scenario that opens a submenu on keydown
        // case this.constructor.actions.OPEN_SUBMENU:

        case _this.constructor.actions.CLOSE_SUBMENU:
          {
            var shouldBeExpanded = _this._getNewState(action);

            _this._setState({
              shouldBeExpanded: shouldBeExpanded
            });

            break;
          }

        case _this.constructor.actions.TOGGLE_SUBMENU_WITH_FOCUS:
          {
            var _shouldBeExpanded = _this._getNewState(action);

            _this._setState({
              shouldBeExpanded: _shouldBeExpanded,
              shouldFocusOnOpen: true
            });

            break;
          }

        default:
          {
            var expanded = trigger.getAttribute(_this.options.attribExpanded) === 'true';

            if (expanded) {
              var direction = {
                38: _this.constructor.NAVIGATE.BACKWARD,
                40: _this.constructor.NAVIGATE.FORWARD
              }[event.which];

              switch (event.which) {
                case 35:
                  {
                    // end key
                    event.preventDefault(); // prevents key from scrolling page

                    var menuItems = _this.element.querySelectorAll(_this.options.selectorItem);

                    var lastMenuItem = menuItems[menuItems.length - 1];

                    if (lastMenuItem) {
                      lastMenuItem.focus();
                    }

                    break;
                  }

                case 36:
                  {
                    // home key
                    event.preventDefault(); // prevents key from scrolling page

                    var _this$element$querySe = _this.element.querySelectorAll(_this.options.selectorItem),
                        _this$element$querySe2 = _slicedToArray(_this$element$querySe, 1),
                        firstMenuItem = _this$element$querySe2[0];

                    if (firstMenuItem) {
                      firstMenuItem.focus();
                    }

                    break;
                  }

                case 38: // up arrow

                case 40:
                  // down arrow
                  _this.navigate(direction);

                  event.preventDefault(); // prevents keys from scrolling page

                  break;

                default:
                  break;
              }
            }

            break;
          }
      }
    };

    var hasFocusOut = 'onfocusout' in window;

    _this.manage(on(_this.element, hasFocusOut ? 'focusout' : 'blur', _this._handleEvent, !hasFocusOut));

    _this.manage(on(_this.element, 'mouseenter', _this._handleEvent));

    _this.manage(on(_this.element, 'mouseleave', _this._handleEvent));

    _this.manage(on(_this.element, 'click', _this._handleEvent));

    _this.manage(on(_this.element, 'keydown', _this._handleKeyDown));

    return _this;
  }
  /**
   * The map associating DOM element and HeaderSubmenu instance.
   * @member HeaderSubmenu.components
   * @type {WeakMap}
   */


  header_submenu_createClass(HeaderSubmenu, null, [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode HeaderSubmenu.create .create()}, or
     * {@linkcode HeaderSubmenu.init .init()},
     * properties in this object are overriden for the instance being create and
     * how {@linkcode HeaderSubmenu.init .init()} works.
     * @member HeaderSubmenu.options
     * @type {object}
     * @property {string} selectorInit The data attribute to find side navs.
     * @property {string} [selectorTrigger] The CSS selector to find the trigger button.
     * @property {string} [selectorItem] The CSS selector to find the menu items.
     * @property {string} [attribExpanded] The attribute that represents the expanded/collapsed state.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-header-submenu]',
        selectorTrigger: ".".concat(prefix, "--header__menu-title"),
        selectorItem: ".".concat(prefix, "--header__menu .").concat(prefix, "--header__menu-item"),
        attribExpanded: 'aria-expanded'
      };
    }
    /**
     * Enum for navigating backward/forward.
     * @readonly
     * @member HeaderSubmenu.NAVIGATE
     * @type {object}
     * @property {number} BACKWARD Navigating backward.
     * @property {number} FORWARD Navigating forward.
     */

  }]);

  HeaderSubmenu.components = new WeakMap();
  HeaderSubmenu.actions = {
    CLOSE_SUBMENU: 'CLOSE_SUBMENU',
    OPEN_SUBMENU: 'OPEN_SUBMENU',
    TOGGLE_SUBMENU_WITH_FOCUS: 'TOGGLE_SUBMENU_WITH_FOCUS',
    DELEGATE_TO_FLYOUT_MENU: 'DELEGATE_TO_FLYOUT_MENU'
  };
  HeaderSubmenu.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return HeaderSubmenu;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var header_submenu = (header_submenu_HeaderSubmenu);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/ui-shell/header-nav.js
function header_nav_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    header_nav_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    header_nav_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return header_nav_typeof(obj);
}

function header_nav_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function header_nav_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function header_nav_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) header_nav_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) header_nav_defineProperties(Constructor, staticProps);
  return Constructor;
}

function header_nav_possibleConstructorReturn(self, call) {
  if (call && (header_nav_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return header_nav_assertThisInitialized(self);
}

function header_nav_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function header_nav_getPrototypeOf(o) {
  header_nav_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return header_nav_getPrototypeOf(o);
}

function header_nav_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) header_nav_setPrototypeOf(subClass, superClass);
}

function header_nav_setPrototypeOf(o, p) {
  header_nav_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return header_nav_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var header_nav_toArray = function toArray(arrayLike) {
  return Array.prototype.slice.call(arrayLike);
};

var header_nav_HeaderNav =
/*#__PURE__*/
function (_mixin) {
  header_nav_inherits(HeaderNav, _mixin);
  /**
   * Header nav.
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as an header nav.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorSubmenu] The CSS selector to find sub menus.
   * @param {string} [options.selectorSubmenuLink] The CSS selector to find the trigger buttons of sub menus.
   * @param {string} [options.selectorSubmenuItem] The CSS selector to find the sub menu items.
   */


  function HeaderNav(element, options) {
    var _this;

    header_nav_classCallCheck(this, HeaderNav);

    _this = header_nav_possibleConstructorReturn(this, header_nav_getPrototypeOf(HeaderNav).call(this, element, options));

    _this.getCurrentNavigation = function () {
      var focused = _this.element.ownerDocument.activeElement.closest(_this.options.selectorSubmenu);

      return focused && focused.nodeType === Node.ELEMENT_NODE ? focused.querySelector(_this.options.selectorSubmenuLink) : null;
    };

    _this.navigate = function (direction) {
      var items = header_nav_toArray(_this.element.querySelectorAll(_this.options.selectorSubmenuLink));

      var start = _this.getCurrentNavigation();

      var getNextItem = function getNextItem(old) {
        var handleUnderflow = function handleUnderflow(index, length) {
          return index + (index >= 0 ? 0 : length);
        };

        var handleOverflow = function handleOverflow(index, length) {
          return index - (index < length ? 0 : length);
        }; // `items.indexOf(old)` may be -1 (Scenario of no previous focus)


        var index = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index, items.length), items.length)];
      };

      getNextItem(start).focus();
    };

    _this._handleKeyDown = function (event) {
      var keyCodes = {
        37: _this.constructor.NAVIGATE.BACKWARD,
        // left arrow
        39: _this.constructor.NAVIGATE.FORWARD // right arrow

      };
      var keyCodeMatches = keyCodes[event.which];

      if (keyCodeMatches) {
        _this.navigate(keyCodeMatches);
      }
    };

    _this.manage(on(_this.element, 'keydown', _this._handleKeyDown));

    return _this;
  }
  /**
   * The map associating DOM element and Header instance.
   * @member HeaderNav.components
   * @type {WeakMap}
   */


  header_nav_createClass(HeaderNav, null, [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode HeaderNav.create .create()}, or
     * {@linkcode HeaderNav.init .init()},
     * properties in this object are overriden for the instance being create and
     * how {@linkcode HeaderNav.init .init()} works.
     * @member HeaderNav.options
     * @type {object}
     * @property {string} selectorInit The data attribute to find side navs.
     * @property {string} [selectorSubmenu] The CSS selector to find sub menus.
     * @property {string} [selectorSubmenuLink] The CSS selector to find the trigger buttons of sub menus.
     * @property {string} [selectorSubmenuItem] The CSS selector to find the sub menu items.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-header-nav]',
        selectorNavKind: '[data-header-nav-kind]',
        selectorSubmenu: ".".concat(prefix, "--header__submenu"),
        selectorSubmenuLink: ".".concat(prefix, "--header__menu-title"),
        selectorSubmenuItem: ".".concat(prefix, "--header__menu-title > .").concat(prefix, "--header__menu-item")
      };
    }
    /**
     * Enum for navigating backward/forward.
     * @readonly
     * @member Header.NAVIGATE
     * @type {object}
     * @property {number} BACKWARD Navigating backward.
     * @property {number} FORWARD Navigating forward.
     */

  }]);

  HeaderNav.components = new WeakMap();
  HeaderNav.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return HeaderNav;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var header_nav = (header_nav_HeaderNav);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/ui-shell/navigation-menu-panel.js
function navigation_menu_panel_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    navigation_menu_panel_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    navigation_menu_panel_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return navigation_menu_panel_typeof(obj);
}

function navigation_menu_panel_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function navigation_menu_panel_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function navigation_menu_panel_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) navigation_menu_panel_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) navigation_menu_panel_defineProperties(Constructor, staticProps);
  return Constructor;
}

function navigation_menu_panel_possibleConstructorReturn(self, call) {
  if (call && (navigation_menu_panel_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return navigation_menu_panel_assertThisInitialized(self);
}

function navigation_menu_panel_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function navigation_menu_panel_getPrototypeOf(o) {
  navigation_menu_panel_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return navigation_menu_panel_getPrototypeOf(o);
}

function navigation_menu_panel_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) navigation_menu_panel_setPrototypeOf(subClass, superClass);
}

function navigation_menu_panel_setPrototypeOf(o, p) {
  navigation_menu_panel_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return navigation_menu_panel_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











var navigation_menu_panel_NavigationMenuPanel =
/*#__PURE__*/
function (_mixin) {
  navigation_menu_panel_inherits(NavigationMenuPanel, _mixin);

  function NavigationMenuPanel() {
    var _getPrototypeOf2;

    var _this;

    navigation_menu_panel_classCallCheck(this, NavigationMenuPanel);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = navigation_menu_panel_possibleConstructorReturn(this, (_getPrototypeOf2 = navigation_menu_panel_getPrototypeOf(NavigationMenuPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _this.createdByLauncher = function (event) {
      var isExpanded = !_this.element.hasAttribute('hidden');
      var newState = isExpanded ? 'collapsed' : 'expanded';
      _this.triggerButton = event.delegateTarget;

      _this.changeState(newState);
    };

    _this.shouldStateBeChanged = function (state) {
      return state === 'expanded' === _this.element.hasAttribute('hidden');
    };

    _this._changeState = function (state, callback) {
      toggleAttribute(_this.element, 'hidden', state !== 'expanded');

      if (_this.triggerButton) {
        if (state === 'expanded') {
          var focusableMenuItems = _this.element.querySelector(_this.options.selectorFocusableMenuItem);

          if (focusableMenuItems) {
            focusableMenuItems.focus();
          }
        }

        var label = state === 'expanded' ? _this.triggerButton.getAttribute(_this.options.attribLabelCollapse) : _this.triggerButton.getAttribute(_this.options.attribLabelExpand);

        _this.triggerButton.classList.toggle(_this.options.classNavigationMenuPanelHeaderActionActive, state === 'expanded');

        _this.triggerButton.setAttribute('aria-label', label);

        _this.triggerButton.setAttribute('title', label);
      }

      callback();
    };

    return _this;
  }

  navigation_menu_panel_createClass(NavigationMenuPanel, null, [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode NavigationMenuPanel.create .create()}, or
     * {@linkcode NavigationMenuPanel.init .init()},
     * properties in this object are overriden for the instance being create and
     * how {@linkcode NavigationMenuPanel.init .init()} works.
     * @member NavigationMenuPanel.options
     * @type {object}
     * @property {string} selectorInit The CSS class to find popup navs.
     * @property {string} attribInitTarget The attribute name in the launcher buttons to find target popup nav.
     * @property {string[]} initEventNames The events that the component will handles
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        initEventNames: ['click'],
        eventBeforeExpanded: 'navigation-menu-being-expanded',
        eventAfterExpanded: 'navigation-menu-expanded',
        eventBeforeCollapsed: 'navigation-menu-being-collapsed',
        eventAfterCollapsed: 'navigation-menu-collapsed',
        selectorFocusableMenuItem: ".".concat(prefix, "--navigation__category-toggle, .").concat(prefix, "--navigation-link"),
        classNavigationMenuPanelHeaderActionActive: "".concat(prefix, "--header__action--active"),
        attribLabelExpand: 'data-navigation-menu-panel-label-expand',
        attribLabelCollapse: 'data-navigation-menu-panel-label-collapse'
      };
    }
  }]);

  NavigationMenuPanel.components = new WeakMap();
  return NavigationMenuPanel;
}(mixin(create_component, init_component_by_launcher, evented_show_hide_state, mixins_handles, evented_state));


// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/ui-shell/navigation-menu.js
function navigation_menu_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    navigation_menu_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    navigation_menu_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return navigation_menu_typeof(obj);
}

function navigation_menu_toConsumableArray(arr) {
  return navigation_menu_arrayWithoutHoles(arr) || navigation_menu_iterableToArray(arr) || navigation_menu_nonIterableSpread();
}

function navigation_menu_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function navigation_menu_iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function navigation_menu_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function navigation_menu_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function navigation_menu_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function navigation_menu_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) navigation_menu_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) navigation_menu_defineProperties(Constructor, staticProps);
  return Constructor;
}

function navigation_menu_possibleConstructorReturn(self, call) {
  if (call && (navigation_menu_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return navigation_menu_assertThisInitialized(self);
}

function navigation_menu_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function navigation_menu_getPrototypeOf(o) {
  navigation_menu_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return navigation_menu_getPrototypeOf(o);
}

function navigation_menu_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) navigation_menu_setPrototypeOf(subClass, superClass);
}

function navigation_menu_setPrototypeOf(o, p) {
  navigation_menu_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return navigation_menu_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */







var navigation_menu_NavigationMenu =
/*#__PURE__*/
function (_NavigationMenuPanel) {
  navigation_menu_inherits(NavigationMenu, _NavigationMenuPanel);
  /**
   * A navigation menu
   * @extends NavigationMenuPanel
   * @param {HTMLElement} element The element working as a selector.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorInit] The CSS class to find navigation
   * menus.
   * @param {string} [options.attribInitTarget] The attribute name in the
   * launcher buttons to find target navigation menu.
   * @param {string} [options.selectorShellNavSubmenu] The CSS selector for a
   * nav submenu
   * @param {string} [options.selectorShellNavLink] The CSS selector for a nav
   * link
   * @param {string} [options.selectorShellNavLinkCurrent] The CSS selector for
   * the current nav link
   * @param {string} [options.selectorShellNavItem] The CSS selector for a nav
   * item
   * @param {string} [options.selectorShellNavCategory] The CSS selector for a
   * nav category
   * @param {string} [options.classShellNavItemActive] The CSS class for the
   * active nav item
   * @param {string} [options.classShellNavLinkCurrent] The CSS class for the
   * current lav link
   * @param {string} [options.classShellNavCategoryExpanded] The CSS class
   * for an expanded nav category
   */


  function NavigationMenu(element, options) {
    var _this;

    navigation_menu_classCallCheck(this, NavigationMenu);

    _this = navigation_menu_possibleConstructorReturn(this, navigation_menu_getPrototypeOf(NavigationMenu).call(this, element, options));

    _this.getCurrentNavigation = function () {
      return _this.element.ownerDocument.activeElement;
    };

    _this.navigate = function (direction) {
      var items = navigation_menu_toConsumableArray(_this.element.querySelectorAll(_this.options.selectorFocusableNavItems));

      var start = _this.getCurrentNavigation();

      var getNextItem = function getNextItem(old) {
        var handleUnderflow = function handleUnderflow(index, length) {
          return index + (index >= 0 ? 0 : length);
        };

        var handleOverflow = function handleOverflow(index, length) {
          return index - (index < length ? 0 : length);
        }; // `items.indexOf(old)` may be -1 (Scenario of no previous focus)


        var index = Math.max(items.indexOf(old) + direction, -1);
        return items[handleUnderflow(handleOverflow(index, items.length), items.length)];
      };

      getNextItem(start).focus();
    };

    _this._handleKeyDown = function (event) {
      // handle Esc
      var isExpanded = !_this.element.hasAttribute('hidden');

      if (event.which === 27 && isExpanded) {
        _this.changeState('collapsed');

        if (_this.triggerButton) {
          _this.triggerButton.focus();
        }

        return;
      } // handle up/down arrow keys


      var matchesNavSubmenu = eventMatches(event, _this.options.selectorShellNavSubmenu);
      var matchesShellNavLink = eventMatches(event, _this.options.selectorShellNavLink);

      if (!matchesNavSubmenu && !matchesShellNavLink) {
        return;
      }

      var navigationKeyCodes = {
        38: _this.constructor.NAVIGATE.BACKWARD,
        // up arrow
        40: _this.constructor.NAVIGATE.FORWARD // down arrow

      };
      var navigationKeyCodeMatches = navigationKeyCodes[event.which];

      if (navigationKeyCodeMatches) {
        event.preventDefault(); // prevent arrow keys from scrolling

        _this.navigate(navigationKeyCodeMatches);
      }
    };

    _this._handleFocusOut = function (event) {
      var nextTargetIsOfSelf = _this.element.contains(event.relatedTarget) || event.relatedTarget === _this.triggerButton || !event.relatedTarget;

      var oldTargetIsOfSelf = _this.element.contains(event.target);

      if (oldTargetIsOfSelf && !nextTargetIsOfSelf) {
        _this.changeState('collapsed');

        _this.triggerButton.focus();
      }
    };

    _this.changeNavSubmenuState = function (_ref) {
      var matchesNavSubmenu = _ref.matchesNavSubmenu,
          shouldBeCollapsed = _ref.shouldBeCollapsed;
      var shellNavCategory = matchesNavSubmenu.closest(_this.options.selectorShellNavCategory);

      if (!shellNavCategory) {
        return;
      }

      matchesNavSubmenu.setAttribute('aria-expanded', !shouldBeCollapsed);
      shellNavCategory.classList.toggle(_this.options.classShellNavCategoryExpanded);
      Array.prototype.forEach.call(shellNavCategory.querySelectorAll(_this.options.selectorShellNavLink), function (item) {
        item.tabIndex = !shouldBeCollapsed ? 0 : -1;
      });
    };

    _this._handleClick = function (event) {
      var matchesNavSubmenu = eventMatches(event, _this.options.selectorShellNavSubmenu);
      var matchesShellNavLink = eventMatches(event, _this.options.selectorShellNavLink);
      var matchesNestedShellNavLink = eventMatches(event, _this.options.selectorShellNestedNavLink);

      if (!matchesNavSubmenu && !matchesShellNavLink) {
        return;
      }

      if (matchesNestedShellNavLink) {
        navigation_menu_toConsumableArray(_this.element.querySelectorAll(_this.options.selectorShellNavLinkCurrent)).forEach(function (el) {
          el.classList.remove(_this.options.classShellNavItemActive, _this.options.classShellNavLinkCurrent);
        });

        matchesNestedShellNavLink.closest(_this.options.selectorShellNavNestedCategory).classList.add(_this.options.classShellNavItemActive);
        return;
      }

      if (matchesNavSubmenu) {
        var isExpanded = matchesNavSubmenu.getAttribute('aria-expanded') === 'true';

        _this.changeNavSubmenuState({
          matchesNavSubmenu: matchesNavSubmenu,
          isExpanded: isExpanded
        });

        return;
      }

      if (matchesShellNavLink) {
        navigation_menu_toConsumableArray(_this.element.querySelectorAll(_this.options.selectorShellNavLinkCurrent)).forEach(function (el) {
          el.classList.remove(_this.options.classShellNavItemActive, _this.options.classShellNavLinkCurrent);
        });

        matchesShellNavLink.closest(_this.options.selectorShellNavItem).classList.add(_this.options.classShellNavItemActive);
      }
    };

    _this.manage(on(element, 'click', _this._handleClick));

    _this.manage(on(element, 'keydown', _this._handleKeyDown));

    _this.manage(on(_this.element.ownerDocument, 'click', function (event) {
      if (!_this.element.hasAttribute('hidden') && !_this.triggerButton.contains(event.target) && !_this.element.contains(event.target)) {
        _this.changeState('collapsed');
      }
    }));

    var hasFocusOut = 'onfocusout' in window;

    _this.manage(on(_this.element, hasFocusOut ? 'focusout' : 'blur', _this._handleFocusOut, !hasFocusOut));

    return _this;
  }
  /**
   * @returns {Element} Currently highlighted element.
   */


  navigation_menu_createClass(NavigationMenu, null, [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode NavigationMenu.create .create()}, or
     * {@linkcode NavigationMenu.init .init()},
     * properties in this object are overriden for the instance being create and
     * how {@linkcode NavigationMenu.init .init()} works.
     * @member NavigationMenu.options
     * @type {object}
     * @property {string} selectorInit The CSS class to find navigation menus.
     * @property {string} attribInitTarget The attribute name in the
     * launcher buttons to find target navigation menu.
     * @property {string[]} initEventNames The events that the component
     * will handles
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return Object.assign(Object.create(navigation_menu_panel_NavigationMenuPanel.options), {
        selectorInit: '[data-navigation-menu]',
        attribInitTarget: 'data-navigation-menu-target',
        selectorShellNavSubmenu: ".".concat(prefix, "--navigation__category-toggle"),
        selectorShellNavLink: ".".concat(prefix, "--navigation-link"),
        selectorShellNestedNavLink: ".".concat(prefix, "--navigation__category-item > a.").concat(prefix, "--navigation-link"),
        selectorShellNavLinkCurrent: ".".concat(prefix, "--navigation-item--active,.").concat(prefix, "--navigation__category-item--active"),
        selectorFocusableNavItems: "\n        .".concat(prefix, "--navigation__category-toggle,\n        .").concat(prefix, "--navigation-item > .").concat(prefix, "--navigation-link,\n        .").concat(prefix, "--navigation-link[tabindex=\"0\"]\n      "),
        selectorShellNavItem: ".".concat(prefix, "--navigation-item"),
        selectorShellNavCategory: ".".concat(prefix, "--navigation__category"),
        selectorShellNavNestedCategory: ".".concat(prefix, "--navigation__category-item"),
        classShellNavItemActive: "".concat(prefix, "--navigation-item--active"),
        classShellNavLinkCurrent: "".concat(prefix, "--navigation__category-item--active"),
        classShellNavCategoryExpanded: "".concat(prefix, "--navigation__category--expanded")
      });
    }
    /**
     * Enum for navigating backward/forward.
     * @readonly
     * @member NavigationMenuPanel.NAVIGATE
     * @type {object}
     * @property {number} BACKWARD Navigating backward.
     * @property {number} FORWARD Navigating forward.
     */

  }]);

  NavigationMenu.components = new WeakMap();
  NavigationMenu.NAVIGATE = {
    BACKWARD: -1,
    FORWARD: 1
  };
  return NavigationMenu;
}(navigation_menu_panel_NavigationMenuPanel);


// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/misc/on-focus-by-keyboard.js
/**
 * Differentiate between keyboard and mouse-triggered focusout/blur events
 * @param {Element} node  The element to attach event listeners to
 * @param {string} name The event name to listen to
 * @param {Function} callback The callback function to invoke
 * @returns {Handle} The handle to release the attached event handler
 */
function onFocusByKeyboard(node, name, callback) {
  var hasFocusout = 'onfocusout' in window;
  var focusinEventName = hasFocusout ? 'focusin' : 'focus';
  var focusoutEventName = hasFocusout ? 'focusout' : 'blur';
  /**
   * Event types supported by this function
   * @type {object<string, string>}
   */

  var supportedEvents = {
    focus: focusinEventName,
    blur: focusoutEventName
  };
  var eventName = supportedEvents[name];

  if (!eventName) {
    throw new Error('Unsupported event!');
  }

  var clicked;

  var handleMousedown = function handleMousedown() {
    clicked = true;
    requestAnimationFrame(function () {
      clicked = false;
    });
  };

  var handleFocusin = function handleFocusin(evt) {
    if (!clicked) {
      callback(evt);
    }
  };

  node.ownerDocument.addEventListener('mousedown', handleMousedown);
  node.addEventListener(eventName, handleFocusin, !hasFocusout);
  return {
    release: function release() {
      if (handleFocusin) {
        node.removeEventListener(eventName, handleFocusin, !hasFocusout);
        handleFocusin = null;
      }

      if (handleMousedown) {
        node.ownerDocument.removeEventListener('mousedown', handleMousedown);
        handleMousedown = null;
      }

      return null;
    }
  };
}
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/ui-shell/product-switcher.js
function product_switcher_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    product_switcher_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    product_switcher_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return product_switcher_typeof(obj);
}

function product_switcher_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function product_switcher_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function product_switcher_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) product_switcher_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) product_switcher_defineProperties(Constructor, staticProps);
  return Constructor;
}

function product_switcher_possibleConstructorReturn(self, call) {
  if (call && (product_switcher_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return product_switcher_assertThisInitialized(self);
}

function product_switcher_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function product_switcher_get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    product_switcher_get = Reflect.get;
  } else {
    product_switcher_get = function _get(target, property, receiver) {
      var base = product_switcher_superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return product_switcher_get(target, property, receiver || target);
}

function product_switcher_superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = product_switcher_getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function product_switcher_getPrototypeOf(o) {
  product_switcher_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return product_switcher_getPrototypeOf(o);
}

function product_switcher_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) product_switcher_setPrototypeOf(subClass, superClass);
}

function product_switcher_setPrototypeOf(o, p) {
  product_switcher_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return product_switcher_setPrototypeOf(o, p);
}





var seq = 0;

var product_switcher_ProductSwitcher =
/*#__PURE__*/
function (_NavigationMenuPanel) {
  product_switcher_inherits(ProductSwitcher, _NavigationMenuPanel);
  /**
   * A navigation menu.
   * @extends NavigationMenuPanel
   * @param {HTMLElement} element The element working as a selector.
   * @param {object} [options] The component options.
   * @param {string} [options.selectorInit] The CSS class to find product
   * switchers
   * @param {string} [options.attribInitTarget] The attribute name in the
   * launcher buttons to find target product switcher
   * @param {string} [options.classProductSwitcherExpanded] The CSS class
   * for an expanded product switcher
   */


  function ProductSwitcher(element, options) {
    var _this;

    product_switcher_classCallCheck(this, ProductSwitcher);

    _this = product_switcher_possibleConstructorReturn(this, product_switcher_getPrototypeOf(ProductSwitcher).call(this, element, options));
    _this.current = '';
    _this.triggerButtonIds = new Set();

    _this._handleFocusOut = function (event) {
      if (_this.element.contains(event.relatedTarget)) {
        return;
      }

      var currentTriggerButton = _this.element.ownerDocument.getElementById(_this.current);

      if (currentTriggerButton && event.relatedTarget && !event.relatedTarget.matches(_this.options.selectorFloatingMenus)) {
        currentTriggerButton.focus();
      }
    };

    _this._handleKeyDown = function (event) {
      var isExpanded = !_this.element.hasAttribute('hidden');

      if (event.which === 27 && isExpanded) {
        var triggerButton = _this.current;

        _this.changeState(_this.constructor.SELECT_NONE);

        _this.element.ownerDocument.getElementById(triggerButton).focus();
      }
    };

    _this.createdByLauncher = function (event) {
      var isExpanded = _this.element.classList.contains(_this.options.classProductSwitcherExpanded);

      var launcher = event.delegateTarget;

      if (!launcher.id) {
        launcher.id = "__carbon-product-switcher-launcher-".concat(seq++);
      }

      var current = launcher.id;

      _this.changeState(isExpanded && _this.current === current ? _this.constructor.SELECT_NONE : current);
    };

    _this.shouldStateBeChanged = function (current) {
      return _this.current !== current;
    };

    _this._changeState = function (state, callback) {
      _this.element.classList.toggle(_this.options.classProductSwitcherExpanded, state !== _this.constructor.SELECT_NONE);

      _this.current = state;

      if (_this.current !== _this.constructor.SELECT_NONE) {
        _this.triggerButtonIds.add(_this.current);
      } // deactivate all other trigger buttons


      _this.triggerButtonIds.forEach(function (id) {
        var button = _this.element.ownerDocument.getElementById(id);

        var label = button.getAttribute(_this.options.attribLabelExpand);
        button.classList.remove(_this.options.classNavigationMenuPanelHeaderActionActive);
        button.setAttribute('aria-label', label);
        button.setAttribute('title', label);
      }); // set active trigger button attributes


      var currentTriggerButton = _this.element.ownerDocument.getElementById(_this.current);

      if (currentTriggerButton) {
        var label = currentTriggerButton.getAttribute(_this.options.attribLabelCollapse);
        currentTriggerButton.classList.toggle(_this.options.classNavigationMenuPanelHeaderActionActive);
        currentTriggerButton.setAttribute('aria-label', label);
        currentTriggerButton.setAttribute('title', label);
      }

      if (state !== _this.constructor.SELECT_NONE) {
        _this.element.setAttribute('tabindex', '0');

        _this.element.focus();
      } else {
        _this.element.setAttribute('tabindex', '-1');
      }

      callback();
    };

    _this.manage(on(element, 'keydown', _this._handleKeyDown));

    _this.manage(onFocusByKeyboard(element, 'blur', _this._handleFocusOut));

    return _this;
  }
  /**
   * id of currently active trigger button
   * @type {string}
   */


  product_switcher_createClass(ProductSwitcher, [{
    key: "release",
    value: function release() {
      this.triggerButtonIds.clear();
      return product_switcher_get(product_switcher_getPrototypeOf(ProductSwitcher.prototype), "release", this).call(this);
    }
    /**
     * The map associating DOM element and ProductSwitcher instance.
     * @member ProductSwitcher.components
     * @type {WeakMap}
     */

  }], [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor,
     * {@linkcode ProductSwitcher.create .create()}, or
     * {@linkcode ProductSwitcher.init .init()},
     * properties in this object are overriden for the instance being create and
     * how {@linkcode ProductSwitcher.init .init()} works.
     * @member ProductSwitcher.options
     * @type {object}
     * @property {string} selectorInit The CSS class to find popup navs.
     * @property {string} attribInitTarget The attribute name in the
     * launcher buttons to find target popup nav.
     * @property {string[]} initEventNames The events that the component
     * will handles
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return Object.assign(Object.create(navigation_menu_panel_NavigationMenuPanel.options), {
        selectorInit: '[data-product-switcher]',
        selectorFloatingMenus: "\n        .".concat(prefix, "--overflow-menu-options,\n        .").concat(prefix, "--overflow-menu-options *,\n        .").concat(prefix, "--tooltip,\n        .").concat(prefix, "--tooltip *,\n        .flatpicker-calendar,\n        .flatpicker-calendar *\n        "),
        attribInitTarget: 'data-product-switcher-target',
        classProductSwitcherExpanded: "".concat(prefix, "--panel--expanded")
      });
    }
  }]);

  ProductSwitcher.SELECT_NONE = '__carbon-product-switcher-launcher-NONE';
  ProductSwitcher.components = new WeakMap();
  return ProductSwitcher;
}(navigation_menu_panel_NavigationMenuPanel);

/* harmony default export */ var product_switcher = (product_switcher_ProductSwitcher);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/components/pagination-nav/pagination-nav.js
function pagination_nav_typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    pagination_nav_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    pagination_nav_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return pagination_nav_typeof(obj);
}

function pagination_nav_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function pagination_nav_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function pagination_nav_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) pagination_nav_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) pagination_nav_defineProperties(Constructor, staticProps);
  return Constructor;
}

function pagination_nav_possibleConstructorReturn(self, call) {
  if (call && (pagination_nav_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return pagination_nav_assertThisInitialized(self);
}

function pagination_nav_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function pagination_nav_getPrototypeOf(o) {
  pagination_nav_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return pagination_nav_getPrototypeOf(o);
}

function pagination_nav_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) pagination_nav_setPrototypeOf(subClass, superClass);
}

function pagination_nav_setPrototypeOf(o, p) {
  pagination_nav_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return pagination_nav_setPrototypeOf(o, p);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var pagination_nav_PaginationNav =
/*#__PURE__*/
function (_mixin) {
  pagination_nav_inherits(PaginationNav, _mixin);
  /**
   * Pagination Nav component
   * @extends CreateComponent
   * @extends InitComponentBySearch
   * @extends Handles
   * @param {HTMLElement} element The element working as a pagination nav.
   */


  function PaginationNav(element, options) {
    var _this;

    pagination_nav_classCallCheck(this, PaginationNav);

    _this = pagination_nav_possibleConstructorReturn(this, pagination_nav_getPrototypeOf(PaginationNav).call(this, element, options));

    _this.getActivePageNumber = function () {
      var pageNum;

      var activePageElement = _this.element.querySelector(_this.options.selectorPageActive);

      if (activePageElement) {
        pageNum = Number(activePageElement.getAttribute(_this.options.attribPage));
      }

      return pageNum;
    };

    _this.clearActivePage = function (evt) {
      var pageButtonNodeList = _this.element.querySelectorAll(_this.options.selectorPageButton);

      var pageSelectElement = _this.element.querySelector(_this.options.selectorPageSelect);

      Array.prototype.forEach.call(pageButtonNodeList, function (el) {
        el.classList.remove(_this.options.classActive, _this.options.classDisabled);
        el.removeAttribute(_this.options.attribActive);
        el.removeAttribute('aria-disabled');
        el.removeAttribute('aria-current');
      });

      if (pageSelectElement) {
        pageSelectElement.removeAttribute('aria-current');
        var pageSelectElementOptions = pageSelectElement.options;
        Array.prototype.forEach.call(pageSelectElementOptions, function (el) {
          el.removeAttribute(_this.options.attribActive);
        });

        if (!evt.target.matches(_this.options.selectorPageSelect)) {
          pageSelectElement.classList.remove(_this.options.classActive);
          pageSelectElement.value = '';
        }
      }
    };

    _this.handleClick = function (evt) {
      if (!evt.target.getAttribute('aria-disabled') === true) {
        var nextActivePageNumber = _this.getActivePageNumber();

        var pageElementNodeList = _this.element.querySelectorAll(_this.options.selectorPageElement);

        var pageSelectElement = _this.element.querySelector(_this.options.selectorPageSelect);

        _this.clearActivePage(evt);

        if (evt.target.matches(_this.options.selectorPageButton)) {
          nextActivePageNumber = Number(evt.target.getAttribute(_this.options.attribPage));
        }

        if (evt.target.matches(_this.options.selectorPagePrevious)) {
          nextActivePageNumber -= 1;
        }

        if (evt.target.matches(_this.options.selectorPageNext)) {
          nextActivePageNumber += 1;
        }

        var pageTargetElement = pageElementNodeList[nextActivePageNumber - 1];
        pageTargetElement.setAttribute(_this.options.attribActive, true);

        if (pageTargetElement.tagName === 'OPTION') {
          pageSelectElement.value = _this.getActivePageNumber();
          pageSelectElement.classList.add(_this.options.classActive);
          pageSelectElement.setAttribute('aria-current', 'page');
        } else {
          pageTargetElement.classList.add(_this.options.classActive, _this.options.classDisabled);
          pageTargetElement.setAttribute('aria-disabled', true);
          pageTargetElement.setAttribute('aria-current', 'page');
        }

        _this.setPrevNextStates();
      }
    };

    _this.handleSelectChange = function (evt) {
      _this.clearActivePage(evt);

      var pageSelectElement = _this.element.querySelector(_this.options.selectorPageSelect);

      var pageSelectElementOptions = pageSelectElement.options;
      pageSelectElementOptions[pageSelectElementOptions.selectedIndex].setAttribute(_this.options.attribActive, true);
      evt.target.setAttribute('aria-current', 'page');
      evt.target.classList.add(_this.options.classActive);

      _this.setPrevNextStates();
    };

    _this.setPrevNextStates = function () {
      var pageElementNodeList = _this.element.querySelectorAll(_this.options.selectorPageElement);

      var totalPages = pageElementNodeList.length;

      var pageDirectionElementPrevious = _this.element.querySelector(_this.options.selectorPagePrevious);

      var pageDirectionElementNext = _this.element.querySelector(_this.options.selectorPageNext);

      if (pageDirectionElementPrevious) {
        if (_this.getActivePageNumber() <= 1) {
          pageDirectionElementPrevious.setAttribute('aria-disabled', true);
          pageDirectionElementPrevious.classList.add(_this.options.classDisabled);
        } else {
          pageDirectionElementPrevious.removeAttribute('aria-disabled');
          pageDirectionElementPrevious.classList.remove(_this.options.classDisabled);
        }
      }

      if (pageDirectionElementNext) {
        if (_this.getActivePageNumber() >= totalPages) {
          pageDirectionElementNext.setAttribute('aria-disabled', true);
          pageDirectionElementNext.classList.add(_this.options.classDisabled);
        } else {
          pageDirectionElementNext.removeAttribute('aria-disabled');
          pageDirectionElementNext.classList.remove(_this.options.classDisabled);
        }
      }
    };

    _this.manage(on(_this.element, 'click', function (evt) {
      return _this.handleClick(evt);
    }));

    _this.manage(on(_this.element, 'change', function (evt) {
      if (evt.target.matches(_this.options.selectorPageSelect)) {
        _this.handleSelectChange(evt);
      }
    }));

    return _this;
  }
  /**
   * Get active page number
   */


  pagination_nav_createClass(PaginationNav, null, [{
    key: "options",

    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode PaginationNav.create .create()},
     * or {@linkcode PaginationNav.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode PaginationNav.init .init()} works.
     * @member PaginationNav.options
     * @type {object}
     * @property {string} selectorInit The data attribute to find pagination nav.
     * @property {string} selectorPageElement The data attribute to find page element.
     * @property {string} selectorPageButton The data attribute to find page interactive element.
     * @property {string} selectorPageDirection The data attribute to find page change element.
     * @property {string} selectorPageSelect The data attribute to find page select element.
     * @property {string} selectorPageActive The data attribute to find active page element.
     * @property {string} [classActive] The CSS class for page's selected state.
     * @property {string} [classDisabled] The CSS class for page's disabled state.
     */
    get: function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-pagination-nav]',
        selectorPageElement: '[data-page]',
        selectorPageButton: '[data-page-button]',
        selectorPagePrevious: '[data-page-previous]',
        selectorPageNext: '[data-page-next]',
        selectorPageSelect: '[data-page-select]',
        selectorPageActive: '[data-page-active="true"]',
        attribPage: 'data-page',
        attribActive: 'data-page-active',
        classActive: "".concat(prefix, "--pagination-nav__page--active"),
        classDisabled: "".concat(prefix, "--pagination-nav__page--disabled")
      };
    }
  }]);

  PaginationNav.components = new WeakMap();
  return PaginationNav;
}(mixin(create_component, init_component_by_search, mixins_handles));

/* harmony default export */ var pagination_nav = (pagination_nav_PaginationNav);
// CONCATENATED MODULE: ./node_modules/carbon-components/es/globals/js/components.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


































// CONCATENATED MODULE: ./node_modules/carbon-components/es/index.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
// ====================//
// Imports and Exports //
// ====================//
// Base Elements & Components
// -------------
// - JavaScript classes for use with components and base-elements.
// - The following statements import classes from actual locations to
//   be consumed from this file instead of their actual locations.



/***/ }),

/***/ "4756":
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./cv-accordion/cv-accordion-item.vue": "f976",
	"./cv-accordion/cv-accordion-skeleton.vue": "be03",
	"./cv-accordion/cv-accordion.vue": "8667",
	"./cv-breadcrumb/cv-breadcrumb-item.vue": "775a",
	"./cv-breadcrumb/cv-breadcrumb-skeleton.vue": "5128",
	"./cv-breadcrumb/cv-breadcrumb.vue": "2b52",
	"./cv-button/cv-button-set.vue": "b5e6",
	"./cv-button/cv-button-skeleton.vue": "6fc9",
	"./cv-button/cv-button.vue": "cea0",
	"./cv-button/cv-icon-button.vue": "f0a6",
	"./cv-checkbox/cv-checkbox-skeleton.vue": "90c2",
	"./cv-checkbox/cv-checkbox.vue": "eade",
	"./cv-code-snippet/cv-code-snippet-skeleton.vue": "2ff2",
	"./cv-code-snippet/cv-code-snippet.vue": "dd5c",
	"./cv-combo-box/cv-combo-box.vue": "2b6c",
	"./cv-content-switcher/cv-content-switcher-button.vue": "2137",
	"./cv-content-switcher/cv-content-switcher-content.vue": "5017",
	"./cv-content-switcher/cv-content-switcher.vue": "fb07",
	"./cv-data-table/cv-data-table-action.vue": "1ee4",
	"./cv-data-table/cv-data-table-cell.vue": "0647",
	"./cv-data-table/cv-data-table-row.vue": "0f44",
	"./cv-data-table/cv-data-table-skeleton.vue": "7018",
	"./cv-data-table/cv-data-table.vue": "def8",
	"./cv-date-picker/cv-date-picker.vue": "0539",
	"./cv-dropdown/cv-dropdown-item.vue": "140e",
	"./cv-dropdown/cv-dropdown-skeleton.vue": "4ce3",
	"./cv-dropdown/cv-dropdown.vue": "71cc",
	"./cv-file-uploader/cv-file-uploader-skeleton.vue": "6e60",
	"./cv-file-uploader/cv-file-uploader.vue": "55e3",
	"./cv-form/cv-form-group.vue": "c822",
	"./cv-form/cv-form-item.vue": "7f4d",
	"./cv-form/cv-form.vue": "b5dc",
	"./cv-inline-loading/cv-inline-loading.vue": "9318",
	"./cv-inline-notification/cv-inline-notification.vue": "a7e9",
	"./cv-link/cv-link.vue": "2f28",
	"./cv-list/cv-list-item.vue": "3691",
	"./cv-list/cv-list.vue": "7607",
	"./cv-loading/cv-loading.vue": "ff77",
	"./cv-modal/cv-modal.vue": "d52d",
	"./cv-multi-select/cv-multi-select.vue": "6586",
	"./cv-number-input/cv-number-input-skeleton.vue": "fb12",
	"./cv-number-input/cv-number-input.vue": "63686",
	"./cv-overflow-menu/cv-overflow-menu-item.vue": "03f9",
	"./cv-overflow-menu/cv-overflow-menu.vue": "e44b",
	"./cv-pagination/cv-pagination.vue": "744c",
	"./cv-progress/cv-progress-step.vue": "24a9",
	"./cv-progress/cv-progress.vue": "51f2",
	"./cv-radio-button/cv-radio-button.vue": "1d1a",
	"./cv-radio-button/cv-radio-group.vue": "4c21",
	"./cv-search/cv-search.vue": "2b0a",
	"./cv-select/cv-select-optgroup.vue": "e4ef",
	"./cv-select/cv-select-option.vue": "18a2",
	"./cv-select/cv-select.vue": "1cf6",
	"./cv-skeleton-text/cv-skeleton-text.vue": "6590",
	"./cv-slider/cv-slider-skeleton.vue": "a865",
	"./cv-slider/cv-slider.vue": "17cc",
	"./cv-structured-list/cv-structured-list-data.vue": "d3be",
	"./cv-structured-list/cv-structured-list-heading.vue": "4bc2",
	"./cv-structured-list/cv-structured-list-item.vue": "8479",
	"./cv-structured-list/cv-structured-list.vue": "183a",
	"./cv-tabs/cv-tab.vue": "18de",
	"./cv-tabs/cv-tabs-skeleton.vue": "005d",
	"./cv-tabs/cv-tabs.vue": "c49c",
	"./cv-tag/cv-tag-skeleton.vue": "3108",
	"./cv-tag/cv-tag.vue": "603b",
	"./cv-text-area/cv-text-area.vue": "1617",
	"./cv-text-input/cv-text-input.vue": "7fca",
	"./cv-tile/cv-tile.vue": "5106",
	"./cv-time-picker/cv-time-picker.vue": "89b6",
	"./cv-toast-notification/cv-toast-notification.vue": "95a6",
	"./cv-toggle/cv-toggle-skeleton.vue": "68c3",
	"./cv-toggle/cv-toggle.vue": "f154",
	"./cv-toolbar/cv-toolbar-divider.vue": "25b6",
	"./cv-toolbar/cv-toolbar-option.vue": "4c37",
	"./cv-toolbar/cv-toolbar-search.vue": "d294",
	"./cv-toolbar/cv-toolbar-title.vue": "90c2f",
	"./cv-toolbar/cv-toolbar.vue": "15ec",
	"./cv-tooltip/cv-definition-tooltip.vue": "6093",
	"./cv-tooltip/cv-interactive-tooltip.vue": "e2bb",
	"./cv-tooltip/cv-tooltip.vue": "aee1",
	"./cv-ui-shell/cv-content.vue": "ecb9",
	"./cv-ui-shell/cv-header-global-action.vue": "784a",
	"./cv-ui-shell/cv-header-menu-button.vue": "cb40",
	"./cv-ui-shell/cv-header-menu-item.vue": "eb70",
	"./cv-ui-shell/cv-header-menu.vue": "eed0",
	"./cv-ui-shell/cv-header-name.vue": "f1de",
	"./cv-ui-shell/cv-header-nav.vue": "2b56",
	"./cv-ui-shell/cv-header-panel.vue": "1f7b",
	"./cv-ui-shell/cv-header-side-nav-items.vue": "115c",
	"./cv-ui-shell/cv-header.vue": "80d2",
	"./cv-ui-shell/cv-side-nav-icon.vue": "8fd3",
	"./cv-ui-shell/cv-side-nav-items.vue": "75e8",
	"./cv-ui-shell/cv-side-nav-link.vue": "9952",
	"./cv-ui-shell/cv-side-nav-menu-item.vue": "0ad0",
	"./cv-ui-shell/cv-side-nav-menu.vue": "1120",
	"./cv-ui-shell/cv-side-nav.vue": "b574",
	"./cv-ui-shell/cv-skip-to-content.vue": "c9df",
	"./cv-ui-shell/cv-switcher-item-link.vue": "180a",
	"./cv-ui-shell/cv-switcher-item.vue": "15aa",
	"./cv-ui-shell/cv-switcher.vue": "a123"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "4756";

/***/ }),

/***/ "47fc":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  inheritAttrs: false,
  props: {
    modelValue: String,
    checked: Boolean,
    label: String,
    value: { type: String, required: true },
  },
  model: {
    prop: 'modelValue',
    event: 'change',
  },
  computed: {
    isChecked() {
      if (this.modelValue === undefined) {
        return this.checked;
      } else {
        return this.modelValue === this.value;
      }
    },
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return Object.assign({}, this.$listeners, {
        change: event => this.onChange(event),
      });
    },
  },
  methods: {
    onChange() {
      this.$parent.$emit('cv:change', this.value); // emit to parent
      this.$emit('change', this.value);
    },
  },
});


/***/ }),

/***/ "4820":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_Information16 = {
  name: 'Information16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "8.5,11 8.5,6.5 6.5,6.5 6.5,7.5 7.5,7.5 7.5,11 6,11 6,12 10,12 10,11"
      }
    }), createElement('path', {
      attrs: {
        "d": "M8,3.5c-0.4,0-0.8,0.3-0.8,0.8S7.6,5,8,5c0.4,0,0.8-0.3,0.8-0.8S8.4,3.5,8,3.5z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M8,15c-3.9,0-7-3.1-7-7s3.1-7,7-7s7,3.1,7,7S11.9,15,8,15z M8,2C4.7,2,2,4.7,2,8s2.7,6,6,6s6-2.7,6-6S11.3,2,8,2z"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_Information16);


/***/ }),

/***/ "4835":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*
 * Provides common checkbox behaviour
 */

/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    modelValue: { type: [Array, Boolean], default: () => undefined },
    checked: { type: Boolean, default: undefined },
    name: String,
    value: { type: String, required: true },
  },
  model: {
    prop: 'modelValue',
    event: 'modelEvent',
  },
  mounted() {
    if (this.$options.propsData.modelValue === undefined) {
      this.isChecked = this.checked;
    }
  },
  watch: {
    checked(val) {
      if (this.$options.propsData.modelValue === undefined) {
        this.isChecked = val;
        if (!val && this.mixed) {
          this.dataMixed = true;
        }
      }
    },
  },
  data() {
    return {
      dataChecked: undefined,
    };
  },
  computed: {
    isArrayModel() {
      return Array.isArray(this.modelValue);
    },
    isChecked: {
      get() {
        if (this.$props.modelValue !== undefined) {
          // model value always comes first
          if (this.isArrayModel) {
            if (this.modelValue.includes(this.value)) {
              return true;
            } else {
              return false;
            }
          } else {
            return this.modelValue;
          }
        } else {
          if (this.dataChecked !== undefined) {
            return this.dataChecked;
          } else {
            // if checked defined
            if (this.dataChecked !== undefined) {
              return this.dataChecked;
            }
            if (this.dataMixed) {
              return 'mixed';
            }
          }

          return false;
        }
      },
      set(checked) {
        if (this.isArrayModel) {
          let modelSet = new Set(this.modelValue);

          if (!checked) {
            modelSet.delete(this.value);
          } else {
            modelSet.add(this.value);
          }
          this.dataChecked = Array.from(modelSet);
        } else {
          this.dataChecked = checked ? true : undefined; //
          if (this.dataChecked !== undefined) {
            this.dataMixed = false;
          }
        }
      },
    },
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return Object.assign({}, this.$listeners, {
        change: event => this.onChange(event),
      });
    },
  },
  methods: {
    onChangeInner(checked) {
      this.isChecked = checked;
      this.$emit('modelEvent', this.dataChecked || false); // or false in case dataChecked is undefined
      this.$emit('change', checked);
    },
    onChange(ev) {
      this.onChangeInner(ev.target.checked);
    },
  },
});


/***/ }),

/***/ "4bc2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list-heading.vue?vue&type=template&id=2cd12d84&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-structured-list-heading bx--structured-list-th"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-heading.vue?vue&type=template&id=2cd12d84&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list-heading.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_structured_list_headingvue_type_script_lang_js_ = ({
  name: 'CvStructuredListHeading',
});

// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-heading.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_structured_list_cv_structured_list_headingvue_type_script_lang_js_ = (cv_structured_list_headingvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-heading.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_structured_list_cv_structured_list_headingvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_structured_list_heading = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "4c21":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-radio-button/cv-radio-group.vue?vue&type=template&id=b9006dd8&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-radio-group bx--form-item"},[_c('div',{staticClass:"bx--radio-button-group",class:{ 'bx--radio-button-group--vertical': _vm.vertical }},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-radio-button/cv-radio-group.vue?vue&type=template&id=b9006dd8&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-radio-button/cv-radio-group.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_radio_groupvue_type_script_lang_js_ = ({
  name: 'CvRadioGroup',
  props: {
    vertical: Boolean,
  },
  mounted() {
    // pass on cv-radio-button change events
    this.$on('cv:change', val => this.$emit('change', val));
  },
});

// CONCATENATED MODULE: ./src/components/cv-radio-button/cv-radio-group.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_radio_button_cv_radio_groupvue_type_script_lang_js_ = (cv_radio_groupvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-radio-button/cv-radio-group.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_radio_button_cv_radio_groupvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_radio_group = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "4c37":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-option.vue?vue&type=template&id=731e23c3&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-toolbar-option bx--toolbar-menu__option",on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.$parent.$emit('cv:close')}}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-option.vue?vue&type=template&id=731e23c3&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-option.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_toolbar_optionvue_type_script_lang_js_ = ({
  name: 'CvToolbarOption',
});

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-option.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toolbar_cv_toolbar_optionvue_type_script_lang_js_ = (cv_toolbar_optionvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-option.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toolbar_cv_toolbar_optionvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toolbar_option = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "4ce3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-dropdown/cv-dropdown-skeleton.vue?vue&type=template&id=593ad11b&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--list-box bx--dropdown bx--skeleton",class:{ 'bx--list-box--inline': _vm.inline },attrs:{"disabled":""}})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown-skeleton.vue?vue&type=template&id=593ad11b&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-dropdown/cv-dropdown-skeleton.vue?vue&type=script&lang=js&
//
//
//
//

/* harmony default export */ var cv_dropdown_skeletonvue_type_script_lang_js_ = ({
  name: 'CvDropdownSkeleton',
  props: {
    inline: { type: Boolean, default: false },
  },
});

// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_dropdown_cv_dropdown_skeletonvue_type_script_lang_js_ = (cv_dropdown_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_dropdown_cv_dropdown_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_dropdown_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "5017":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-content-switcher/cv-content-switcher-content.vue?vue&type=template&id=3bceb14c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.isVisible),expression:"isVisible"}],staticClass:"cv-content-switcher-content"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher-content.vue?vue&type=template&id=3bceb14c&

// EXTERNAL MODULE: ./src/components/cv-content-switcher/cv-content-switcher-store.js
var cv_content_switcher_store = __webpack_require__("567b");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-content-switcher/cv-content-switcher-content.vue?vue&type=script&lang=js&
//
//
//
//
//
//



/* harmony default export */ var cv_content_switcher_contentvue_type_script_lang_js_ = ({
  name: 'CvContentSwitcherContent',
  props: {
    ownerId: { type: String, required: true },
  },
  data() {
    return {
      store: cv_content_switcher_store["a" /* default */],
    };
  },
  computed: {
    isVisible() {
      return this.store.getState(this.ownerId);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher-content.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_content_switcher_cv_content_switcher_contentvue_type_script_lang_js_ = (cv_content_switcher_contentvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher-content.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_content_switcher_cv_content_switcher_contentvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_content_switcher_content = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "5106":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/cv-tile.vue?vue&type=template&id=44c68f7d&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-tile bx--tile",class:{ 'bx--tile--light': _vm.theme === 'light' },attrs:{"checked":_vm.selected,"expanded":_vm.expanded}},'component',_vm.$attrs,false),_vm.$listeners),[[_vm._t("default")],_c('template',{slot:"below"},[_vm._t("below")],2)],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tile/cv-tile.vue?vue&type=template&id=44c68f7d&

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-clickable.vue?vue&type=template&id=2fe83bc0&
var _cv_tile_clickablevue_type_template_id_2fe83bc0_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-tile-clickable bx--tile--clickable",attrs:{"data-tile":"clickable","tabindex":"0"}},'component',_vm.linkProps,false),_vm.$listeners),[_vm._t("default")],2)}
var _cv_tile_clickablevue_type_template_id_2fe83bc0_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-clickable.vue?vue&type=template&id=2fe83bc0&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-clickable.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var _cv_tile_clickablevue_type_script_lang_js_ = ({
  name: 'CvTileClickable',
  mixins: [link_mixin["a" /* default */]],
});

// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-clickable.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tile_cv_tile_clickablevue_type_script_lang_js_ = (_cv_tile_clickablevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-clickable.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tile_cv_tile_clickablevue_type_script_lang_js_,
  _cv_tile_clickablevue_type_template_id_2fe83bc0_render,
  _cv_tile_clickablevue_type_template_id_2fe83bc0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_tile_clickable = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-expandable.vue?vue&type=template&id=6400ca8b&
var _cv_tile_expandablevue_type_template_id_6400ca8b_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-tile-expandable bx--tile--expandable",class:[{ 'bx--tile--is-expanded': _vm.internalExpanded }],style:(_vm.styleObject),attrs:{"data-tile":"expandable","tabindex":"0"},on:{"click":_vm.toggle,"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.toggle($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.toggle($event)}}},[_c('button',{staticClass:"bx--tile__chevron",attrs:{"type":"button"}},[_c('ChevronDown16')],1),_c('div',{staticClass:"bx--tile-content"},[_c('span',{ref:"aboveFold",staticClass:"bx--tile-content__above-the-fold",attrs:{"data-tile-atf":""}},[_vm._t("default")],2),_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.internalExpanded || _vm.initialized),expression:"internalExpanded || initialized"}],ref:"belowFold",staticClass:"bx--tile-content__below-the-fold"},[_vm._t("below")],2)])])}
var _cv_tile_expandablevue_type_template_id_6400ca8b_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-expandable.vue?vue&type=template&id=6400ca8b&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/16.js
var _16 = __webpack_require__("ae56");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-expandable.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var _cv_tile_expandablevue_type_script_lang_js_ = ({
  name: 'CvTileExpandable',
  props: {
    expanded: Boolean,
  },
  components: { ChevronDown16: _16["a" /* default */] },
  data() {
    return {
      styleObject: {
        maxHeight: 'initial',
      },
      initialized: false,
      internalExpanded: this.expanded,
    };
  },
  watch: {
    expanded(val) {
      if (val !== this.internalExpanded) {
        this.toggle(val);
      }
    },
  },
  methods: {
    toggle(force) {
      let currentHeight = this.$el.getBoundingClientRect().height;
      if (!this.initialized) {
        this.styleObject.maxHeight = `${currentHeight}px`;
        this.initialized = true;
      }

      this.$nextTick(() => {
        const forceType = typeof force;
        this.internalExpanded = forceType === 'boolean' ? force : !this.internalExpanded;

        const belowFoldHeight = this.$refs.belowFold.getBoundingClientRect().height;

        if (this.internalExpanded) {
          currentHeight += belowFoldHeight;
        } else {
          currentHeight -= belowFoldHeight;
        }
        this.styleObject.maxHeight = `${currentHeight}px`;
      });
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-expandable.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tile_cv_tile_expandablevue_type_script_lang_js_ = (_cv_tile_expandablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-expandable.vue





/* normalize component */

var _cv_tile_expandable_component = Object(componentNormalizer["a" /* default */])(
  cv_tile_cv_tile_expandablevue_type_script_lang_js_,
  _cv_tile_expandablevue_type_template_id_6400ca8b_render,
  _cv_tile_expandablevue_type_template_id_6400ca8b_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_tile_expandable = (_cv_tile_expandable_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-selectable.vue?vue&type=template&id=4cec945b&
var _cv_tile_selectablevue_type_template_id_4cec945b_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{staticClass:"cv-tile-selectable bx--tile--selectable",class:{ 'bx--tile--is-selected': _vm.isChecked },attrs:{"data-wibble":("" + _vm.isChecked),"for":_vm.uid,"aria-label":_vm.ariaLabel,"data-tile":"selectable","tabindex":"0","data-contained-checkbox-state":_vm.isChecked}},[_c('input',_vm._g(_vm._b({staticClass:"bx--tile-input",attrs:{"tabindex":"-1","data-tile-input":"","id":_vm.uid,"type":"checkbox"},domProps:{"checked":_vm.isChecked}},'input',_vm.$attrs,false),_vm.inputListeners)),_c('div',{staticClass:"bx--tile__checkmark"},[_c('CheckmarkFilled16')],1),_c('div',{staticClass:"bx--tile-content"},[_vm._t("default")],2)])}
var _cv_tile_selectablevue_type_template_id_4cec945b_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-selectable.vue?vue&type=template&id=4cec945b&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/check-mixin.js
var check_mixin = __webpack_require__("4835");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/checkmark--filled/16.js
var checkmark_filled_16 = __webpack_require__("6368");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-selectable.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var _cv_tile_selectablevue_type_script_lang_js_ = ({
  name: 'CvTileSelectable',
  mixins: [uid_mixin["a" /* default */], check_mixin["a" /* default */]],
  components: { CheckmarkFilled16: checkmark_filled_16["a" /* default */] },
  inheritAttrs: false,
  props: {
    ariaLabel: { type: String, default: 'tile' },
  },
});

// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-selectable.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tile_cv_tile_selectablevue_type_script_lang_js_ = (_cv_tile_selectablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-selectable.vue





/* normalize component */

var _cv_tile_selectable_component = Object(componentNormalizer["a" /* default */])(
  cv_tile_cv_tile_selectablevue_type_script_lang_js_,
  _cv_tile_selectablevue_type_template_id_4cec945b_render,
  _cv_tile_selectablevue_type_template_id_4cec945b_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_tile_selectable = (_cv_tile_selectable_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-standard.vue?vue&type=template&id=3db0bdae&
var _cv_tile_standardvue_type_template_id_3db0bdae_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-tile-standard"},[_vm._t("default")],2)}
var _cv_tile_standardvue_type_template_id_3db0bdae_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-standard.vue?vue&type=template&id=3db0bdae&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/_cv-tile-standard.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var _cv_tile_standardvue_type_script_lang_js_ = ({
  name: 'CvTileStandard',
});

// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-standard.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tile_cv_tile_standardvue_type_script_lang_js_ = (_cv_tile_standardvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-tile/_cv-tile-standard.vue





/* normalize component */

var _cv_tile_standard_component = Object(componentNormalizer["a" /* default */])(
  cv_tile_cv_tile_standardvue_type_script_lang_js_,
  _cv_tile_standardvue_type_template_id_3db0bdae_render,
  _cv_tile_standardvue_type_template_id_3db0bdae_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_tile_standard = (_cv_tile_standard_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tile/cv-tile.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var cv_tilevue_type_script_lang_js_ = ({
  name: 'CvTile',
  inheritAttrs: false,
  model: {
    // required for selectable kind
    prop: 'modelValue',
    event: 'modelEvent',
  },
  mixins: [theme_mixin["a" /* default */]],
  components: {
    CvTileClickable: _cv_tile_clickable,
    CvTileExpandable: _cv_tile_expandable,
    CvTileSelectable: _cv_tile_selectable,
    CvTileStandard: _cv_tile_standard,
  },
  props: {
    expanded: Boolean,
    selected: Boolean,
    kind: {
      type: String,
      default: '',
      validator: value => ['clickable', 'expandable', 'selectable', 'standard', ''].includes(value),
    },
  },
  computed: {
    tagType() {
      switch (this.kind) {
        case 'clickable':
          return 'cv-tile-clickable';
        case 'selectable':
          return 'cv-tile-selectable';
        case 'expandable':
          return 'cv-tile-expandable';
        default:
          return 'cv-tile-standard';
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-tile/cv-tile.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tile_cv_tilevue_type_script_lang_js_ = (cv_tilevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-tile/cv-tile.vue





/* normalize component */

var cv_tile_component = Object(componentNormalizer["a" /* default */])(
  cv_tile_cv_tilevue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_tile = __webpack_exports__["default"] = (cv_tile_component.exports);

/***/ }),

/***/ "5128":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/cv-breadcrumb-skeleton.vue?vue&type=template&id=4b29f5cf&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:"bx--breadcrumb bx--skeleton",attrs:{"aria-label":_vm.ariaLabel}},[_c('cv-breadcrumb-item-skeleton'),_c('cv-breadcrumb-item-skeleton'),_c('cv-breadcrumb-item-skeleton')],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-skeleton.vue?vue&type=template&id=4b29f5cf&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/_cv-breadcrumb-item-skeleton.vue?vue&type=template&id=237fcaf2&
var _cv_breadcrumb_item_skeletonvue_type_template_id_237fcaf2_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
var _cv_breadcrumb_item_skeletonvue_type_template_id_237fcaf2_staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--breadcrumb-item"},[_c('a',{staticClass:"bx--link"},[_vm._v(" ")])])}]


// CONCATENATED MODULE: ./src/components/cv-breadcrumb/_cv-breadcrumb-item-skeleton.vue?vue&type=template&id=237fcaf2&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/_cv-breadcrumb-item-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var _cv_breadcrumb_item_skeletonvue_type_script_lang_js_ = ({
  name: 'CvBreadcrumbItemSkeleton',
});

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/_cv-breadcrumb-item-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_breadcrumb_cv_breadcrumb_item_skeletonvue_type_script_lang_js_ = (_cv_breadcrumb_item_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/_cv-breadcrumb-item-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_breadcrumb_cv_breadcrumb_item_skeletonvue_type_script_lang_js_,
  _cv_breadcrumb_item_skeletonvue_type_template_id_237fcaf2_render,
  _cv_breadcrumb_item_skeletonvue_type_template_id_237fcaf2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_breadcrumb_item_skeleton = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/cv-breadcrumb-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_breadcrumb_skeletonvue_type_script_lang_js_ = ({
  name: 'CvBreadcrumbSkeleton',
  components: {
    CvBreadcrumbItemSkeleton: _cv_breadcrumb_item_skeleton,
  },
  props: {
    ariaLabel: { type: String, default: 'breadcrumb' },
  },
});

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_breadcrumb_cv_breadcrumb_skeletonvue_type_script_lang_js_ = (cv_breadcrumb_skeletonvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-skeleton.vue





/* normalize component */

var cv_breadcrumb_skeleton_component = Object(componentNormalizer["a" /* default */])(
  cv_breadcrumb_cv_breadcrumb_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_breadcrumb_skeleton = __webpack_exports__["default"] = (cv_breadcrumb_skeleton_component.exports);

/***/ }),

/***/ "51f2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-progress/cv-progress.vue?vue&type=template&id=608dfe94&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"cv-progress bx--progress",class:{ 'bx--progress--vertical': _vm.vertical },attrs:{"data-progress":"","data-progress-current":""}},[_vm._t("default",_vm._l((_vm.steps),function(step,index){return _c('cv-progress-step',{key:("step:" + index),ref:"steps",refInFor:true,attrs:{"label":step,"complete":_vm.initialStep > index}})}))],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-progress/cv-progress.vue?vue&type=template&id=608dfe94&

// EXTERNAL MODULE: ./src/components/cv-progress/cv-progress-step.vue + 6 modules
var cv_progress_step = __webpack_require__("24a9");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-progress/cv-progress.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_progressvue_type_script_lang_js_ = ({
  name: 'CvProgress',
  components: {
    CvProgressStep: cv_progress_step["default"],
  },
  props: {
    initialStep: { type: Number, default: 0 },
    steps: Array,
    vertical: Boolean,
  },
  created() {
    // add these on created otherwise cv:mounted is too late.
    this.$on('cv:completed', srcComponent => this.onCvCompleted(srcComponent));
    this.$on('cv:mounted', srcComponent => this.onCvMount(srcComponent));
    this.$on('cv:beforeDestroy', srcComponent => this.onCvBeforeDestroy(srcComponent));
  },
  computed: {
    state() {
      return () => {
        console.warn('CvProgress: method deprecated');
        return;
      };
    },
  },
  methods: {
    onCvMount() {
      this.processState();
    },
    onCvBeforeDestroy() {
      this.processState();
    },
    onCvCompleted() {
      this.processState();
    },
    processState() {
      const steps = this.$children.filter(child => child.$_CvProgressStep);
      let newStep = -1;
      for (let i = 0; i < steps.length; i++) {
        if (!steps[i].complete && newStep < 0) {
          newStep = i;
          steps[i].internalState = 0;
        } else {
          steps[i].internalState = newStep < 0 ? 1 : -1;
        }
      }
    },
    getCurrent() {
      console.warn('CvProgress: method deprecated');
    },
    getSteps() {
      console.warn('CvProgress: method deprecated');
    },
    setCurrent() {
      console.warn('CvProgress: method deprecated');
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-progress/cv-progress.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_progress_cv_progressvue_type_script_lang_js_ = (cv_progressvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-progress/cv-progress.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_progress_cv_progressvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_progress = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "5416":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_Close16 = {
  name: 'Close16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "24 9.4 22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_Close16);


/***/ }),

/***/ "5440":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_ErrorFilled20 = {
  name: 'ErrorFilled20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '20',
      height: '20',
      viewBox: '0 0 20 20',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M10,1c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S15,1,10,1z M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M13.5,14.5l-8-8l1-1l8,8L13.5,14.5z",
        "data-icon-path": "inner-path",
        "opacity": "0"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_ErrorFilled20);


/***/ }),

/***/ "55e3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-file-uploader/cv-file-uploader.vue?vue&type=template&id=12dcc017&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-form-item',{staticClass:"cv-file-uploader"},[_c('strong',{staticClass:"bx--file--label"},[_vm._v(_vm._s(_vm.label))]),_c('p',{staticClass:"bx--label-description"},[_vm._v(_vm._s(_vm.helperText))]),_c('div',{staticClass:"bx--file",attrs:{"data-file":""}},[_c('label',{staticClass:"bx--file-browse-btn",attrs:{"for":_vm.uid,"role":"button","tabindex":"0"},on:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.onShow()},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.onShow()}}},[_c('div',{staticClass:"bx--file__drop-container",class:{ 'bx--file__drop-container--drag-over': _vm.allowDrop },attrs:{"data-file-drop-container":""},on:{"dragover":_vm.onDragEvent,"dragleave":_vm.onDragEvent,"drop":_vm.onDragEvent}},[_vm._t("drop-target",[_vm._v(_vm._s(_vm.internalDropTargetLabel))]),_c('input',_vm._g(_vm._b({ref:"file-input",staticClass:"bx--file-input",attrs:{"type":"file","id":_vm.uid,"data-file-uploader":"","data-target":"[data-file-container]"}},'input',_vm.$attrs,false),_vm.inputListeners))],2)]),_c('div',{staticClass:"bx--file-container",attrs:{"data-file-container":""}},_vm._l((_vm.internalFiles),function(file,index){return _c('div',{key:index,class:_vm.isInvalid(index) ? 'bx--file__selected-file--invalid__wrapper' : 'bx--file__selected-file'},[_c('cv-wrapper',{staticClass:"bx--file__selected-file bx--file__selected-file--invalid",attrs:{"tag-type":_vm.isInvalid(index) ? 'div' : ''}},[_c('p',{staticClass:"bx--file-filename"},[_vm._v(_vm._s(file.file.name))]),_c('span',{staticClass:"bx--file__state-container",style:(_vm.stateStyleOverides),attrs:{"data-for":_vm.uid,"data-test":file.state}},[(file.state === 'uploading')?_c('div',{staticClass:"bx--inline-loading__animation"},[_c('div',{staticClass:"bx--loading bx--loading--small",attrs:{"data-inline-loading-spinner":""}},[_c('svg',{staticClass:"bx--loading__svg",attrs:{"viewBox":"-75 -75 150 150"}},[_c('circle',{staticClass:"bx--loading__background",attrs:{"cx":"0","cy":"0","r":"37.5"}}),_c('circle',{staticClass:"bx--loading__stroke",attrs:{"cx":"0","cy":"0","r":"37.5"}})])])]):_vm._e(),(file.state === 'complete')?_c('CheckmarkFilled16',{staticClass:"bx--file-complete"}):_vm._e(),(_vm.isInvalid(index))?_c('WarningFilled16',{staticClass:"bx--file--invalid"}):_vm._e(),(_vm.removable)?_c('button',{staticClass:"bx--file-close",attrs:{"type":"button","alt":_vm.removeAriaLabel,"arial-label":_vm.removeAriaLabel},on:{"click":function($event){return _vm.remove(index)}}},[_c('Close16')],1):_vm._e()],1),(_vm.isInvalid(index))?_c('div',{staticClass:"bx--form-requirement"},[_c('div',{staticClass:"bx--form-requirement__title"},[_vm._v(_vm._s(file.invalidMessageTitle || 'Invalid file'))]),_c('p',{staticClass:"bx--form-requirement__supplement"},[_vm._v(_vm._s(file.invalidMessage))])]):_vm._e()])],1)}),0)])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-file-uploader/cv-file-uploader.vue?vue&type=template&id=12dcc017&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/components/cv-form/cv-form-item.vue + 4 modules
var cv_form_item = __webpack_require__("7f4d");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/checkmark--filled/16.js
var _16 = __webpack_require__("6368");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var warning_filled_16 = __webpack_require__("f47d");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/16.js
var close_16 = __webpack_require__("5416");

// EXTERNAL MODULE: ./src/components/cv-wrapper/_cv-wrapper.js
var _cv_wrapper = __webpack_require__("5d36");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-file-uploader/cv-file-uploader.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








const CONSTS = {
  STATES: {
    NONE: '',
    UPLOADING: 'uploading',
    COMPLETE: 'complete',
  },
};

/* harmony default export */ var cv_file_uploadervue_type_script_lang_js_ = ({
  name: 'CvFileUploader',
  components: { CvFormItem: cv_form_item["default"], CheckmarkFilled16: _16["a" /* default */], WarningFilled16: warning_filled_16["a" /* default */], Close16: close_16["a" /* default */], CvWrapper: _cv_wrapper["a" /* default */] },
  mixins: [uid_mixin["a" /* default */]],
  inheritAttrs: false,
  props: {
    clearOnReselect: Boolean,
    files: Array,
    label: String,
    helperText: String,
    initialStateUploading: Boolean,
    removable: Boolean,
    buttonLabel: {
      type: String,
      default: undefined,
      validator: val => {
        if (val !== undefined && "production" === 'development') {
          console.warn('CvFileUploader: button-label prop deprecated in favour of drop-target-label');
        }
        return true;
      },
    },
    dropTargetLabel: { type: String, default: undefined },
    removeAriaLabel: { type: String, default: 'Remove selected file' },
  },
  model: {
    prop: 'files',
    event: 'change',
  },
  created() {
    this.STATES = Object.freeze(CONSTS.STATES);
  },
  data() {
    return {
      internalFiles: [],
      allowDrop: false,
    };
  },
  mounted() {
    this.internalFiles = this.files ? this.files : [];
  },
  watch: {
    files() {
      this.internalFiles = this.files ? this.files : [];
    },
  },
  computed: {
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return {
        ...this.$listeners,
        change: event => this.onChange(event),
      };
    },
    isInvalid() {
      return index => {
        const result = this.internalFiles[index].invalidMessage && this.internalFiles[index].invalidMessage.length;
        return result;
      };
    },
    internalDropTargetLabel() {
      return this.dropTargetLabel || this.buttonLabel || 'Drag and drop files here or upload';
    },
    stateStyleOverides() {
      // <style carbon tweaks - DO NOT USE STYLE TAG as it causes SSR issues
      return { display: 'inline-flex', alignItems: 'center' };
    },
  },
  methods: {
    remove(index) {
      this.internalFiles.splice(index, 1);
      this.$emit('change', this.internalFiles);
    },
    addFiles(files) {
      for (const file of files) {
        this.internalFiles.push({
          state: this.initialStateUploading ? CONSTS.STATES.UPLOADING : CONSTS.STATES.NONE,
          file,
          invalidMessageTitle: '',
          invalidMessage: '',
        });
      }
      this.$emit('change', this.internalFiles);
    },
    onChange(ev) {
      if (ev.target.files.length !== 0 && this.clearOnReselect) {
        this.internalFiles = [];
      }
      this.addFiles(ev.target.files);
    },
    onShow() {
      this.$refs['file-input'].click();
    },
    setState(index, state) {
      if (['uploading', 'complete', ''].includes(state)) {
        this.internalFiles[index].state = state;
      }
    },
    clear() {
      this.internalFiles = [];
      this.$emit('change', this.internalFiles);
    },
    setInvalidMessage(index, message) {
      this.internalFiles[index].invalidMessage = message;
    },
    onDragEvent(evt) {
      // NOTE: Validation of dragged files is not currently done.
      // It may be possible to do this here or defer to the caller.
      // It is certainly possible for the user to remove files after they are dropped.

      if (Array.prototype.indexOf.call(evt.dataTransfer.types, 'Files') >= 0) {
        if (evt.type === 'dragover') {
          evt.preventDefault();
          const dropEffect = 'copy';
          if (Array.isArray(evt.dataTransfer.types)) {
            try {
              // IE11 throws a "permission denied" error accessing `.effectAllowed`
              evt.dataTransfer.effectAllowed = dropEffect;
            } catch (e) {
              // ignore
            }
          }
          evt.dataTransfer.dropEffect = dropEffect;
          this.allowDrop = true;
        }
        if (evt.type === 'dragleave') {
          this.allowDrop = false;
        }
        if (evt.type === 'drop') {
          evt.preventDefault();
          this.addFiles(evt.dataTransfer.files);
          this.allowDrop = false;
        }
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-file-uploader/cv-file-uploader.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_file_uploader_cv_file_uploadervue_type_script_lang_js_ = (cv_file_uploadervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-file-uploader/cv-file-uploader.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_file_uploader_cv_file_uploadervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_file_uploader = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "567b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("8bbf");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue__WEBPACK_IMPORTED_MODULE_0__);
// This module wires together the cv-content-switcher, cv-content-switcher-button and cv-content-switcher-content components.
// It allows the switcher content to appear in an unrelated location to the switcher


/* harmony default export */ __webpack_exports__["a"] = ({
  state: {},
  setState(ownerId, selected) {
    vue__WEBPACK_IMPORTED_MODULE_0___default.a.set(this.state, ownerId, selected);
  },
  remove(ownerId) {
    this.setState(ownerId, true); // make content visible if controller does not exist
    setTimeout(() => {
      delete this.state[ownerId];
    }, 1);
  },
  getState(ownerId) {
    if (this.state[ownerId] === undefined) {
      this.setState(ownerId, false);
    }
    return this.state[ownerId];
  },
});


/***/ }),

/***/ "5a13":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_WarningFilled20 = {
  name: 'WarningFilled20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '20',
      height: '20',
      viewBox: '0 0 20 20',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M10,1c-5,0-9,4-9,9s4,9,9,9s9-4,9-9S15,1,10,1z M9.2,5h1.5v7H9.2V5z M10,16c-0.6,0-1-0.4-1-1s0.4-1,1-1\ts1,0.4,1,1S10.6,16,10,16z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M9.2,5h1.5v7H9.2V5z M10,16c-0.6,0-1-0.4-1-1s0.4-1,1-1s1,0.4,1,1S10.6,16,10,16z",
        "data-icon-path": "inner-path",
        "opacity": "0"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_WarningFilled20);


/***/ }),

/***/ "5d36":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*
 * This component optionally wraps slotted content with the specified tag-type.
 *
 * If no tag-type is supplied then the slotted content is unwrapped.
 *
 *  Unwrapped slots do not recieve class, style or attributes attached to the wrapper
 *
 * NOTE: If used at the top level of a component in the unwrapped case your component still needs to have a single root node.
 *
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'CvWrapper',
  functional: true,
  props: {
    tagType: { type: String, default: undefined },
  },
  render(createElement, context) {
    if (context.props.tagType) {
      return createElement(
        context.props.tagType,
        {
          attrs: context.data.attrs,
          class: `${context.data.class || ''} ${context.data.staticClass || ''}`.trim(),
          style: { ...context.data.staticStyle, ...context.data.style },
          on: context.listeners,
        },
        context.slots().default
      );
    } else {
      return context.slots().default;
    }
  },
});


/***/ }),

/***/ "603b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tag/cv-tag.vue?vue&type=template&id=cf808264&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"cv-tag bx--tag",class:[
    ("bx--tag--" + _vm.tagKind),
    {
      'bx--tag--filter': _vm.isFilter,
      'bx--tag--disabled': _vm.disabled,
    } ],attrs:{"tabindex":!_vm.disabled ? 0 : undefined,"role":"listitem","title":_vm.title},on:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.stopPropagation();$event.preventDefault();return _vm.$emit('remove')},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.$emit('remove')}}},[_c('span',{staticClass:"bx--tag__label"},[_vm._v(_vm._s(_vm.label))]),(_vm.isFilter)?_c('button',{staticClass:"bx--tag__close-icon",attrs:{"aria-label":_vm.clearAriaLabel},on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onRemove($event)}}},[_c('Close16')],1):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tag/cv-tag.vue?vue&type=template&id=cf808264&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/16.js
var _16 = __webpack_require__("5416");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tag/cv-tag.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



const tagKinds = [
  'red',
  'magenta',
  'purple',
  'blue',
  'cyan',
  'teal',
  'green',
  'gray',
  'cool-gray',
  'warm-gray',
  'high-contrast',
];

/* harmony default export */ var cv_tagvue_type_script_lang_js_ = ({
  name: 'CvTag',
  components: { Close16: _16["a" /* default */] },
  props: {
    clearAriaLabel: { type: String, default: 'Clear filter' },
    disabled: Boolean,
    label: { type: String, required: true },
    kind: {
      type: String,
      default: tagKinds[0],
      validator(val) {
        if (val === 'filter' && "production" === 'development') {
          console.warn('DEPRECARTED: Prefer props.filter (bool)');
          return true;
        }
        return tagKinds.includes(val);
      },
    },
    filter: {
      type: Boolean,
      default: false,
    },
  },
  computed: {
    isFilter() {
      return this.filter || this.kind === 'filter';
    },
    tagKind() {
      return this.kind === 'filter' ? 'high-contrast' : this.kind;
    },
    title() {
      return this.isFilter ? this.clearAriaLabel : null;
    },
  },
  methods: {
    onRemove() {
      if (!this.disabled) {
        this.$emit('remove');
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-tag/cv-tag.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tag_cv_tagvue_type_script_lang_js_ = (cv_tagvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tag/cv-tag.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tag_cv_tagvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_tag = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "604d":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _objectSpread2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return _defineProperty; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}




/***/ }),

/***/ "6093":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tooltip/cv-definition-tooltip.vue?vue&type=template&id=4988d124&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-definition-tooltip bx--tooltip--definition bx--tooltip--a11y"},[_c('button',{staticClass:"bx--tooltip__trigger bx--tooltip--a11y bx--tooltip__trigger--definition",class:("bx--tooltip--" + _vm.direction + " bx--tooltip--align-" + _vm.alignment),attrs:{"aria-describedby":(_vm.uid + "-label"),"type":"button"}},[_vm._v("\n    "+_vm._s(_vm.term)+"\n  ")]),_c('div',{staticClass:"bx--assistive-text",attrs:{"id":(_vm.uid + "-label"),"role":"tooltip"}},[_vm._v(_vm._s(_vm.definition))])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-definition-tooltip.vue?vue&type=template&id=4988d124&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tooltip/cv-definition-tooltip.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_definition_tooltipvue_type_script_lang_js_ = ({
  name: 'CvDefinitionTooltip',
  mixins: [uid_mixin["a" /* default */]],
  props: {
    alignment: { type: String, default: 'center', validator: val => ['start', 'center', 'end'].includes(val) },
    definition: { type: String, required: true },
    direction: {
      type: String,
      default: 'top',
      validator(val) {
        const validValues = ['top', 'bottom'];
        const valid = validValues.includes(val);
        if (!valid) {
          console.warn(`CVDefinitionTooltip.direction must be one of the following: ${validValues}`);
        }
        return valid;
      },
    },
    term: { type: String, required: true },
  },
});

// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-definition-tooltip.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tooltip_cv_definition_tooltipvue_type_script_lang_js_ = (cv_definition_tooltipvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-definition-tooltip.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tooltip_cv_definition_tooltipvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_definition_tooltip = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "6368":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_CheckmarkFilled16 = {
  name: 'CheckmarkFilled16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M8,1C4.1,1,1,4.1,1,8c0,3.9,3.1,7,7,7s7-3.1,7-7C15,4.1,11.9,1,8,1z M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z",
        "data-icon-path": "inner-path",
        "opacity": "0"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_CheckmarkFilled16);


/***/ }),

/***/ "63686":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-number-input/cv-number-input.vue?vue&type=template&id=38580ffe&
var cv_number_inputvue_type_template_id_38580ffe_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-wrapper',{staticClass:"cv-number-input bx--form-item",attrs:{"tag-type":_vm.formItem ? 'div' : ''}},[_c('div',{staticClass:"bx--number",class:{
      'bx--number--light': _vm.theme === 'light',
      'bx--number--helpertext': _vm.isHelper,
      'cv-number-input': !_vm.formItem,
      'bx--number--mobile': _vm.mobile,
    },attrs:{"data-numberinput":"","data-invalid":_vm.isInvalid}},[_c('label',{staticClass:"bx--label",attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.label))]),(_vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text"},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e(),_c('div',{staticClass:"bx--number__input-wrapper"},[(_vm.mobile)?_c('button',{staticClass:"bx--number__control-btn down-icon",attrs:{"type":"button","aria-label":_vm.ariaLabelForDownButton,"disabled":_vm.disabled},on:{"click":_vm.doDown}},[_c('CaretDownGlyph')],1):_vm._e(),_c('input',_vm._g(_vm._b({ref:"input",attrs:{"id":_vm.uid,"type":"number","disabled":_vm.disabled,"step":_vm.step,"min":_vm.min,"max":_vm.max},domProps:{"value":_vm.internalValue}},'input',_vm.$attrs,false),_vm.inputListeners)),(_vm.isInvalid && !_vm.mobile)?_c('WarningFilled16',{staticClass:"bx--number__invalid"}):_vm._e(),(!_vm.mobile)?_c('div',{staticClass:"bx--number__controls"},[_c('button',{staticClass:"bx--number__control-btn up-icon",attrs:{"type":"button","aria-label":_vm.ariaLabelForUpButton,"disabled":_vm.disabled},on:{"click":_vm.doUp}},[_c('CaretUpGlyph')],1),_c('button',{staticClass:"bx--number__control-btn down-icon",attrs:{"type":"button","aria-label":_vm.ariaLabelForDownButton,"disabled":_vm.disabled},on:{"click":_vm.doDown}},[_c('CaretDownGlyph')],1)]):_c('button',{staticClass:"bx--number__control-btn up-icon",attrs:{"type":"button","aria-label":_vm.ariaLabelForUpButton,"disabled":_vm.disabled},on:{"click":_vm.doUp}},[_c('CaretUpGlyph')],1)],1),(_vm.isInvalid)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-number-input/cv-number-input.vue?vue&type=template&id=38580ffe&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/caret--down/index.js



var virtual_CaretDownGlyph = {
  name: 'CaretDownGlyph',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '8',
      height: '4',
      viewBox: '0 0 8 4',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "8,0 4,4 0,0"
      }
    }), children]);
  }
};

/* harmony default export */ var caret_down = (virtual_CaretDownGlyph);

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/caret--up/index.js



var virtual_CaretUpGlyph = {
  name: 'CaretUpGlyph',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '8',
      height: '4',
      viewBox: '0 0 8 4',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "0,4 4,0 8,4"
      }
    }), children]);
  }
};

/* harmony default export */ var caret_up = (virtual_CaretUpGlyph);

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var _16 = __webpack_require__("f47d");

// EXTERNAL MODULE: ./src/components/cv-wrapper/_cv-wrapper.js
var _cv_wrapper = __webpack_require__("5d36");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-number-input/cv-number-input.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ var cv_number_inputvue_type_script_lang_js_ = ({
  name: 'CvNumberInput',
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  components: { CaretDownGlyph: caret_down, CaretUpGlyph: caret_up, WarningFilled16: _16["a" /* default */], CvWrapper: _cv_wrapper["a" /* default */] },
  inheritAttrs: false,
  props: {
    disabled: Boolean,
    formItem: { type: Boolean, default: true },
    helperText: { type: String, default: undefined },
    invalidMessage: { type: String, default: undefined },
    label: { type: String, default: '' },
    value: { type: [String, Number], default: '' },
    invalid: /* deprecate */ {
      type: Boolean,
      default: undefined,
      validator(val) {
        if (val !== undefined && "production" === 'development') {
          console.warn('CvNumberInput: invalid prop deprecated in favour of invalidMessage');
        }
        return true;
      },
    },
    ariaLabelForUpButton: { type: String, default: 'Increase number input' },
    ariaLabelForDownButton: { type: String, default: 'Decrease number input' },
    min: { type: [String, Number], default: undefined },
    max: { type: [String, Number], default: undefined },
    step: { type: [String, Number], default: undefined },
    mobile: Boolean,
  },
  data() {
    return {
      internalValue: 0,
      isHelper: false,
      isInvalid: false,
    };
  },
  mounted() {
    this.internalValue = this.valueAsString(this.value);
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  watch: {
    value() {
      // NOTE: DELIBERATE USE OF != TO COMPARE this.interanlValue and this.value
      if (typeof this.value !== 'number' || this.internalValue != this.value) {
        // prevents this.value of 1 updating this.internalValue of 1.0
        // which improves the typing experience
        // does not matter if this.value is string or number
        this.internalValue = this.valueAsString(this.value);
      }
    },
  },
  computed: {
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return Object.assign({}, this.$listeners, {
        input: ev => this.onInput(ev.target.value),
      });
    },
  },
  methods: {
    onInput(val) {
      this.internalValue = val;
      this.emitValue();
    },
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
    doUp() {
      this.$refs.input.stepUp();
      this.onInput(this.$refs.input.value);
    },
    doDown() {
      this.$refs.input.stepDown();
      this.onInput(this.$refs.input.value);
    },
    emitValue() {
      if (typeof this.value === 'number') {
        if (this.internalValue != this.value) {
          const ePos = this.internalValue.indexOf('e-');
          const dotPos = this.internalValue.indexOf('.');
          if (ePos > -1 || dotPos > -1) {
            this.$emit('input', parseFloat(this.internalValue));
          } else {
            this.$emit('input', parseInt(this.internalValue));
          }
        }
      } else {
        this.$emit('input', this.internalValue);
      }
    },
    valueAsString(val) {
      let strVal;
      if (typeof val === 'number') {
        strVal = Number.isFinite(val) ? val.toString() : '';
      } else {
        strVal = val;
      }
      return strVal;
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-number-input/cv-number-input.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_number_input_cv_number_inputvue_type_script_lang_js_ = (cv_number_inputvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-number-input/cv-number-input.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_number_input_cv_number_inputvue_type_script_lang_js_,
  cv_number_inputvue_type_template_id_38580ffe_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_number_input = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "6586":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-multi-select/cv-multi-select.vue?vue&type=template&id=2dc68e46&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-multi-select bx--multi-select__wrapper bx--list-box__wrapper",class:{
    'bx--multi-select__wrapper--inline bx--list-box__wrapper--inline': _vm.inline,
    'bx--multi-select__wrapper--inline--invalid bx--list-box__wrapper--inline--invalid': _vm.inline && _vm.isInvalid,
    'bx--multi-select--filterable': _vm.filterable,
  },on:{"focusout":_vm.onFocusOut}},[(_vm.title)?_c('label',{staticClass:"bx--label",class:{ 'bx--label--disabled': _vm.disabled },attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.title))]):_vm._e(),(!_vm.inline && _vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text",class:{ 'bx--form__helper-text--disabled': _vm.disabled }},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e(),_c('div',_vm._b({staticClass:"bx--multi-select bx--list-box",class:{
      'bx--list-box--light': _vm.theme === 'light',
      'bx--list-box--expanded': _vm.open,
      'bx--multi-select--invalid': _vm.isInvalid,
      'bx--multi-select--disabled bx--list-box--disabled': _vm.disabled,
      'bx--multi-select--inline bx--list-box--inline': _vm.inline,
      'bx--multi-select--selected': _vm.dataValue.length > 0,
      'bx--combo-box': _vm.filterable,
    },attrs:{"role":"listbox","tabindex":"-1","data-invalid":_vm.isInvalid},on:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.onDown($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.onUp($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.onEnter($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.onEsc($event)}],"click":_vm.onClick}},'div',_vm.$attrs,false),[(_vm.isInvalid)?_c('WarningFilled16',{staticClass:"bx--list-box__invalid-icon"}):_vm._e(),_c('div',{ref:"button",staticClass:"bx--list-box__field",attrs:{"role":"button","aria-haspopup":"true","aria-expanded":_vm.open,"aria-owns":_vm.uid,"aria-controls":_vm.uid,"tabindex":"0","type":"button","aria-label":_vm.open ? 'close menu' : 'open menu',"data-toggle":"true"}},[_c('cv-tag',{directives:[{name:"show",rawName:"v-show",value:(_vm.dataValue.length > 0),expression:"dataValue.length > 0"}],ref:"tag",class:{ 'bx--list-box__selection--multi': _vm.filterable && _vm.dataValue.length > 0 },style:(_vm.filterableTagOverride),attrs:{"disabled":_vm.disabled,"kind":"filter","label":("" + (_vm.dataValue.length))},on:{"remove":_vm.clearValues}}),(!_vm.filterable)?_c('span',{staticClass:"bx--list-box__label"},[_vm._v(_vm._s(_vm.label))]):[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filter),expression:"filter"}],ref:"input",staticClass:"bx--text-input",attrs:{"aria-controls":_vm.uid,"aria-autocomplete":"list","role":"combobox","aria-expanded":_vm.open,"autocomplete":"off","placeholder":_vm.label},domProps:{"value":(_vm.filter)},on:{"input":[function($event){if($event.target.composing){ return; }_vm.filter=$event.target.value},_vm.onInput],"focus":_vm.inputFocus,"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.inputClick($event)}}}),(_vm.filter.length > 0)?_c('div',{staticClass:"bx--list-box__selection",attrs:{"role":"button","tabindex":"0","title":"Clear filter"},on:{"click":function($event){$event.stopPropagation();return _vm.clearFilter($event)},"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.stopPropagation();$event.preventDefault();return _vm.clearFilter($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.stopPropagation();$event.preventDefault();}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.stopPropagation();$event.preventDefault();return _vm.clearFilter($event)}}},[_c('Close16')],1):_vm._e()],_c('div',{staticClass:"bx--list-box__menu-icon",class:{ 'bx--list-box__menu-icon--open': _vm.open },attrs:{"role":"button"}},[_c('chevron-down-16',{attrs:{"aria-label":_vm.open ? 'Close menu' : 'Open menu'}})],1)],2),_c('div',{ref:"list",staticClass:"bx--list-box__menu",attrs:{"id":_vm.uid,"role":"listbox"}},_vm._l((_vm.dataOptions),function(item,index){return _c('div',{key:("multi-select-" + index),ref:"option",refInFor:true,staticClass:"bx--list-box__menu-item",class:{ 'bx--list-box__menu-item--highlighted': _vm.highlighted === item.value },on:{"click":function($event){$event.stopPropagation();$event.preventDefault();return _vm.onItemClick(item.value)},"mousemove":function($event){return _vm.onMousemove(item.value)},"mousedown":function($event){$event.preventDefault();}}},[_c('div',{staticClass:"bx--list-box__menu-item__option"},[_c('cv-checkbox',{staticStyle:{"pointer-events":"none"},attrs:{"tabindex":"-1","form-item":false,"value":item.value,"name":item.name,"data-test":item.name,"label":item.label},model:{value:(_vm.dataValue),callback:function ($$v) {_vm.dataValue=$$v},expression:"dataValue"}})],1)])}),0)],1),(_vm.isInvalid && !_vm.inline)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-multi-select/cv-multi-select.vue?vue&type=template&id=2dc68e46&

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var _16 = __webpack_require__("f47d");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/16.js
var chevron_down_16 = __webpack_require__("ae56");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/16.js
var close_16 = __webpack_require__("5416");

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/components/cv-checkbox/cv-checkbox.vue + 4 modules
var cv_checkbox = __webpack_require__("eade");

// EXTERNAL MODULE: ./src/components/cv-tag/cv-tag.vue + 4 modules
var cv_tag = __webpack_require__("603b");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-multi-select/cv-multi-select.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









const TOP_AFTER_REOPEN = 0;
const TOP = 1;
const FIXED = 2;
const selectionFeedbackOptions = ['top-after-reopen', 'top', 'fixed'];

/* harmony default export */ var cv_multi_selectvue_type_script_lang_js_ = ({
  name: 'CvMultiSelect',
  inheritAttrs: false,
  mixins: [theme_mixin["a" /* default */], uid_mixin["a" /* default */]],
  components: { WarningFilled16: _16["a" /* default */], ChevronDown16: chevron_down_16["a" /* default */], CvCheckbox: cv_checkbox["default"], CvTag: cv_tag["default"], Close16: close_16["a" /* default */] },
  props: {
    autoFilter: Boolean,
    autoHighlight: Boolean,
    disabled: Boolean,
    inline: Boolean,
    invalidMessage: { type: String, default: undefined },
    helperText: { type: String, default: undefined },
    title: String,
    label: {
      type: String,
      default: 'Choose options',
    },
    highlight: String,
    value: { type: Array, default: () => [] },
    // initial value of the multi-select,
    // options in the form
    // [{ label: '', value: '', name: ''}]
    options: {
      type: Array,
      required: true,
      validator(list) {
        const result = list.every(
          item => typeof item.name === 'string' && typeof item.label === 'string' && typeof item.value === 'string'
        );
        if (!result) {
          console.warn('CvMultiSelect - all options must have name, label and value');
        }
        return result;
      },
    },
    selectionFeedback: {
      type: String,
      default: selectionFeedbackOptions[TOP_AFTER_REOPEN],
      validator(val) {
        if (!selectionFeedbackOptions.includes(val)) {
          console.warn(`CvMultiSelect: invalid selectionFeedback "${val}", use one of ${selectionFeedbackOptions}`);
          return false;
        }
        return true;
      },
    },
    filterable: Boolean,
  },
  data() {
    return {
      open: false,
      dataOptions: null,
      dataValue: '',
      dataHighlighted: null,
      dataFilter: '',
      isHelper: false,
      isInvalid: false,
    };
  },
  model: {
    prop: 'value',
    event: 'change',
  },
  watch: {
    highlight() {
      this.highlighted = this.highlight;
    },
    value() {
      this.dataValue = this.value.filter(item => this.dataOptions.some(opt => opt.value === item.trim()));
    },
    options() {
      this.updateOptions();
    },
    selectionFeedback() {
      this.updateOptions();
    },
  },
  created() {
    this.updateOptions();
    this.dataValue = this.value.filter(item => this.dataOptions.some(opt => opt.value === item.trim()));
  },
  mounted() {
    this.highlighted = this.value ? this.value : this.highlight; // override highlight with value if provided
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  computed: {
    highlighted: {
      get() {
        return this.dataHighlighted;
      },
      set(val) {
        let firstMatchIndex = this.dataOptions.findIndex(item => item.value === val);
        if (firstMatchIndex < 0) {
          firstMatchIndex = this.dataOptions.length ? 0 : -1;
          this.dataHighlighted = firstMatchIndex >= 0 ? this.dataOptions[0].value : '';
        } else {
          this.dataHighlighted = val;
        }
        if (firstMatchIndex >= 0) {
          this.$nextTick(() => {
            // $nextTick to prevent highlight check ahead of list update on filter
            this.checkHighlightPosition(firstMatchIndex);
          });
        }
      },
    },
    filter: {
      get() {
        return this.dataFilter;
      },
      set(val) {
        this.dataFilter = val ? val : '';
        this.$emit('filter', val);
      },
    },
    filterableTagOverride() {
      // <style carbon tweaks - DO NOT USE STYLE TAG as it causes SSR issues
      return this.filterable ? { marginTop: 0, marginBottom: 0 } : {};
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
    clearFilter() {
      this.filter = '';
      this.$refs.input.focus();
      this.doOpen(true);
      this.updateOptions();
    },
    checkHighlightPosition(newHiglight) {
      if (this.$refs.list && this.$refs.option) {
        if (this.$refs.list.scrollTop > this.$refs.option[newHiglight].offsetTop) {
          this.$refs.list.scrollTop = this.$refs.option[newHiglight].offsetTop;
        } else if (
          this.$refs.list.scrollTop + this.$refs.list.clientHeight <
          this.$refs.option[newHiglight].offsetTop + this.$refs.option[newHiglight].offsetHeight
        ) {
          this.$refs.list.scrollTop =
            this.$refs.option[newHiglight].offsetTop +
            this.$refs.option[newHiglight].offsetHeight -
            this.$refs.list.clientHeight;
        }
      }
    },
    doMove(up) {
      if (this.dataOptions.length > 0) {
        // requery could have changed
        const currentHighlight = this.dataOptions.findIndex(item => item.value === this.highlighted);
        let newHiglight;

        if (up) {
          if (currentHighlight <= 0) {
            newHiglight = this.dataOptions.length - 1;
          } else {
            newHiglight = currentHighlight - 1;
          }
        } else {
          if (currentHighlight >= this.dataOptions.length - 1) {
            newHiglight = 0;
          } else {
            newHiglight = currentHighlight + 1;
          }
        }
        this.highlighted = this.dataOptions[newHiglight].value;
        // this.checkHighlightPosition(newHiglight);
      }
    },
    updateOptions() {
      if (this.autoFilter) {
        const escFilter = this.filter.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
        const pat = new RegExp(escFilter, 'iu');
        this.dataOptions = this.options.filter(opt => pat.test(opt.label)).slice(0);
      } else {
        this.dataOptions = this.options.slice(0);
      }
      if (this.highlight !== this.highlighted) {
        this.highlighted = this.highlight;
      }

      // multi select unique part
      if (!this.sorting && this.selectionFeedback !== selectionFeedbackOptions[FIXED]) {
        // if included in data value move to top
        this.dataOptions.sort(
          (a, b) => (this.dataValue.includes(a.value) ? -1 : 1) - (this.dataValue.includes(b.value) ? -1 : 1)
        );
      }
    },
    updateHighlight() {
      let firstMatchIndex;
      if (this.autoHighlight && this.dataOptions.length > 0) {
        // then highlight first match
        const filterRegex = new RegExp(this.filter, 'iu');
        firstMatchIndex = this.dataOptions.findIndex(item => filterRegex.test(item.label));
        if (firstMatchIndex < 0) {
          firstMatchIndex = 0;
        }
        this.highlighted = this.dataOptions[firstMatchIndex].value;
        // this.checkHighlightPosition(firstMatchIndex);
      }
    },
    onInput() {
      this.doOpen(true);

      this.updateOptions();
      this.updateHighlight();
    },
    doOpen(newVal) {
      if (newVal && !this.open && this.selectionFeedback === selectionFeedbackOptions[TOP_AFTER_REOPEN]) {
        this.updateOptions();
      }
      this.open = newVal;
    },
    onDown() {
      if (!this.open) {
        this.doOpen(true);
      } else {
        this.doMove(false);
      }
    },
    onUp() {
      if (this.open) {
        this.doMove(true);
      }
    },
    inputOrButtonFocus() {
      if (this.filterable) {
        this.$refs.input.focus();
      } else {
        this.$refs.button.focus();
      }
    },
    onEsc() {
      this.doOpen(false);
      this.inputOrButtonFocus();
    },
    onEnter() {
      if (this.open) {
        this.onItemClick(this.highlighted);
        this.$refs.input.focus();
        this.filter = '';

        this.doOpen(false);
        this.updateOptions();
      } else {
        this.doOpen(true);
      }
    },
    onClick(ev) {
      if (this.disabled) {
        ev.preventDefault();
      } else {
        if (this.open) {
          this.inputOrButtonFocus();
          // done this way round otherwise will auto open on focus.
          this.$nextTick(() => {
            this.doOpen(false);
          });
        } else {
          this.doOpen(true);
          this.inputOrButtonFocus();
        }
      }
    },
    clearValues() {
      this.dataValue = [];
      this.inputOrButtonFocus();
      this.$emit('change', this.dataValue);
    },
    onFocusOut(ev) {
      if (!this.$el.contains(ev.relatedTarget) && !this.$refs.tag.$el.contains(ev.target)) {
        this.doOpen(false);
      }
    },
    onMousemove(val) {
      this.highlighted = val;
    },
    onItemClick(val) {
      const index = this.dataValue.findIndex(item => val === item);
      if (index > -1) {
        this.dataValue.splice(index, 1);
      } else {
        this.dataValue.push(val);
      }
      if (this.selectionFeedback === selectionFeedbackOptions[TOP]) {
        this.updateOptions();
      }
      this.$refs.button.focus();
      this.$emit('change', this.dataValue);
    },
    inputClick() {
      if (!this.open) {
        this.doOpen(true);
      }
    },
    inputFocus() {
      this.doOpen(true);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-multi-select/cv-multi-select.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_multi_select_cv_multi_selectvue_type_script_lang_js_ = (cv_multi_selectvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-multi-select/cv-multi-select.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_multi_select_cv_multi_selectvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_multi_select = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "6590":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-skeleton-text/cv-skeleton-text.vue?vue&type=template&id=c2fccf32&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{style:({ width: _vm.width })},_vm._l((_vm.lines),function(line,index){return _c('p',{key:index,staticClass:"bx--skeleton__text",class:{ 'bx--skeleton__heading': _vm.heading },style:({ width: line.width })})}),0)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-skeleton-text/cv-skeleton-text.vue?vue&type=template&id=c2fccf32&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-skeleton-text/cv-skeleton-text.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_skeleton_textvue_type_script_lang_js_ = ({
  name: 'CvSkeletonText',
  props: {
    width: { type: String, default: '100%' },
    heading: { type: Boolean, default: false },
    lineCount: { type: Number, default: 3 },
    paragraph: { type: Boolean, default: false },
  },
  methods: {
    getRandomInt: function(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    },
    calcWidth: function() {
      let width = this.width;
      if (this.paragraph) {
        const { num, unit } = this.widthObj;
        if (unit === '%') {
          const randomWidth = this.getRandomInt(0, 75) + 'px';
          width = `calc(${width} - ${randomWidth})`;
        } else if (unit === 'px') {
          width = this.getRandomInt(num - 75, num) + 'px';
        }
      }
      return width;
    },
  },
  computed: {
    widthObj: function() {
      const widthObj = { num: parseInt(this.width, 10) };
      if (this.width.includes('px')) {
        widthObj.unit = 'px';
      }
      if (this.width.includes('%')) {
        widthObj.unit = '%';
      }
      return widthObj;
    },
    lines: function() {
      return Array.from(
        {
          length: this.paragraph ? this.lineCount : 1,
        },
        () => ({
          width: this.calcWidth(),
        })
      );
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-skeleton-text/cv-skeleton-text.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_skeleton_text_cv_skeleton_textvue_type_script_lang_js_ = (cv_skeleton_textvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-skeleton-text/cv-skeleton-text.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_skeleton_text_cv_skeleton_textvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_skeleton_text = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "68c3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toggle/cv-toggle-skeleton.vue?vue&type=template&id=c0690bde&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-toggle bx--form-item"},[_c('label',{staticClass:"bx--toggle__label bx--skeleton",attrs:{"for":_vm.uid,"aria-label":_vm.label ? 'Toggle is loading' : _vm.label}},[_c('span',{staticClass:"bx--toggle__label-text"}),_c('span',{staticClass:"bx--toggle__text--left"}),_c('span',{staticClass:"bx--toggle__appearance"}),_c('span',{staticClass:"bx--toggle__text--right"})])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toggle/cv-toggle-skeleton.vue?vue&type=template&id=c0690bde&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toggle/cv-toggle-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var cv_toggle_skeletonvue_type_script_lang_js_ = ({
  name: 'CvToggleSkeleton',
  mixins: [uid_mixin["a" /* default */]],
  props: {
    label: { type: String, default: 'Toggle is loading' },
  },
});

// CONCATENATED MODULE: ./src/components/cv-toggle/cv-toggle-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toggle_cv_toggle_skeletonvue_type_script_lang_js_ = (cv_toggle_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toggle/cv-toggle-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toggle_cv_toggle_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toggle_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "69ba":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_CheckmarkFilled20 = {
  name: 'CheckmarkFilled20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '20',
      height: '20',
      viewBox: '0 0 20 20',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M10,1c-4.9,0-9,4.1-9,9s4.1,9,9,9s9-4,9-9S15,1,10,1z M8.7,13.5l-3.2-3.2l1-1l2.2,2.2l4.8-4.8l1,1L8.7,13.5z"
      }
    }), createElement('path', {
      attrs: {
        "fill": "none",
        "d": "M8.7,13.5l-3.2-3.2l1-1l2.2,2.2l4.8-4.8l1,1L8.7,13.5z",
        "data-icon-path": "inner-path",
        "opacity": "0"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_CheckmarkFilled20);


/***/ }),

/***/ "6e60":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-file-uploader/cv-file-uploader-skeleton.vue?vue&type=template&id=0b82685d&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--form-item"},[_c('cv-skeleton-text',{attrs:{"heading":"","width":"100px"}}),_c('cv-skeleton-text',{staticClass:"bx--label-description",attrs:{"width":"225px"}}),_c('cv-button-skeleton')],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-file-uploader/cv-file-uploader-skeleton.vue?vue&type=template&id=0b82685d&

// EXTERNAL MODULE: ./src/components/cv-skeleton-text/cv-skeleton-text.vue + 4 modules
var cv_skeleton_text = __webpack_require__("6590");

// EXTERNAL MODULE: ./src/components/cv-button/cv-button-skeleton.vue + 4 modules
var cv_button_skeleton = __webpack_require__("6fc9");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-file-uploader/cv-file-uploader-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_file_uploader_skeletonvue_type_script_lang_js_ = ({
  name: 'CvFileUploaderSkeleton',
  components: {
    CvSkeletonText: cv_skeleton_text["default"],
    CvButtonSkeleton: cv_button_skeleton["default"],
  },
});

// CONCATENATED MODULE: ./src/components/cv-file-uploader/cv-file-uploader-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_file_uploader_cv_file_uploader_skeletonvue_type_script_lang_js_ = (cv_file_uploader_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-file-uploader/cv-file-uploader-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_file_uploader_cv_file_uploader_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_file_uploader_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "6fc9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-button-skeleton.vue?vue&type=template&id=0b4144f0&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{class:_vm.buttonClasses,attrs:{"disabled":"","type":"button"}})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-button/cv-button-skeleton.vue?vue&type=template&id=0b4144f0&

// EXTERNAL MODULE: ./src/mixins/carbon-prefix-mixin.js
var carbon_prefix_mixin = __webpack_require__("099b");

// EXTERNAL MODULE: ./src/components/cv-button/button-mixin.js
var button_mixin = __webpack_require__("eb1f");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-button-skeleton.vue?vue&type=script&lang=js&
//
//
//
//




/* harmony default export */ var cv_button_skeletonvue_type_script_lang_js_ = ({
  name: 'CvButtonSkeleton',
  mixins: [button_mixin["a" /* default */], carbon_prefix_mixin["a" /* default */]],
  computed: {
    buttonClasses() {
      return this.buttonClassOpts({ skeleton: true });
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-button/cv-button-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_button_cv_button_skeletonvue_type_script_lang_js_ = (cv_button_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-button/cv-button-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_button_cv_button_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_button_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "7018":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-skeleton.vue?vue&type=template&id=025a8d9e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-data-table',_vm._g(_vm._b({attrs:{"skeleton":"","data":_vm.data,"columns":_vm.cols}},'cv-data-table',_vm.$attrs,false),_vm.$listeners),[(_vm.hasBatchActions)?_c('template',{slot:"helper-text"},[_vm._t("helper-text")],2):_vm._e(),(_vm.hasBatchActions)?_c('template',{slot:"batch-actions"},[_vm._t("batch-actions")],2):_vm._e(),(_vm.hasActions)?_c('template',{slot:"actions"},[_vm._t("actions")],2):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-skeleton.vue?vue&type=template&id=025a8d9e&

// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table.vue + 11 modules
var cv_data_table = __webpack_require__("def8");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



const DEFAULTS = {
  COLS: 5,
  ROWS: 5,
};

/* harmony default export */ var cv_data_table_skeletonvue_type_script_lang_js_ = ({
  name: 'CvDataTableSkeleton',
  components: {
    CvDataTable: cv_data_table["default"],
  },
  props: {
    columns: { type: [Array, Number], default: DEFAULTS.COLS },
    hasExpandables: Boolean,
    rows: { type: Number, default: DEFAULTS.ROWS },
  },
  data() {
    return {
      hasActions: false,
      hasHelperText: false,
      hasBatchActions: false,
    };
  },
  mounted() {
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  computed: {
    data() {
      return [...Array(Math.max(this.rows, 1))].map(() => Array(this.cols.length).fill(''));
    },
    cols() {
      return typeof this.columns !== 'number' ? this.columns : Array(Math.max(this.columns, 1)).fill('');
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.hasBatchActions = !!this.$slots['batch-actions'];
      this.hasHelperText = !!this.$slots['helper-text'];
      this.hasActions = !!this.$slots['actions'];
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_data_table_cv_data_table_skeletonvue_type_script_lang_js_ = (cv_data_table_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_data_table_cv_data_table_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_data_table_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "71cc":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-dropdown/cv-dropdown.vue?vue&type=template&id=2c47caf7&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:{ 'bx--form-item': _vm.formItem }},[_c('div',{staticClass:"bx--dropdown__wrapper",class:{ 'bx--dropdown__wrapper--inline': _vm.inline, 'cv-dropdown': !_vm.formItem },style:(_vm.wrapperStyleOverride)},[(_vm.label)?_c('span',{staticClass:"bx--label",class:{ 'bx--label--disabled': _vm.disabled },attrs:{"id":(_vm.uid + "-label")}},[_vm._v("\n      "+_vm._s(_vm.label)+"\n    ")]):_vm._e(),(!_vm.inline && _vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text",class:{ 'bx--form__helper-text--disabled': _vm.disabled },attrs:{"aria-disabled":_vm.disabled}},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e(),_c('div',_vm._b({staticClass:"bx--dropdown",class:{
        'bx--dropdown--light': _vm.theme === 'light',
        'bx--dropdown--up': _vm.up,
        'bx--dropdown--open': _vm.open,
        'bx--dropdown--invalid': _vm.isInvalid,
        'bx--dropdown--disabled': _vm.disabled,
        'bx--dropdown--inline': _vm.inline,
        'bx--dropdown--show-selected': !_vm.hideSelected,
      },attrs:{"data-dropdown":"","data-value":_vm.internalValue,"data-invalid":_vm.isInvalid},on:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.onDown($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.onUp($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.onClick($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.onEsc($event)}],"click":_vm.onClick}},'div',_vm.$attrs,false),[_c('button',{staticClass:"bx--dropdown-text",attrs:{"aria-haspopup":"true","aria-expanded":_vm.open,"aria-controls":(_vm.uid + "-menu"),"aria-labelledby":(_vm.uid + "-label " + _vm.uid + "-value"),"type":"button"}},[(_vm.isInvalid && _vm.inline)?_c('WarningFilled16',{staticClass:"bx--dropdown__invalid-icon"}):_vm._e(),_c('span',{staticClass:"bx--dropdown-text__inner",attrs:{"id":(_vm.uid + "-value"),"data-test":"internalCaption"},domProps:{"innerHTML":_vm._s(_vm.internalCaption)}}),_c('span',{staticClass:"bx--dropdown__arrow-container"},[_c('span',{staticClass:"bx--dropdown__arrow",style:(_vm.chevronStyleOveride)},[_c('chevron-down-glyph')],1)])],1),_c('ul',{ref:"droplist",staticClass:"bx--dropdown-list",attrs:{"id":(_vm.uid + "-menu"),"role":"menu","aria-hidden":!_vm.open,"wh-menu-anchor":"left","aria-labelledby":(_vm.uid + "-label")}},[_vm._t("default")],2)]),(_vm.isInvalid && _vm.inline)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()]),(_vm.isInvalid && !_vm.inline)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown.vue?vue&type=template&id=2c47caf7&

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var _16 = __webpack_require__("f47d");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/index.js
var chevron_down = __webpack_require__("fa89");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-dropdown/cv-dropdown.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var cv_dropdownvue_type_script_lang_js_ = ({
  name: 'CvDropdown',
  inheritAttrs: false,
  mixins: [theme_mixin["a" /* default */], uid_mixin["a" /* default */]],
  components: { WarningFilled16: _16["a" /* default */], ChevronDownGlyph: chevron_down["a" /* default */] },
  props: {
    disabled: Boolean,
    formItem: { type: Boolean, default: true },
    inline: Boolean,
    invalidMessage: { type: String, default: undefined },
    helperText: { type: String, default: undefined },
    label: String,
    placeholder: {
      type: String,
      default: 'Choose an option',
    },
    up: Boolean,
    value: String, // initial value of the dropdown,
    hideSelected: Boolean,
  },
  data() {
    return {
      open: false,
      dataValue: this.value,
      isHelper: false,
      isInvalid: false,
      selectedChild: null,
    };
  },
  created() {
    // add these on created otherwise cv:mounted is too late.
    this.$on('cv:mounted', srcComponent => this.onCvMount(srcComponent));
    this.$on('cv:beforeDestroy', srcComponent => this.onCvBeforeDestroy(srcComponent));
  },
  mounted() {
    this.$el.addEventListener('focusout', ev => {
      if (ev.relatedTarget === null || !this.$el.contains(ev.relatedTarget)) {
        this.open = false;
      }
    });
    this.internalValue = this.internalValue; // forces update of value
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  model: {
    prop: 'value',
    event: 'change',
  },
  watch: {
    value(val) {
      this.internalValue = val;
    },
  },
  computed: {
    internalCaption() {
      if (this.selectedChild) {
        return this.selectedChild.internalContent;
      } else {
        return this.placeholder;
      }
    },
    internalValue: {
      get() {
        return this.dataValue;
      },
      set(val) {
        const childItems = this.dropdownItems();

        for (let index in childItems) {
          let child = childItems[index];
          let selected = child.value === val;
          child.internalSelected = selected;

          if (selected) {
            this.selectedChild = child;
          }
        }

        if (this.dataValue !== val) {
          // only raise event on change
          this.dataValue = val;
          this.$emit('change', this.dataValue);
        }
      },
    },
    chevronStyleOveride() {
      // This allows the same chevron to be used in dropdown and tabs
      return {
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        height: '16px',
        width: '16px',
      };
    },
    wrapperStyleOverride() {
      // ensures correct width when used inside tabs component
      return { width: '100%' };
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
    onCvMount(srcComponent) {
      if (srcComponent.internalSelected) {
        this.internalValue = srcComponent.value;
      } else {
        if (this.internalValue === srcComponent.value) {
          srcComponent.internalSelected = true;
          this.internalValue = srcComponent.value;
        }
      }
    },
    onCvBeforeDestroy(srcComponent) {
      if (srcComponent.value === this.internalValue) {
        this.dataValue = null;
      }
    },
    dropdownItems() {
      return this.$children.filter(item => item.$_CvDropdownItem);
    },
    doMove(up) {
      // requery could have changed
      let currentFocusEl = this.$el.querySelector('.cv-dropdown-item :focus');
      let currentFocusValue;
      let childItems = this.dropdownItems();
      let last = childItems.length - 1;
      let currentFocusIndex = up ? 0 : last;
      let nextFocusIndex;

      if (currentFocusEl) {
        currentFocusValue = currentFocusEl.parentNode.getAttribute('data-value');
      }

      if (currentFocusValue !== undefined) {
        currentFocusIndex = childItems.findIndex(child => child.value === currentFocusValue);
      }

      if (up) {
        nextFocusIndex = currentFocusIndex > 0 ? currentFocusIndex - 1 : last;
        if (childItems[nextFocusIndex].internalSelected) {
          nextFocusIndex = nextFocusIndex > 0 ? nextFocusIndex - 1 : last;
        }
      } else {
        nextFocusIndex = currentFocusIndex < last ? currentFocusIndex + 1 : 0;
        if (childItems[nextFocusIndex].internalSelected) {
          nextFocusIndex = nextFocusIndex < last ? nextFocusIndex + 1 : 0;
        }
      }

      childItems[nextFocusIndex].setFocus();
    },
    onDown() {
      if (!this.open) {
        this.open = true;
      } else {
        this.doMove(false);
      }
    },
    onUp() {
      if (this.open) {
        this.doMove(true);
      }
    },
    onEsc() {
      this.open = false;
      this.$el.focus();
    },
    onClick(ev) {
      if (this.disabled) {
        ev.preventDefault();
      } else {
        this.open = !this.open;
        if (!this.open) {
          this.$el.focus();
        }

        let target = ev.target;
        while (!target.classList.contains('bx--dropdown-link') && this.$refs.droplist.contains(target)) {
          target = target.parentNode; // try next one up
        }

        if (target.classList.contains('bx--dropdown-link')) {
          const targetItemEl = target.parentNode;
          const newValue = targetItemEl.getAttribute('data-value');

          this.internalValue = newValue;
        }
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_dropdown_cv_dropdownvue_type_script_lang_js_ = (cv_dropdownvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-dropdown/cv-dropdown.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_dropdown_cv_dropdownvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_dropdown = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "744c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-pagination/cv-pagination.vue?vue&type=template&id=a883c3be&
var cv_paginationvue_type_template_id_a883c3be_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-pagination bx--pagination",attrs:{"data-pagination":""}},[_c('div',{staticClass:"bx--pagination__left"},[_c('cv-select',{ref:"pageSizeSelect",staticClass:"bx--select__item-count",attrs:{"label":("" + _vm.pageSizesLabel),"inline":"","value":("" + _vm.pageSizeValue)},on:{"change":_vm.onPageSizeChange}},_vm._l((_vm.pageSizes),function(size,index){return _c('cv-select-option',{key:index,attrs:{"value":("" + (size.value ? size.value : size))}},[_vm._v(_vm._s(size.label ? size.label : size.value ? size.value : size))])}),1),_c('span',{staticClass:"bx--pagination__text"},[_c('span',{attrs:{"data-displayed-item-range":""}},[_vm._t("range-text",[_vm._v(_vm._s(_vm.rangeText))],{"scope":_vm.rangeProps})],2)])],1),_c('div',{staticClass:"bx--pagination__right"},[(_vm.numberOfItems !== Infinity)?_c('cv-select',{ref:"pageSelect",staticClass:"bx--select__page-number",attrs:{"label":(_vm.pageNumberLabel + ":"),"inline":"","hideLabel":"","value":("" + _vm.pageValue)},on:{"change":_vm.onPageChange}},_vm._l((_vm.pages),function(pageNumber){return _c('cv-select-option',{key:pageNumber,attrs:{"value":("" + pageNumber),"selected":_vm.pageValue === pageNumber}},[_vm._v(_vm._s(pageNumber))])}),1):_vm._e(),_c('span',{staticClass:"bx--pagination__text"},[_vm._t("of-n-pages",[_vm._v(_vm._s(_vm.pageOfPages))],{"scope":_vm.ofNPagesProps})],2),_c('button',{staticClass:"bx--pagination__button bx--pagination__button--backward",class:{ 'bx--pagination__button--no-index': _vm.noWayBack },attrs:{"type":"button","data-page-backward":"","aria-label":_vm.backwardText,"disabled":_vm.noWayBack},on:{"click":_vm.onPrevPage}},[_c('CaretLeft16',{staticClass:"bx--pagination__button-icon"})],1),_c('button',{staticClass:"bx--pagination__button bx--pagination__button--forward",class:{ 'bx--pagination__button--no-index': _vm.noWayForward },attrs:{"type":"button","data-page-forward":"","aria-label":_vm.forwardText,"disabled":_vm.noWayForward},on:{"click":_vm.onNextPage}},[_c('CaretRight16',{staticClass:"bx--pagination__button-icon"})],1)],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-pagination/cv-pagination.vue?vue&type=template&id=a883c3be&

// EXTERNAL MODULE: ./src/components/cv-select/cv-select.vue + 4 modules
var cv_select = __webpack_require__("1cf6");

// EXTERNAL MODULE: ./src/components/cv-select/cv-select-option.vue + 4 modules
var cv_select_option = __webpack_require__("18a2");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/caret--left/16.js



var virtual_CaretLeft16 = {
  name: 'CaretLeft16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "20,24 10,16 20,8"
      }
    }), children]);
  }
};

/* harmony default export */ var _16 = (virtual_CaretLeft16);

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/caret--right/16.js



var virtual_CaretRight16 = {
  name: 'CaretRight16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "12,8 22,16 12,24"
      }
    }), children]);
  }
};

/* harmony default export */ var caret_right_16 = (virtual_CaretRight16);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-pagination/cv-pagination.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






const newPageValue = (page, lastPage) => {
  let result = 1;
  if (page && page > 0) {
    if (page <= lastPage) {
      result = page;
    } else {
      result = lastPage;
    }
  }
  return result;
};

const newPageSizeValue = pageSizes => {
  // ensure nearest value to valid page size used.
  for (let size of pageSizes) {
    if (size.selected) {
      return size.value;
    }
  }

  let firstOne = pageSizes[0];
  return firstOne.value ? firstOne.value : firstOne;
};

const newPageCount = (numberOfItems, pageSizeValue) => {
  if (numberOfItems === Infinity) {
    return Infinity;
  }
  return Math.max(1, Math.ceil(numberOfItems / pageSizeValue));
};

const newPagesArray = pageCount => {
  if (pageCount === Infinity) {
    return [];
  }
  return Array.from({ length: pageCount }, (val, key) => key + 1);
};

const newFirstItem = (pageValue, pageSizeValue) => 1 + (pageValue - 1) * pageSizeValue;

/* harmony default export */ var cv_paginationvue_type_script_lang_js_ = ({
  name: 'CvPagination',
  components: { CvSelect: cv_select["default"], CvSelectOption: cv_select_option["default"], CaretLeft16: _16, CaretRight16: caret_right_16 },
  props: {
    backwardsButtonDisabled: Boolean,
    forwardsButtonDisabled: Boolean,
    backwardText: { type: String, default: 'Prev page' },
    forwardText: { type: String, default: 'Next page' },
    pageNumberLabel: { type: String, default: 'Page number:' },
    pageSizesLabel: { type: String, default: 'Items per page:' },
    numberOfItems: { type: Number, default: Infinity },
    page: Number,
    pageSizes: { type: Array, default: () => [10, 20, 30, 40, 50] },
  },
  data() {
    return {
      firstItem: 1,
      pageValue: 1,
      pageSizeValue: 10,
      pageCount: 1,
      pages: [1],
    };
  },
  mounted() {
    this.pageSizeValue = newPageSizeValue(this.pageSizes);
    this.pageCount = newPageCount(this.numberOfItems, this.pageSizeValue);
    this.pageValue = newPageValue(this.page, this.pageCount);
    this.pages = newPagesArray(this.pageCount);
    this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
    // console.log(this.pageValue);
    // always emit on mount
    this.$emit('change', this.internalValue);
  },
  watch: {
    numberOfItems() {
      this.pageCount = newPageCount(this.numberOfItems, this.pageSizeValue);
      this.pages = newPagesArray(this.pageCount);
      this.pageValue = Math.min(this.pageCount, Math.ceil(this.firstItem / this.pageSizeValue));
      this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
    },
    page() {
      this.pageValue = newPageValue(this.page, this.pageCount);
      this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
    },
    pageSizes() {
      this.pageSizeValue = newPageSizeValue(this.pageSizes);
      this.pageCount = newPageCount(this.numberOfItems, this.pageSizeValue);
      this.pages = newPagesArray(this.pageCount);
      // Do not adjust pageValue to match firstItem. Could be incorrect if
      // page was also set at the same time
      this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
    },
  },
  computed: {
    noWayBack() {
      return this.backwardsButtonDisabled || this.pageValue === 1;
    },
    noWayForward() {
      return this.forwardsButtonDisabled || this.pageValue === this.pageCount;
    },
    ofNPagesProps() {
      return {
        pages: this.pageCount,
        items: this.numberOfItems,
      };
    },
    pageOfPages() {
      const { pages, items } = this.ofNPagesProps;
      // console.log(this.pageValue, this.pageCount);
      if (items !== Infinity) {
        return `of ${pages} pages`;
      }
      return `Page ${this.pageValue}`;
    },
    rangeProps() {
      return {
        start: Math.min(this.firstItem, this.numberOfItems),
        end: Math.min(this.firstItem + parseInt(this.pageSizeValue, 10) - 1, this.numberOfItems),
        items: this.numberOfItems,
      };
    },
    rangeText() {
      const { start, end, items } = this.rangeProps;

      if (items !== Infinity) {
        return `${start}-${end} of ${items} items`;
      } else {
        return `${start}-${end}`;
      }
    },
    internalValue() {
      return {
        start: this.firstItem,
        page: this.pageValue,
        length: parseInt(this.pageSizeValue),
      };
    },
  },
  methods: {
    onPageChange(newVal) {
      this.pageValue = parseInt(newVal, 10);
      this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
      this.$emit('change', this.internalValue);
    },
    onPageSizeChange(newVal) {
      this.pageSizeValue = parseInt(newVal, 10);
      this.pageCount = newPageCount(this.numberOfItems, this.pageSizeValue);
      this.pages = newPagesArray(this.pageCount);
      // what page is firstItem on
      this.$nextTick(() => {
        // setting pageValue immediately seems to cause a problem - test set pageSize to 40, page to 3, set pageSize to 10
        // this previously resulted in 1 being set on Chrome (other browsers untested)
        this.pageValue = Math.ceil(this.firstItem / this.pageSizeValue);
        this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
        this.$emit('change', this.internalValue);
      });
    },
    onPrevPage() {
      if (this.pageValue > 1) {
        this.pageValue--;
        this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
        this.$emit('change', this.internalValue);
      }
    },
    onNextPage() {
      if (this.pageValue < this.pageCount) {
        this.pageValue++;
        this.firstItem = newFirstItem(this.pageValue, this.pageSizeValue);
        this.$emit('change', this.internalValue);
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-pagination/cv-pagination.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_pagination_cv_paginationvue_type_script_lang_js_ = (cv_paginationvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-pagination/cv-pagination.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_pagination_cv_paginationvue_type_script_lang_js_,
  cv_paginationvue_type_template_id_a883c3be_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_pagination = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "75e8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-items.vue?vue&type=template&id=b0c5cabc&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"cv-side-nav-items bx--side-nav__items",on:{"mousedown":_vm.onMousedown}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-items.vue?vue&type=template&id=b0c5cabc&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-items.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_side_nav_itemsvue_type_script_lang_js_ = ({
  name: 'CvSideNavItems',
  methods: {
    onMousedown(ev) {
      if (ev.target === this.$el) {
        // non-css fix for #448
        ev.preventDefault();
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-items.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_nav_itemsvue_type_script_lang_js_ = (cv_side_nav_itemsvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-items.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_nav_itemsvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_side_nav_items = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "7607":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-list/cv-list.vue?vue&type=template&id=108a6abb&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,{tag:"component",staticClass:"cv-list",class:{
    'bx--list--nested': _vm.nested,
    'bx--list--ordered': _vm.internalOrdered,
    'bx--list--unordered': !_vm.internalOrdered,
  },attrs:{"data-nested":_vm.nested}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-list/cv-list.vue?vue&type=template&id=108a6abb&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-list/cv-list.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_listvue_type_script_lang_js_ = ({
  name: 'CvList',
  props: {
    ordered: { type: Boolean, default: undefined },
    nested: Boolean,
  },
  computed: {
    internalOrdered() {
      if (this.nested && this.ordered === undefined) {
        if (this.$parent && this.$parent.$parent && this.$parent.$parent.$_CvList) {
          return this.$parent.$parent.internalOrdered;
        }
      }
      return this.ordered;
    },
    tagType() {
      return this.internalOrdered ? 'ol' : 'ul';
    },
  },
  created() {
    this.$_CvList = true;
  },
});

// CONCATENATED MODULE: ./src/components/cv-list/cv-list.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_list_cv_listvue_type_script_lang_js_ = (cv_listvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-list/cv-list.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_list_cv_listvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_list = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "775a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/cv-breadcrumb-item.vue?vue&type=template&id=23dcda97&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-breadcrumb-item bx--breadcrumb-item",class:{ 'bx--breadcrumb-item--current': _vm.activePage },attrs:{"aria-current":_vm.ariaCurrent}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-item.vue?vue&type=template&id=23dcda97&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-breadcrumb/cv-breadcrumb-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_breadcrumb_itemvue_type_script_lang_js_ = ({
  name: 'CvBreadcrumbItem',
  props: {
    active: Boolean,
    ariaCurrent: String,
  },
  computed: {
    activePage() {
      return this.active && this.ariaCurrent !== 'page';
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_breadcrumb_cv_breadcrumb_itemvue_type_script_lang_js_ = (cv_breadcrumb_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_breadcrumb_cv_breadcrumb_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_breadcrumb_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "784a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-global-action.vue?vue&type=template&id=5c3c5ec9&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',_vm._g({staticClass:"cv-header-global-action bx--header__action",class:_vm.dataActive ? 'bx--header__action--active' : '',attrs:{"type":"button","aria-haspopup":"true","aria-controls":_vm.ariaControls,"aria-expanded":_vm.active},on:{"click":_vm.gaToggle,"focusout":_vm.gaFocusout}},_vm.$listeners),[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-global-action.vue?vue&type=template&id=5c3c5ec9&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-global-action.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_header_global_actionvue_type_script_lang_js_ = ({
  name: 'CvHeaderGlobalAction',
  mixins: [uid_mixin["a" /* default */]],
  props: {
    active: Boolean,
    ariaControls: String,
  },
  mounted() {
    this.$parent.$emit('cv:panel-control-mounted', this);
  },
  beforeDestroy() {
    this.$parent.$emit('cv:panel-control-beforeDestroy', this);
  },
  data() {
    return {
      dataActive: this.active,
    };
  },
  watch: {
    expanded() {
      if (this.active !== this.dataActive) {
        this.gaToggle();
      }
    },
  },
  computed: {
    panelExpanded: {
      get() {
        return this.dataActive;
      },
      set(val) {
        // do not emit 'cv:panel-control-toggle'
        this.dataActive = val;
      },
    },
  },
  methods: {
    gaToggle() {
      this.$el.focus();
      this.$parent.$emit('cv:panel-control-toggle', this);
    },
    gaFocusout(ev) {
      this.$parent.$emit('cv:panel-control-focusout', this, ev);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-global-action.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_global_actionvue_type_script_lang_js_ = (cv_header_global_actionvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-global-action.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_global_actionvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_global_action = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "7c7c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_ChevronRight16 = {
  name: 'ChevronRight16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "11,8 6,13 5.3,12.3 9.6,8 5.3,3.7 6,3"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_ChevronRight16);


/***/ }),

/***/ "7f4d":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-form/cv-form-item.vue?vue&type=template&id=5e8a1ee9&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-form-item bx--form-item"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-form/cv-form-item.vue?vue&type=template&id=5e8a1ee9&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-form/cv-form-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_form_itemvue_type_script_lang_js_ = ({
  name: 'CvFormItem',
});

// CONCATENATED MODULE: ./src/components/cv-form/cv-form-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_form_cv_form_itemvue_type_script_lang_js_ = (cv_form_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-form/cv-form-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_form_cv_form_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_form_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "7fca":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-text-input/cv-text-input.vue?vue&type=template&id=6fac295a&
var cv_text_inputvue_type_template_id_6fac295a_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-text-input bx--form-item"},[_c('label',{class:[
      'bx--label',
      {
        'bx--label--disabled': _vm.$attrs.disabled !== undefined && _vm.$attrs.disabled,
      } ],attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.label))]),(_vm.isHelper)?_c('div',{staticClass:"bx--form__helper-text",class:{ 'bx--form__helper-text--disabled': _vm.$attrs.disabled }},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e(),_c('div',{staticClass:"bx--text-input__field-wrapper",attrs:{"data-invalid":_vm.isInvalid}},[(_vm.isInvalid)?_c('WarningFilled16',{staticClass:"bx--text-input__invalid-icon"}):_vm._e(),_c('input',_vm._g(_vm._b({ref:"input",staticClass:"bx--text-input",class:{ 'bx--text-input--light': _vm.theme === 'light', 'bx--text-input--invalid': _vm.isInvalid },attrs:{"id":_vm.uid,"data-toggle-password-visibility":_vm.isPassword,"type":_vm.dataType},domProps:{"value":_vm.value}},'input',_vm.$attrs,false),_vm.inputListeners)),(_vm.isPassword)?_c('button',{staticClass:"bx--text-input--password__visibility__toggle bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--bottom bx--tooltip--align-center",attrs:{"type":"button"},on:{"click":_vm.togglePasswordVisibility}},[_c('span',{staticClass:"bx--assistive-text"},[_vm._v(_vm._s(_vm.passwordHideShowLabel))]),(_vm.isPasswordVisible)?_c('ViewOff16',{staticClass:"bx--icon-visibility-off"}):_c('View16',{staticClass:"bx--icon-visibility-off"})],1):_vm._e()],1),(_vm.isInvalid)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-text-input/cv-text-input.vue?vue&type=template&id=6fac295a&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/16.js
var _16 = __webpack_require__("f47d");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/view/16.js



var virtual_View16 = {
  name: 'View16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M15.5,7.8C14.3,4.7,11.3,2.6,8,2.5C4.7,2.6,1.7,4.7,0.5,7.8c0,0.1,0,0.2,0,0.3c1.2,3.1,4.1,5.2,7.5,5.3\tc3.3-0.1,6.3-2.2,7.5-5.3C15.5,8.1,15.5,7.9,15.5,7.8z M8,12.5c-2.7,0-5.4-2-6.5-4.5c1-2.5,3.8-4.5,6.5-4.5s5.4,2,6.5,4.5\tC13.4,10.5,10.6,12.5,8,12.5z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M8,5C6.3,5,5,6.3,5,8s1.3,3,3,3s3-1.3,3-3S9.7,5,8,5z M8,10c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S9.1,10,8,10z"
      }
    }), children]);
  }
};

/* harmony default export */ var view_16 = (virtual_View16);

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/view--off/16.js



var virtual_ViewOff16 = {
  name: 'ViewOff16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M2.6,11.3l0.7-0.7C2.6,9.8,1.9,9,1.5,8c1-2.5,3.8-4.5,6.5-4.5c0.7,0,1.4,0.1,2,0.4l0.8-0.8C9.9,2.7,9,2.5,8,2.5\tC4.7,2.6,1.7,4.7,0.5,7.8c0,0.1,0,0.2,0,0.3C1,9.3,1.7,10.4,2.6,11.3z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M6,7.9c0.1-1,0.9-1.8,1.8-1.8l0.9-0.9C7.2,4.7,5.5,5.6,5.1,7.2C5,7.7,5,8.3,5.1,8.8L6,7.9z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M15.5,7.8c-0.6-1.5-1.6-2.8-2.9-3.7L15,1.7L14.3,1L1,14.3L1.7,15l2.6-2.6c1.1,0.7,2.4,1,3.7,1.1c3.3-0.1,6.3-2.2,7.5-5.3\tC15.5,8.1,15.5,7.9,15.5,7.8z M10,8c0,1.1-0.9,2-2,2c-0.3,0-0.7-0.1-1-0.3L9.7,7C9.9,7.3,10,7.6,10,8z M8,12.5c-1,0-2.1-0.3-3-0.8\tl1.3-1.3c1.4,0.9,3.2,0.6,4.2-0.8c0.7-1,0.7-2.4,0-3.4l1.4-1.4c1.1,0.8,2,1.9,2.6,3.2C13.4,10.5,10.6,12.5,8,12.5z"
      }
    }), children]);
  }
};

/* harmony default export */ var view_off_16 = (virtual_ViewOff16);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-text-input/cv-text-input.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var cv_text_inputvue_type_script_lang_js_ = ({
  name: 'CvTextInput',
  components: { WarningFilled16: _16["a" /* default */], View16: view_16, ViewOff16: view_off_16 },
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  inheritAttrs: false,
  props: {
    helperText: { type: String, default: undefined },
    invalidMessage: { type: String, default: undefined },
    label: String,
    passwordHideLabel: { type: String, default: 'Hide password' },
    passwordShowLabel: { type: String, default: 'Show password' },
    passwordVisible: Boolean,
    theme: String,
    type: String,
    value: String,
  },
  data() {
    return {
      dataPasswordVisible: this.isPassword && this.passwordVisible,
      dataType: this.type,
      isHelper: false,
      isInvalid: false,
    };
  },
  mounted: function() {
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  watch: {
    passwordVisible() {
      if (this.passwordVisible !== this.dataPasswordVisible) {
        this.togglePasswordVisibility();
      }
    },
    type() {
      this.dataType = this.type;
    },
  },
  computed: {
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return {
        ...this.$listeners,
        input: event => this.$emit('input', event.target.value),
      };
    },
    isPassword() {
      return this.type === 'password';
    },
    isPasswordVisible() {
      return this.isPassword && this.dataPasswordVisible;
    },
    passwordHideShowLabel() {
      return this.isPasswordVisible ? this.passwordHideLabel : this.passwordShowLabel;
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
    togglePasswordVisibility() {
      const currentValue = this.$refs.input.value;
      this.dataPasswordVisible = !this.dataPasswordVisible;
      this.dataType = this.dataPasswordVisible ? 'text' : 'password';

      this.$nextTick(() => {
        this.$refs.input.value = currentValue;
      });
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-text-input/cv-text-input.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_text_input_cv_text_inputvue_type_script_lang_js_ = (cv_text_inputvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-text-input/cv-text-input.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_text_input_cv_text_inputvue_type_script_lang_js_,
  cv_text_inputvue_type_template_id_6fac295a_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_text_input = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "80b4":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return STATES; });
const STATES = {
  LOADED: 'loaded',
  ERROR: 'error',
  LOADING: 'loading',
  ENDING: 'ending',
};




/***/ }),

/***/ "80d2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header.vue?vue&type=template&id=1af78444&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:"cv-header bx--header",attrs:{"data-header":""}},[_vm._t("default"),(_vm.hasGlobalHeader)?_c('div',{staticClass:"bx--header__global"},[_vm._t("header-global")],2):_vm._e(),_vm._t("left-panels"),_vm._t("right-panels")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header.vue?vue&type=template&id=1af78444&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_headervue_type_script_lang_js_ = ({
  name: 'CvHeader',
  created() {
    // add these on created otherwise cv:mounted is too late.
    this.$on('cv:panel-control-mounted', this.onCvPanelControlMounted);
    this.$on('cv:panel-control-beforeDestroy', this.onCvPanelControlBeforeDestroy);
    this.$on('cv:panel-control-toggle', this.onCvPanelControlToggle);
    this.$on('cv:panel-control-focusout', this.onCvPanelControlFocusout);
    this.$on('cv:panel-mounted', this.onCvPanelMounted);
    this.$on('cv:panel-beforeDestroy', this.onCvPanelBeforeDestroy);
    this.$on('cv:panel-focusout', this.onCvPanelFocusout);
  },
  data() {
    return {
      panelControllers: [],
      panels: [],
      hasGlobalHeader: false,
    };
  },
  mounted() {
    // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
    this.hasGlobalHeader = !!this.$slots['header-global'];
  },
  beforeUpdate() {
    this.hasGlobalHeader = !!this.$slots['header-global'];
  },
  computed: {
    isCvHeader() {
      return true;
    },
  },
  methods: {
    hasRail(_ctrl, _panel) {
      let panel = _panel;
      let ctrl = _ctrl;
      if (ctrl) {
        panel = this.panels.find(item => item.id === ctrl.ariaControls);
      } else {
        if (panel) {
          ctrl = this.panelControllers.find(item => item.ariaControls === panel.id);
        }
      }
      if (ctrl) {
        ctrl.hasRail = !!(panel && ctrl) && panel.rail;
      }
    },
    onCvPanelControlMounted(srcComponent) {
      this.panelControllers.push(srcComponent);
      this.hasRail(srcComponent);
    },
    onCvPanelControlBeforeDestroy(srcComponent) {
      const index = this.panelControllers.findIndex(item => item.id === srcComponent.id);
      if (index > -1) {
        this.panelControllers.splice(index, 1);
      }
    },
    onCvPanelControlToggle(srcComponent, force) {
      const foundIndex = this.panels.findIndex(item => item.id === srcComponent.ariaControls);
      if (foundIndex > -1) {
        const newValue = force !== undefined ? force : !srcComponent.panelExpanded;

        for (let index in this.panels) {
          this.panels[index].panelExpanded = false;
        }
        for (let index in this.panelControllers) {
          this.panelControllers[index].panelExpanded = false;
        }

        srcComponent.panelExpanded = newValue;
        this.panels[foundIndex].panelExpanded = newValue;
      }
    },
    onCvPanelControlFocusout(srcComponent, srcEvent) {
      const found = this.panels.find(item => item.id === srcComponent.ariaControls);

      if (found && !found.rail && found.$el !== srcEvent.relatedTarget && !found.$el.contains(srcEvent.relatedTarget)) {
        // close when not a rail
        this.onCvPanelControlToggle(srcComponent, false);
      }
    },
    onCvPanelMounted(srcComponent) {
      this.panels.push(srcComponent);
      srcComponent.headerEmbedded = true;
      this.hasRail(undefined, srcComponent);
    },
    onCvPanelBeforeDestroy(srcComponent) {
      const index = this.panels.findIndex(item => item.id === srcComponent.id);
      if (index > -1) {
        this.panels.splice(index, 1);
      }
    },
    onCvPanelFocusout(srcComponent, srcEvent) {
      const found = this.panelControllers.find(item => item.ariaControls === srcComponent.id);
      if (
        srcComponent.$el !== srcEvent.relatedTarget &&
        !srcComponent.$el.contains(srcEvent.relatedTarget) &&
        found &&
        found.$el !== srcEvent.relatedTarget
      ) {
        this.onCvPanelControlToggle(found, false);
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_headervue_type_script_lang_js_ = (cv_headervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_headervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "8479":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list-item.vue?vue&type=template&id=9b2afb4c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-structured-list-item",attrs:{"value":_vm.value,"modelValue":_vm.modelValue}},'component',_vm.$attrs,false),_vm.$listeners),[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-item.vue?vue&type=template&id=9b2afb4c&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/_cv-structured-list-item-standard.vue?vue&type=template&id=4eae4cd4&
var _cv_structured_list_item_standardvue_type_template_id_4eae4cd4_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-structured-list-item--standard bx--structured-list-row"},[_vm._t("default")],2)}
var _cv_structured_list_item_standardvue_type_template_id_4eae4cd4_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-structured-list/_cv-structured-list-item-standard.vue?vue&type=template&id=4eae4cd4&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/_cv-structured-list-item-standard.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var _cv_structured_list_item_standardvue_type_script_lang_js_ = ({
  name: 'CvStructuredListItemStandard',
});

// CONCATENATED MODULE: ./src/components/cv-structured-list/_cv-structured-list-item-standard.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_structured_list_cv_structured_list_item_standardvue_type_script_lang_js_ = (_cv_structured_list_item_standardvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-structured-list/_cv-structured-list-item-standard.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_structured_list_cv_structured_list_item_standardvue_type_script_lang_js_,
  _cv_structured_list_item_standardvue_type_template_id_4eae4cd4_render,
  _cv_structured_list_item_standardvue_type_template_id_4eae4cd4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_structured_list_item_standard = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/_cv-structured-list-item-selectable.vue?vue&type=template&id=5261ac05&
var _cv_structured_list_item_selectablevue_type_template_id_5261ac05_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{staticClass:"cv-structured-list-item--selectable bx--structured-list-row",class:{ ' bx--structured-list-row--selected': _vm.isChecked },attrs:{"for":_vm.uid,"aria-label":_vm.label,"tabindex":"0"}},[_vm._t("default"),_c('input',_vm._g(_vm._b({staticClass:"bx--structured-list-input",attrs:{"tabindex":"-1","id":_vm.uid,"type":"radio"},domProps:{"checked":_vm.isChecked,"value":_vm.value}},'input',_vm.$attrs,false),_vm.inputListeners)),_c('div',{staticClass:"bx--structured-list-td"},[_c('CheckmarkFilled16',{staticClass:"bx--structured-list-svg"})],1)],2)}
var _cv_structured_list_item_selectablevue_type_template_id_5261ac05_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-structured-list/_cv-structured-list-item-selectable.vue?vue&type=template&id=5261ac05&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/radio-mixin.js
var radio_mixin = __webpack_require__("47fc");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/checkmark--filled/16.js
var _16 = __webpack_require__("6368");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/_cv-structured-list-item-selectable.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var _cv_structured_list_item_selectablevue_type_script_lang_js_ = ({
  name: 'CvStructuredListItemSelectable',
  components: { CheckmarkFilled16: _16["a" /* default */] },
  inheritAttrs: false,
  mixins: [uid_mixin["a" /* default */], radio_mixin["a" /* default */]],
});

// CONCATENATED MODULE: ./src/components/cv-structured-list/_cv-structured-list-item-selectable.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_structured_list_cv_structured_list_item_selectablevue_type_script_lang_js_ = (_cv_structured_list_item_selectablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-structured-list/_cv-structured-list-item-selectable.vue





/* normalize component */

var _cv_structured_list_item_selectable_component = Object(componentNormalizer["a" /* default */])(
  cv_structured_list_cv_structured_list_item_selectablevue_type_script_lang_js_,
  _cv_structured_list_item_selectablevue_type_template_id_5261ac05_render,
  _cv_structured_list_item_selectablevue_type_template_id_5261ac05_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_structured_list_item_selectable = (_cv_structured_list_item_selectable_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_structured_list_itemvue_type_script_lang_js_ = ({
  name: 'CvStructuredListItem',
  inheritAttrs: false,
  components: { CvStructuredListItemStandard: _cv_structured_list_item_standard, CvStructuredListItemSelectable: _cv_structured_list_item_selectable },
  props: {
    value: { type: String, default: '' },
    modelValue: { type: String },
  },
  mounted() {
    // pass on cv-structured-list-item-selectable change events
    this.$on('cv:change', val => {
      this.$parent.$emit('cv:change', this.value); // emit to parent
      this.$emit('change', val);
    });
  },
  computed: {
    tagType() {
      return this.selectable ? 'cv-structured-list-item-selectable' : 'cv-structured-list-item-standard';
    },
    selectable() {
      return this.$parent.selectable;
    },
  },
  model: {
    prop: 'modelValue',
    event: 'change',
  },
});

// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_structured_list_cv_structured_list_itemvue_type_script_lang_js_ = (cv_structured_list_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-item.vue





/* normalize component */

var cv_structured_list_item_component = Object(componentNormalizer["a" /* default */])(
  cv_structured_list_cv_structured_list_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_structured_list_item = __webpack_exports__["default"] = (cv_structured_list_item_component.exports);

/***/ }),

/***/ "8667":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/cv-accordion.vue?vue&type=template&id=42f2b4f5&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"cv-accordion bx--accordion",attrs:{"data-accordion":""}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion.vue?vue&type=template&id=42f2b4f5&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/cv-accordion.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_accordionvue_type_script_lang_js_ = ({
  name: 'CvAccordion',
  created() {
    this.$on('cv:change', srcComponent => this.onCvChange(srcComponent));
  },
  computed: {
    state: {
      get() {
        const items = this.$children.filter(item => item.$_CvAccordionItem);
        return items.map(item => item.dataOpen);
      },
      set(val) {
        const items = this.$children.filter(item => item.$_CvAccordionItem);

        if (items.length > 0) {
          // loop through all items setting
          for (const i in items) {
            // making no attempt to verify array
            items[i].dataOpen = val[i] !== undefined ? !!val[i] : false;
          }
        }
      },
    },
  },
  methods: {
    onCvChange(srcComponent) {
      const index = this.$children.findIndex(item => item.uid === srcComponent.uid);
      this.$emit('change', { changedIndex: index, state: this.state });
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_accordion_cv_accordionvue_type_script_lang_js_ = (cv_accordionvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_accordion_cv_accordionvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_accordion = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "89b6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-time-picker/cv-time-picker.vue?vue&type=template&id=0991c464&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-time-picker bx--form-item"},[_c('div',{staticClass:"bx--time-picker",class:{ 'bx--time-picker--light': _vm.theme === 'light' },attrs:{"data-invalid":_vm.isInvalid}},[_c('div',{staticClass:"bx--time-picker__input"},[_c('label',{staticClass:"bx--label",attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.label))]),_c('input',_vm._b({staticClass:"bx--time-picker__input-field",attrs:{"id":_vm.uid,"type":"text","pattern":_vm.pattern,"placeholder":_vm.placeholder,"maxlength":_vm.placeholder.length,"disabled":_vm.disabled},domProps:{"value":_vm.time},on:{"input":function($event){return _vm.$emit('update:time', $event.target.value)}}},'input',_vm.$attrs,false))]),_c('cv-select',{staticClass:"bx--time-picker__select",attrs:{"form-item":false,"hide-label":"","label":_vm.ampmSelectLabel,"value":_vm.ampm,"disabled":_vm.disabled},on:{"change":function($event){return _vm.$emit('update:ampm', $event)}}},[_c('cv-select-option',{staticClass:"bx--select-option",attrs:{"value":"AM"}},[_vm._v("AM")]),_c('cv-select-option',{staticClass:"bx--select-option",attrs:{"value":"PM"}},[_vm._v("PM")])],1),(_vm.timezones.length > 0)?_c('cv-select',{staticClass:"bx--time-picker__select",attrs:{"form-item":false,"hide-label":"","label":_vm.timezonesSelectLabel,"value":_vm.validTimezone,"disabled":_vm.disabled},on:{"change":function($event){return _vm.$emit('update:timezone', $event)}}},_vm._l((_vm.timezones),function(item){return _c('cv-select-option',{key:item.value,staticClass:"bx--select-option",attrs:{"value":item.value}},[_vm._v(_vm._s(item.label))])}),1):_vm._e()],1),(_vm.isInvalid)?_c('div',{staticClass:"bx--form-requirement"},[_vm._t("invalid-message",[_vm._v(_vm._s(_vm.invalidMessage))])],2):_vm._e()])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-time-picker/cv-time-picker.vue?vue&type=template&id=0991c464&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// EXTERNAL MODULE: ./src/components/cv-select/cv-select.vue + 4 modules
var cv_select = __webpack_require__("1cf6");

// EXTERNAL MODULE: ./src/components/cv-select/cv-select-option.vue + 4 modules
var cv_select_option = __webpack_require__("18a2");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-time-picker/cv-time-picker.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var cv_time_pickervue_type_script_lang_js_ = ({
  name: 'CvTimePicker',
  components: {
    CvSelect: cv_select["default"],
    CvSelectOption: cv_select_option["default"],
  },
  mixins: [uid_mixin["a" /* default */], theme_mixin["a" /* default */]],
  inheritAttrs: false,
  props: {
    ampm: {
      type: String,
      default: 'AM',
    },
    ampmSelectLabel: { type: String, default: 'Select AM/PM' },
    disabled: Boolean,
    invalidMessage: { type: String, default: undefined },
    label: { type: String, default: 'Select a time' },
    pattern: { type: String, default: '([01][0-9]:[0-6][0-9])' },
    placeholder: { type: String, default: 'hh:mm' },
    time: String,
    timezone: String,
    timezones: { type: Array, default: () => [] },
    timezonesSelectLabel: { type: String, default: 'Select time zone' },
  },
  data() {
    return {
      isInvalid: false,
    };
  },
  mounted() {
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  computed: {
    validAmpm() {
      let result = this.ampm;
      if (!['AM', 'PM'].includes(this.ampm)) {
        console.error(`CvTimePicker: invalid value '${this.ampm}' supplied for prop ampm. Default applied.`);
        // set to valid value
        result = this.ampm[0].value;
        this.$emit('update:ampm', result);
      }
      return result;
    },
    validTimezone() {
      // Validate timezone setting
      let result = this.timezone;
      if (this.timezones && this.timezones.length) {
        if (!this.timezones.find(item => item.value === this.timezone)) {
          console.error(`CvTimePicker: invalid value '${this.timezone}' supplied for prop timezone. Default applied.`);
          // set to first valid value
          result = this.timezones[0].value;
          this.$emit('update:timezone', result);
        }
      }
      return result;
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-time-picker/cv-time-picker.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_time_picker_cv_time_pickervue_type_script_lang_js_ = (cv_time_pickervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-time-picker/cv-time-picker.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_time_picker_cv_time_pickervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_time_picker = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "8bbf":
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),

/***/ "8fd3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-icon.vue?vue&type=template&id=3a9041b9&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--side-nav__icon",class:{ 'bx--side-nav__icon--small': _vm.small }},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-icon.vue?vue&type=template&id=3a9041b9&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-icon.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_side_nav_iconvue_type_script_lang_js_ = ({
  name: 'CvSideNavIcon',
  props: {
    small: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-icon.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_nav_iconvue_type_script_lang_js_ = (cv_side_nav_iconvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-icon.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_nav_iconvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_side_nav_icon = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "90c2":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-checkbox/cv-checkbox-skeleton.vue?vue&type=template&id=8b6c5f60&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-checkbox bx--form-item bx--checkbox-wrapper"},[_c('label',{staticClass:"bx--checkbox-label bx--skeleton"})])}]


// CONCATENATED MODULE: ./src/components/cv-checkbox/cv-checkbox-skeleton.vue?vue&type=template&id=8b6c5f60&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-checkbox/cv-checkbox-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_checkbox_skeletonvue_type_script_lang_js_ = ({
  name: 'CvCheckboxSkeleton',
});

// CONCATENATED MODULE: ./src/components/cv-checkbox/cv-checkbox-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_checkbox_cv_checkbox_skeletonvue_type_script_lang_js_ = (cv_checkbox_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-checkbox/cv-checkbox-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_checkbox_cv_checkbox_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_checkbox_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "90c2f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-title.vue?vue&type=template&id=5ab57f08&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-toolbar-title bx--toolbar-menu__title"},[_vm._v(_vm._s(_vm.title))])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-title.vue?vue&type=template&id=5ab57f08&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-title.vue?vue&type=script&lang=js&
//
//
//
//

/* harmony default export */ var cv_toolbar_titlevue_type_script_lang_js_ = ({
  name: 'CvToolbarTitle',
  props: {
    title: { type: String, required: true },
  },
});

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-title.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toolbar_cv_toolbar_titlevue_type_script_lang_js_ = (cv_toolbar_titlevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-title.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toolbar_cv_toolbar_titlevue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toolbar_title = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "9185":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _rollupPluginBabelHelpers = __webpack_require__("cfd8");
var iconHelpers = __webpack_require__("3bda");

var virtual_ErrorFilled16 = {
  name: 'ErrorFilled16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z"
      }
    }), createElement('path', {
      attrs: {
        "fill": "none",
        "d": "M10.7,11.5L4.5,5.3l0.8-0.8l6.2,6.2L10.7,11.5z",
        "data-icon-path": "inner-path",
        "opacity": "0"
      }
    }), children]);
  }
};

module.exports = virtual_ErrorFilled16;


/***/ }),

/***/ "92ca":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_InformationFilled20 = {
  name: 'InformationFilled20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,7Zm4,17.12H12V21.88h2.88V15.12H13V12.88h4.13v9H20Z"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_InformationFilled20);


/***/ }),

/***/ "9318":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-inline-loading/cv-inline-loading.vue?vue&type=template&id=75ae34df&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"bx--inline-loading",attrs:{"data-inline-loading":"","role":"alert","aria-live":"assertive"}},[_c('div',{staticClass:"bx--inline-loading__animation",class:{ 'bx--loading--stop': _vm.internalState === _vm.STATES.ENDING }},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.internalState === _vm.STATES.LOADING || _vm.internalState === _vm.STATES.ENDING),expression:"internalState === STATES.LOADING || internalState === STATES.ENDING"}],staticClass:"bx--loading bx--loading--small"},[_c('svg',{staticClass:"bx--loading__svg",attrs:{"viewBox":"-75 -75 150 150"}},[_c('circle',{staticClass:"bx--loading__background",attrs:{"cx":"0","cy":"0","r":"26.8125"}}),_c('circle',{staticClass:"bx--loading__stroke",attrs:{"cx":"0","cy":"0","r":"26.8125"}})])]),_c('CheckmarkFilled16',{staticClass:"bx--inline-loading__checkmark-container",attrs:{"hidden":_vm.internalState !== _vm.STATES.LOADED}}),_c('ErrorFilled16',{staticClass:"bx--inline-loading--error",attrs:{"hidden":_vm.internalState !== _vm.STATES.ERROR}})],1),_c('p',{staticClass:"bx--inline-loading__text"},[_vm._v(_vm._s(_vm.stateText))])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-inline-loading/cv-inline-loading.vue?vue&type=template&id=75ae34df&

// EXTERNAL MODULE: ./src/components/cv-inline-loading/consts.js
var consts = __webpack_require__("80b4");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/lib/error--filled/16.js
var _16 = __webpack_require__("9185");
var _16_default = /*#__PURE__*/__webpack_require__.n(_16);

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/lib/checkmark--filled/16.js
var checkmark_filled_16 = __webpack_require__("ac95");
var checkmark_filled_16_default = /*#__PURE__*/__webpack_require__.n(checkmark_filled_16);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-inline-loading/cv-inline-loading.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var cv_inline_loadingvue_type_script_lang_js_ = ({
  name: 'CvInlineLoading',
  components: { ErrorFilled16: _16_default.a, CheckmarkFilled16: checkmark_filled_16_default.a },
  created() {
    this.STATES = consts["a" /* STATES */];
  },
  props: {
    active: {
      type: Boolean,
      default: undefined,
      validator: val => {
        if (val !== undefined && "production" === 'development') {
          console.warn('CvInlineLoading: active prop deprecated in favour of state prop');
        }
        return true;
      },
    },
    endingText: { type: String, default: 'Load ending...' },
    errorText: { type: String, default: 'Loading data failed.' },
    loadingText: { type: String, default: 'Loading data...' },
    loadedText: { type: String, default: 'Data loaded.' },
    state: {
      type: String,
      default: undefined,
      validator: val => {
        if (Object.keys(consts["a" /* STATES */]).some(state => consts["a" /* STATES */][state] === val.toLowerCase())) {
          return true;
        } else {
          console.error(`CvInlineLoading: Valid states are ${JSON.stringify(Object.values(consts["a" /* STATES */]))}`);
          return false;
        }
      },
    },
  },
  computed: {
    internalState() {
      if (this.state !== undefined) {
        return this.state.toLowerCase();
      } else {
        return this.active ? consts["a" /* STATES */].LOADING : consts["a" /* STATES */].LOADED;
      }
    },
    stateText() {
      switch (this.internalState) {
        case consts["a" /* STATES */].LOADED:
          return this.loadedText;
        case consts["a" /* STATES */].ERROR:
          return this.errorText;
        case consts["a" /* STATES */].ENDING:
          return this.endingText;
        default:
          return this.loadingText;
      }
    },
    CONSTS() {
      return { STATES: consts["a" /* STATES */] };
    },
  },
  CONSTS() {
    return { STATES: consts["a" /* STATES */] };
  },
});

// CONCATENATED MODULE: ./src/components/cv-inline-loading/cv-inline-loading.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_inline_loading_cv_inline_loadingvue_type_script_lang_js_ = (cv_inline_loadingvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-inline-loading/cv-inline-loading.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_inline_loading_cv_inline_loadingvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_inline_loading = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "9450":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_Close20 = {
  name: 'Close20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "24 9.4 22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_Close20);


/***/ }),

/***/ "95a6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toast-notification/cv-toast-notification.vue?vue&type=template&id=7b105cf4&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._g({staticClass:"cv-notifiation bx--toast-notification",class:[("bx--toast-notification--" + (_vm.kind.toLowerCase())), { 'bx--toast-notification--low-contrast': _vm.lowContrast }],attrs:{"data-notification":"","role":_vm.isAlert ? 'alert' : undefined,"aria-live":!_vm.isAlert ? 'polite' : false}},_vm.$listeners),[_c(_vm.icon,{tag:"component",staticClass:"bx--toast-notification__icon"}),_c('div',{staticClass:"bx--toast-notification__details"},[_c('h3',{staticClass:"bx--toast-notification__title"},[_vm._v(_vm._s(_vm.title))]),_c('p',{staticClass:"bx--toast-notification__subtitle"},[_vm._v(_vm._s(_vm.subTitle))]),_c('p',{staticClass:"bx--toast-notification__caption"},[_vm._v(_vm._s(_vm.caption))])]),_c('button',{staticClass:"bx--toast-notification__close-button",attrs:{"aria-label":_vm.closeAriaLabel,"type":"button","data-notification-btn":""},on:{"click":function($event){return _vm.$emit('close')}}},[_c('Close20',{staticClass:"bx--toast-notification__close-icon"})],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toast-notification/cv-toast-notification.vue?vue&type=template&id=7b105cf4&

// EXTERNAL MODULE: ./src/mixins/notification-mixin.js
var notification_mixin = __webpack_require__("adbe");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/error--filled/20.js
var _20 = __webpack_require__("5440");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/checkmark--filled/20.js
var checkmark_filled_20 = __webpack_require__("69ba");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/20.js
var warning_filled_20 = __webpack_require__("5a13");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/20.js
var close_20 = __webpack_require__("9450");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/information--filled/20.js
var information_filled_20 = __webpack_require__("92ca");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toast-notification/cv-toast-notification.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ var cv_toast_notificationvue_type_script_lang_js_ = ({
  name: 'CvToastNotification',
  components: { Close20: close_20["a" /* default */] },
  mixins: [notification_mixin["a" /* default */]],
  props: {
    caption: String,
    closeAriaLabel: { type: String, default: 'Dismiss notification' },
    kind: {
      type: String,
      default: 'info',
      validator: val => ['error', 'info', 'warning', 'success'].includes(val),
    },
    lowContrast: Boolean,
  },
  computed: {
    icon() {
      switch (this.kind) {
        case 'error':
          return _20["a" /* default */];
        case 'warning':
          return warning_filled_20["a" /* default */];
        case 'success':
          return checkmark_filled_20["a" /* default */];
        case 'info':
          return information_filled_20["a" /* default */];
        default:
          return '';
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-toast-notification/cv-toast-notification.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toast_notification_cv_toast_notificationvue_type_script_lang_js_ = (cv_toast_notificationvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toast-notification/cv-toast-notification.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toast_notification_cv_toast_notificationvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toast_notification = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "964d":
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
}(this, function () { 'use strict';

  function rangePlugin(config) {
      if (config === void 0) { config = {}; }
      return function (fp) {
          var dateFormat = "", secondInput, _secondInputFocused, _prevDates;
          var createSecondInput = function () {
              if (config.input) {
                  secondInput =
                      config.input instanceof Element
                          ? config.input
                          : window.document.querySelector(config.input);
                  if (!secondInput) {
                      fp.config.errorHandler(new Error("Invalid input element specified"));
                      return;
                  }
                  if (fp.config.wrap) {
                      secondInput = secondInput.querySelector("[data-input]");
                  }
              }
              else {
                  secondInput = fp._input.cloneNode();
                  secondInput.removeAttribute("id");
                  secondInput._flatpickr = undefined;
              }
              if (secondInput.value) {
                  var parsedDate = fp.parseDate(secondInput.value);
                  if (parsedDate)
                      fp.selectedDates.push(parsedDate);
              }
              secondInput.setAttribute("data-fp-omit", "");
              fp._bind(secondInput, ["focus", "click"], function () {
                  if (fp.selectedDates[1]) {
                      fp.latestSelectedDateObj = fp.selectedDates[1];
                      fp._setHoursFromDate(fp.selectedDates[1]);
                      fp.jumpToDate(fp.selectedDates[1]);
                  }
                  _secondInputFocused = true;
                  fp.isOpen = false;
                  fp.open(undefined, config.position === "left" ? fp._input : secondInput);
              });
              fp._bind(fp._input, ["focus", "click"], function (e) {
                  e.preventDefault();
                  fp.isOpen = false;
                  fp.open();
              });
              if (fp.config.allowInput)
                  fp._bind(secondInput, "keydown", function (e) {
                      if (e.key === "Enter") {
                          fp.setDate([fp.selectedDates[0], secondInput.value], true, dateFormat);
                          secondInput.click();
                      }
                  });
              if (!config.input)
                  fp._input.parentNode &&
                      fp._input.parentNode.insertBefore(secondInput, fp._input.nextSibling);
          };
          var plugin = {
              onParseConfig: function () {
                  fp.config.mode = "range";
                  dateFormat = fp.config.altInput
                      ? fp.config.altFormat
                      : fp.config.dateFormat;
              },
              onReady: function () {
                  createSecondInput();
                  fp.config.ignoredFocusElements.push(secondInput);
                  if (fp.config.allowInput) {
                      fp._input.removeAttribute("readonly");
                      secondInput.removeAttribute("readonly");
                  }
                  else {
                      secondInput.setAttribute("readonly", "readonly");
                  }
                  fp._bind(fp._input, "focus", function () {
                      fp.latestSelectedDateObj = fp.selectedDates[0];
                      fp._setHoursFromDate(fp.selectedDates[0]);
                      _secondInputFocused = false;
                      fp.jumpToDate(fp.selectedDates[0]);
                  });
                  if (fp.config.allowInput)
                      fp._bind(fp._input, "keydown", function (e) {
                          if (e.key === "Enter")
                              fp.setDate([fp._input.value, fp.selectedDates[1]], true, dateFormat);
                      });
                  fp.setDate(fp.selectedDates, false);
                  plugin.onValueUpdate(fp.selectedDates);
                  fp.loadedPlugins.push("range");
              },
              onPreCalendarPosition: function () {
                  if (_secondInputFocused) {
                      fp._positionElement = secondInput;
                      setTimeout(function () {
                          fp._positionElement = fp._input;
                      }, 0);
                  }
              },
              onChange: function () {
                  if (!fp.selectedDates.length) {
                      setTimeout(function () {
                          if (fp.selectedDates.length)
                              return;
                          secondInput.value = "";
                          _prevDates = [];
                      }, 10);
                  }
                  if (_secondInputFocused) {
                      setTimeout(function () {
                          secondInput.focus();
                      }, 0);
                  }
              },
              onDestroy: function () {
                  if (!config.input)
                      secondInput.parentNode &&
                          secondInput.parentNode.removeChild(secondInput);
              },
              onValueUpdate: function (selDates) {
                  var _a, _b, _c;
                  if (!secondInput)
                      return;
                  _prevDates =
                      !_prevDates || selDates.length >= _prevDates.length
                          ? selDates.slice() : _prevDates;
                  if (_prevDates.length > selDates.length) {
                      var newSelectedDate = selDates[0];
                      var newDates = _secondInputFocused
                          ? [_prevDates[0], newSelectedDate]
                          : [newSelectedDate, _prevDates[1]];
                      fp.setDate(newDates, false);
                      _prevDates = newDates.slice();
                  }
                  _a = fp.selectedDates.map(function (d) { return fp.formatDate(d, dateFormat); }), _b = _a[0], fp._input.value = _b === void 0 ? "" : _b, _c = _a[1], secondInput.value = _c === void 0 ? "" : _c;
              }
          };
          return plugin;
      };
  }

  return rangePlugin;

}));


/***/ }),

/***/ "9952":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-link.vue?vue&type=template&id=0b6e711b&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"bx--side-nav__item"},[_c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-side-nav-item-link bx--side-nav__link",class:{ 'bx--side-nav__link--current': _vm.active }},'component',Object.assign({}, _vm.$attrs, _vm.linkProps),false),_vm.$listeners),[(_vm.hasNavIcon)?_c('cv-side-nav-icon',{attrs:{"small":""}},[_vm._t("nav-icon")],2):_vm._e(),_c('cv-side-nav-link-text',[_vm._t("default")],2)],1)],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-link.vue?vue&type=template&id=0b6e711b&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav-icon.vue + 4 modules
var cv_side_nav_icon = __webpack_require__("8fd3");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/_cv-side-nav-link-text.vue + 4 modules
var _cv_side_nav_link_text = __webpack_require__("f516");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav-link.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var cv_side_nav_linkvue_type_script_lang_js_ = ({
  name: 'CvSideNavLink',
  inheritAttrs: false,
  mixins: [link_mixin["a" /* default */]],
  components: { CvSideNavIcon: cv_side_nav_icon["default"], CvSideNavLinkText: _cv_side_nav_link_text["a" /* default */] },
  props: {
    active: Boolean,
    icon: Object,
  },
  data() {
    return {
      hasNavIcon: this.$slots['nav-icon'],
    };
  },
  beforeUpdate() {
    this.hasNavIcon = !!this.$slots['nav-icon'];
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-link.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_nav_linkvue_type_script_lang_js_ = (cv_side_nav_linkvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav-link.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_nav_linkvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_side_nav_link = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "a123":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-switcher.vue?vue&type=template&id=5a132eaa&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"cv-switcher bx--switcher__item"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher.vue?vue&type=template&id=5a132eaa&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-switcher.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_switchervue_type_script_lang_js_ = ({
  name: 'CvSwitcher',
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_switchervue_type_script_lang_js_ = (cv_switchervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-switcher.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_switchervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_switcher = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "a4de":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_Search16 = {
  name: 'Search16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M15,14.3L10.7,10c1.9-2.3,1.6-5.8-0.7-7.7S4.2,0.7,2.3,3S0.7,8.8,3,10.7c2,1.7,5,1.7,7,0l4.3,4.3L15,14.3z M2,6.5\tC2,4,4,2,6.5,2S11,4,11,6.5S9,11,6.5,11S2,9,2,6.5z"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_Search16);


/***/ }),

/***/ "a7e9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-inline-notification/cv-inline-notification.vue?vue&type=template&id=8852e3a4&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._g({staticClass:"cv-inline-notification bx--inline-notification",class:[
    ("bx--inline-notification--" + (_vm.kind.toLowerCase())),
    {
      'bx--inline-notification--low-contrast': _vm.lowContrast,
    } ],attrs:{"data-notification":"","role":_vm.isAlert ? 'alert' : false,"aria-live":!_vm.isAlert ? 'polite' : false}},_vm.$listeners),[_c('div',{staticClass:"bx--inline-notification__details"},[_c(_vm.icon,{tag:"component",staticClass:"bx--inline-notification__icon"}),_c('div',{staticClass:"bx--inline-notification__text-wrapper"},[_c('p',{staticClass:"bx--inline-notification__title"},[_vm._v(_vm._s(_vm.title))]),_c('p',{staticClass:"bx--inline-notification__subtitle"},[_vm._v(_vm._s(_vm.subTitle))])])],1),(_vm.actionLabel)?_c('button',{staticClass:"bx--inline-notification__action-button bx--btn bx--btn--sm bx--btn--ghost",attrs:{"type":"button"},on:{"click":function($event){return _vm.$emit('action')}}},[_vm._v("\n    "+_vm._s(_vm.actionLabel)+"\n  ")]):_vm._e(),_c('button',{staticClass:"bx--inline-notification__close-button",attrs:{"type":"button","aria-label":_vm.closeAriaLabel,"data-notification-btn":""},on:{"click":function($event){return _vm.$emit('close')}}},[_c('Close20',{staticClass:"bx--inline-notification__close-icon"})],1)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-inline-notification/cv-inline-notification.vue?vue&type=template&id=8852e3a4&

// EXTERNAL MODULE: ./src/mixins/notification-mixin.js
var notification_mixin = __webpack_require__("adbe");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/error--filled/20.js
var _20 = __webpack_require__("5440");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/checkmark--filled/20.js
var checkmark_filled_20 = __webpack_require__("69ba");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/warning--filled/20.js
var warning_filled_20 = __webpack_require__("5a13");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/20.js
var close_20 = __webpack_require__("9450");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/information--filled/20.js
var information_filled_20 = __webpack_require__("92ca");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-inline-notification/cv-inline-notification.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ var cv_inline_notificationvue_type_script_lang_js_ = ({
  name: 'CvInlineNotification',
  components: { Close20: close_20["a" /* default */] },
  mixins: [notification_mixin["a" /* default */]],
  props: {
    actionLabel: { type: String, default: '' },
    closeAriaLabel: { type: String, default: 'Dismiss notification' },
    kind: {
      type: String,
      default: 'info',
      validator: val => ['error', 'info', 'warning', 'success'].includes(val),
    },
    lowContrast: Boolean,
  },
  computed: {
    icon() {
      switch (this.kind) {
        case 'error':
          return _20["a" /* default */];
        case 'warning':
          return warning_filled_20["a" /* default */];
        case 'success':
          return checkmark_filled_20["a" /* default */];
        case 'info':
          return information_filled_20["a" /* default */];
        default:
          return '';
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-inline-notification/cv-inline-notification.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_inline_notification_cv_inline_notificationvue_type_script_lang_js_ = (cv_inline_notificationvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-inline-notification/cv-inline-notification.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_inline_notification_cv_inline_notificationvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_inline_notification = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "a865":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-slider/cv-slider-skeleton.vue?vue&type=template&id=8eda9f40&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-slider bx--form-item"},[_c('label',{staticClass:"bx--label bx--skeleton"}),_c('div',{staticClass:"bx--slider-container bx--skeleton"},[_c('span',{staticClass:"bx--slider__range-label"}),_c('div',{staticClass:"bx--slider"},[_c('div',{staticClass:"bx--slider__track"}),_c('div',{staticClass:"bx--slider__filled-track"}),_c('div',{staticClass:"bx--slider__thumb"})]),_c('span',{staticClass:"bx--slider__range-label"})])])}]


// CONCATENATED MODULE: ./src/components/cv-slider/cv-slider-skeleton.vue?vue&type=template&id=8eda9f40&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-slider/cv-slider-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_slider_skeletonvue_type_script_lang_js_ = ({
  name: 'CvSliderSkeleton',
});

// CONCATENATED MODULE: ./src/components/cv-slider/cv-slider-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_slider_cv_slider_skeletonvue_type_script_lang_js_ = (cv_slider_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-slider/cv-slider-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_slider_cv_slider_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_slider_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "ac95":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _rollupPluginBabelHelpers = __webpack_require__("cfd8");
var iconHelpers = __webpack_require__("3bda");

var virtual_CheckmarkFilled16 = {
  name: 'CheckmarkFilled16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M8,1C4.1,1,1,4.1,1,8c0,3.9,3.1,7,7,7s7-3.1,7-7C15,4.1,11.9,1,8,1z M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z",
        "data-icon-path": "inner-path",
        "opacity": "0"
      }
    }), children]);
  }
};

module.exports = virtual_CheckmarkFilled16;


/***/ }),

/***/ "adbe":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const kinds = ['error', 'warning', 'info', 'success'];

/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    kind: {
      type: String,
      required: true,
      validator: value => kinds.includes(value),
    },
    title: String,
    subTitle: String,
  },
  computed: {
    isAlert() {
      return kinds.indexOf(this.kind) < 2;
    },
  },
});


/***/ }),

/***/ "ae56":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_ChevronDown16 = {
  name: 'ChevronDown16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "8,11 3,6 3.7,5.3 8,9.6 12.3,5.3 13,6"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_ChevronDown16);


/***/ }),

/***/ "aee1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tooltip/cv-tooltip.vue?vue&type=template&id=6fdbbc8a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',{staticClass:"cv-tooltip bx--tooltip__trigger bx--tooltip--a11y",class:("bx--tooltip--" + _vm.direction + " bx--tooltip--align-" + _vm.alignment),attrs:{"type":"button"}},[_c('span',{staticClass:"bx--assistive-text"},[_vm._v(_vm._s(_vm.tip))]),_vm._t("default",[_c('Information16')])],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-tooltip.vue?vue&type=template&id=6fdbbc8a&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/information/16.js
var _16 = __webpack_require__("4820");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tooltip/cv-tooltip.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_tooltipvue_type_script_lang_js_ = ({
  name: 'CvTooltip',
  components: { Information16: _16["a" /* default */] },
  props: {
    alignment: { type: String, default: 'center', validator: val => ['start', 'center', 'end'].includes(val) },
    direction: {
      type: String,
      default: 'top',
      validator(val) {
        const validValues = ['top', 'left', 'right', 'bottom'];
        const valid = validValues.includes(val);
        if (!valid) {
          console.warn(`CVTooltip.direction must be one of the following: ${validValues}`);
        }
        return valid;
      },
    },
    tip: { type: String, required: true },
  },
});

// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-tooltip.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tooltip_cv_tooltipvue_type_script_lang_js_ = (cv_tooltipvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-tooltip.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tooltip_cv_tooltipvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_tooltip = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "b574":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav.vue?vue&type=template&id=7482b550&
var cv_side_navvue_type_template_id_7482b550_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:"cv-side-nav bx--side-nav bx--side-nav__navigation",class:{
    'bx--side-nav--expanded': _vm.panelExpanded,
    'bx--side-nav--rail': _vm.rail,
    'bx--side-nav--collapsed': !_vm.panelExpanded && _vm.fixed,
    'bx--side-nav--ux': _vm.isChildOfHeader,
  },attrs:{"aria-hidden":!_vm.panelExpanded && !_vm.fixed,"id":_vm.id},on:{"focusout":_vm.onFocusout,"mousedown":_vm.onMouseDown}},[_vm._t("default"),(!_vm.fixed && !_vm.rail && !_vm.headerEmbedded)?_c('cv-side-nav-footer',{attrs:{"expanded":_vm.panelExpanded,"assistiveText":_vm.assistiveToggleText},on:{"toggle-expand":_vm.toggleExpand}}):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav.vue?vue&type=template&id=7482b550&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/_cv-side-nav-footer.vue?vue&type=template&id=a5afbb20&
var _cv_side_nav_footervue_type_template_id_a5afbb20_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('footer',{staticClass:"cv-side-nav-footer bx--side-nav__footer"},[_c('button',_vm._b({staticClass:"bx--side-nav__toggle",attrs:{"type":"button","title":_vm.assistiveText},on:{"click":function($event){return _vm.$emit('toggle-expand')}}},'button',_vm.$attrs,false),[_c('div',{staticClass:"bx--side-nav__icon"},[(_vm.expanded)?_c('Close20',{staticClass:"bx--side-nav__icon--collapse bx--side-nave-collapse-icon"}):_vm._e(),(!_vm.expanded)?_c('ChevronRight20',{staticClass:"bx--side-nav__icon--expand bx--side-nave-expand-icon"}):_vm._e()],1),_c('span',{staticClass:"bx--assistive-text"},[_vm._v(_vm._s(_vm.assistiveText))])])])}
var _cv_side_nav_footervue_type_template_id_a5afbb20_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/_cv-side-nav-footer.vue?vue&type=template&id=a5afbb20&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/20.js
var _20 = __webpack_require__("9450");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/chevron--right/20.js



var virtual_ChevronRight20 = {
  name: 'ChevronRight20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "22,16 12,26 10.6,24.6 19.2,16 10.6,7.4 12,6"
      }
    }), children]);
  }
};

/* harmony default export */ var chevron_right_20 = (virtual_ChevronRight20);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/_cv-side-nav-footer.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var _cv_side_nav_footervue_type_script_lang_js_ = ({
  name: 'CvSideNavFooter',
  inheritAttrs: false,
  components: { ChevronRight20: chevron_right_20, Close20: _20["a" /* default */] },
  props: {
    assistiveText: { type: String, default: 'Open / close side nav' },
    expanded: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/_cv-side-nav-footer.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_nav_footervue_type_script_lang_js_ = (_cv_side_nav_footervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/_cv-side-nav-footer.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_nav_footervue_type_script_lang_js_,
  _cv_side_nav_footervue_type_template_id_a5afbb20_render,
  _cv_side_nav_footervue_type_template_id_a5afbb20_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_side_nav_footer = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-side-nav.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_side_navvue_type_script_lang_js_ = ({
  name: 'CvSideNav',
  components: { CvSideNavFooter: _cv_side_nav_footer },
  props: {
    expanded: Boolean,
    fixed: Boolean,
    id: { type: String, required: true },
    assistiveToggleText: String,
    rail: Boolean,
  },
  mounted() {
    this.$parent.$emit('cv:panel-mounted', this);
  },
  beforeDestroy() {
    this.$parent.$emit('cv:panel-beforeDestroy', this);
  },
  data() {
    return {
      dataExpanded: this.expanded,
      headerEmbedded: false,
    };
  },
  watch: {
    expanded() {
      this.panelExpanded = this.expanded;
    },
  },
  computed: {
    isChildOfHeader() {
      return this.$parent.isCvHeader;
    },
    panelExpanded: {
      get() {
        return this.dataExpanded;
      },
      set(val) {
        if (this.dataExpanded !== val) {
          this.dataExpanded = val;
          this.$emit('modelEvent', val);
          this.$emit('panel-resize', this);
        }
      },
    },
  },
  methods: {
    onFocusout(ev) {
      this.$parent.$emit('cv:panel-focusout', this, ev);
    },
    onMouseDown(ev) {
      if (this.$el === ev.target) {
        // ignore mousedown on panel can cause focus event
        ev.preventDefault();
      }
    },
    toggleExpand() {
      this.panelExpanded = !this.dataExpanded;
    },
  },
  model: {
    event: 'modelEvent',
    prop: 'expanded',
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_navvue_type_script_lang_js_ = (cv_side_navvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-side-nav.vue





/* normalize component */

var cv_side_nav_component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_navvue_type_script_lang_js_,
  cv_side_navvue_type_template_id_7482b550_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_side_nav = __webpack_exports__["default"] = (cv_side_nav_component.exports);

/***/ }),

/***/ "b5dc":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-form/cv-form.vue?vue&type=template&id=770427f8&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('form',{staticClass:"cv-form bx--form"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-form/cv-form.vue?vue&type=template&id=770427f8&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-form/cv-form.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_formvue_type_script_lang_js_ = ({
  name: 'CvForm',
});

// CONCATENATED MODULE: ./src/components/cv-form/cv-form.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_form_cv_formvue_type_script_lang_js_ = (cv_formvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-form/cv-form.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_form_cv_formvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_form = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "b5e6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-button-set.vue?vue&type=template&id=75556bfe&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-button-set bx--btn-set"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-button/cv-button-set.vue?vue&type=template&id=75556bfe&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-button-set.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_button_setvue_type_script_lang_js_ = ({
  name: 'CvButtonSet',
});

// CONCATENATED MODULE: ./src/components/cv-button/cv-button-set.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_button_cv_button_setvue_type_script_lang_js_ = (cv_button_setvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-button/cv-button-set.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_button_cv_button_setvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_button_set = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "be03":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/cv-accordion-skeleton.vue?vue&type=template&id=4d04843e&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',{staticClass:"bx--accordion bx--skeleton"},[_c('cv-accordion-item-skeleton',{attrs:{"open":true}},[_c('cv-skeleton-text',{attrs:{"width":"90%"}}),_c('cv-skeleton-text',{attrs:{"width":"80%"}}),_c('cv-skeleton-text',{attrs:{"width":"95%"}})],1),_c('cv-accordion-item-skeleton'),_c('cv-accordion-item-skeleton'),_c('cv-accordion-item-skeleton')],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion-skeleton.vue?vue&type=template&id=4d04843e&

// EXTERNAL MODULE: ./src/components/cv-skeleton-text/cv-skeleton-text.vue + 4 modules
var cv_skeleton_text = __webpack_require__("6590");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/_cv-accordion-item-skeleton.vue?vue&type=template&id=f999e8fa&
var _cv_accordion_item_skeletonvue_type_template_id_f999e8fa_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"bx--accordion__item",class:{ 'bx--accordion__item--active': _vm.open }},[_c('button',{staticClass:"bx--accordion__heading",attrs:{"disabled":"","type":"button"}},[_c('ChevronRight16',{staticClass:"bx--accordion__arrow"}),_c('cv-skeleton-text',{staticClass:"bx--accordion__title"})],1),_c('div',{staticClass:"bx--accordion__content"},[_vm._t("default")],2)])}
var _cv_accordion_item_skeletonvue_type_template_id_f999e8fa_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-accordion/_cv-accordion-item-skeleton.vue?vue&type=template&id=f999e8fa&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--right/16.js
var _16 = __webpack_require__("7c7c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/_cv-accordion-item-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var _cv_accordion_item_skeletonvue_type_script_lang_js_ = ({
  name: 'CvAccordionItemSkeleton',
  components: {
    ChevronRight16: _16["a" /* default */],
    CvSkeletonText: cv_skeleton_text["default"],
  },
  props: {
    open: { type: Boolean, default: false },
  },
});

// CONCATENATED MODULE: ./src/components/cv-accordion/_cv-accordion-item-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_accordion_cv_accordion_item_skeletonvue_type_script_lang_js_ = (_cv_accordion_item_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-accordion/_cv-accordion-item-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_accordion_cv_accordion_item_skeletonvue_type_script_lang_js_,
  _cv_accordion_item_skeletonvue_type_template_id_f999e8fa_render,
  _cv_accordion_item_skeletonvue_type_template_id_f999e8fa_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_accordion_item_skeleton = (component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/cv-accordion-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_accordion_skeletonvue_type_script_lang_js_ = ({
  name: 'CvAccordionSkeleton',
  components: {
    CvSkeletonText: cv_skeleton_text["default"],
    CvAccordionItemSkeleton: _cv_accordion_item_skeleton,
  },
});

// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_accordion_cv_accordion_skeletonvue_type_script_lang_js_ = (cv_accordion_skeletonvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion-skeleton.vue





/* normalize component */

var cv_accordion_skeleton_component = Object(componentNormalizer["a" /* default */])(
  cv_accordion_cv_accordion_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_accordion_skeleton = __webpack_exports__["default"] = (cv_accordion_skeleton_component.exports);

/***/ }),

/***/ "c49c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tabs/cv-tabs.vue?vue&type=template&id=1de052ab&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-tabs",staticStyle:{"width":"100%"},on:{"focusout":_vm.onFocusout,"focusin":_vm.onFocusin}},[_c('div',_vm._g(_vm._b({staticClass:"cv-tab bx--tabs",class:{ 'bx--tabs--container': _vm.container },attrs:{"data-tabs":"","role":"navigation"},on:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"right",39,$event.key,["Right","ArrowRight"])){ return null; }if('button' in $event && $event.button !== 2){ return null; }$event.preventDefault();return _vm.onRight($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"left",37,$event.key,["Left","ArrowLeft"])){ return null; }if('button' in $event && $event.button !== 0){ return null; }$event.preventDefault();return _vm.onLeft($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.onDown($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.onUp($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.onEsc($event)}]}},'div',_vm.$attrs,false),_vm.$listeners),[_c('div',{ref:"trigger",staticClass:"bx--tabs-trigger",class:{ ' bx--tabs-trigger--open': _vm.open },attrs:{"tabindex":"0"},on:{"click":_vm.onClick,"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.onClick($event)}}},[_c('a',{staticClass:"bx--tabs-trigger-text",attrs:{"href":"javascript:void(0)","tabindex":"-1"}},[_vm._v(_vm._s(_vm.currentTabLabel))]),_c('chevron-down-glyph')],1),_c('ul',{staticClass:"bx--tabs__nav",class:{ 'bx--tabs__nav--hidden': !_vm.open },attrs:{"role":"tablist"}},_vm._l((_vm.tabs),function(tab){return _c('li',{key:tab.uid,staticClass:"cv-tabs-button bx--tabs__nav-item",class:{
          'bx--tabs__nav-item--selected': _vm.selectedId == tab.uid,
          'bx--tabs__nav-item--disabled': _vm.disabledTabs.indexOf(tab.uid) !== -1,
        },attrs:{"role":"tab","aria-selected":_vm.selectedId == tab.uid,"aria-disabled":_vm.disabledTabs.indexOf(tab.uid) !== -1}},[_c('a',{ref:"link",refInFor:true,staticClass:"bx--tabs__nav-link",attrs:{"href":"javascript:void(0)","role":"tab","aria-controls":tab.uid,"id":((tab.uid) + "-link")},on:{"click":function($event){return _vm.onTabClick(tab.uid)},"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.onTabEnter(tab.uid)}}},[_vm._v(_vm._s(tab.label))])])}),0)]),_c('div',{staticClass:"cv-tabs__panels"},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tabs.vue?vue&type=template&id=1de052ab&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/index.js
var chevron_down = __webpack_require__("fa89");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tabs/cv-tabs.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_tabsvue_type_script_lang_js_ = ({
  name: 'CvTabs',
  props: {
    noDefaultToFirst: Boolean,
    container: Boolean,
  },
  components: { ChevronDownGlyph: chevron_down["a" /* default */] },
  data() {
    return {
      tabs: [],
      selectedId: undefined,
      disabledTabs: [],
      open: false,
      lastDisplayProp: undefined,
      // data is open
    };
  },
  created() {
    // add these on created otherwise cv:mounted is too early.
    this.$on('cv:mounted', srcComponent => this.onCvMount(srcComponent));
    this.$on('cv:beforeDestroy', srcComponent => this.onCvBeforeDestroy(srcComponent));
    this.$on('cv:selected', srcComponent => this.onCvSelected(srcComponent));
    this.$on('cv:disabled', srcComponent => this.onCvDisabled(srcComponent));
    this.$on('cv:enabled', srcComponent => this.onCvEnabled(srcComponent));
  },
  computed: {
    triggerStyleOverride() {
      // <style carbon tweaks - DO NOT USE STYLE TAG as it causes SSR issues
      return { padding: 0 };
    },
    currentTabLabel() {
      const index = this.tabs.findIndex(tab => tab.uid === this.selectedId);

      return index > -1 ? this.tabs[index].label : '';
    },
  },
  methods: {
    onFocusin(ev) {
      if (ev.target.classList.contains('bx--tabs__nav-link') || ev.target.classList.contains('bx--tabs-trigger')) {
        // record display prop state
        this.lastDisplayProp = window.getComputedStyle(this.$refs.trigger).getPropertyValue('display');
      } else {
        this.lastDisplayProp = undefined;
      }
    },
    onFocusout(ev) {
      // works with onFocusin to determine whether focus needs to be set to a tab or trigger
      const displayProp = window.getComputedStyle(this.$refs.trigger).getPropertyValue('display');
      if (ev.relatedTarget) {
        if (
          ev.relatedTarget.classList.contains('bx--tabs__nav-link') ||
          ev.relatedTarget.classList.contains('bx--tabs-trigger')
        ) {
          return; // no need to do anything - focus is going somewhere
        } else {
          this.open = false;
        }
      } else {
        if (this.lastDisplayProp && this.lastDisplayProp !== displayProp) {
          if (displayProp === 'none') {
            // focus on selected tab
            const currentTabLink = this.$refs.link.find(link => link.getAttribute('aria-controls') === this.selectedId);
            if (currentTabLink) {
              currentTabLink.focus();
            }
          } else {
            this.$refs.trigger.focus();
          }
        } else {
          this.open = false;
        }
      }
    },
    onWindowResize() {
      // check whether trigger is displayed
      this.dataDropdownShown = window.getComputedStyle(this.$refs.trigger).getPropertyValue('display') !== 'none';
    },
    onDropChange(val) {
      this.onTabClick(val);
    },
    onCvMount(srcComponent) {
      this.tabs.push(srcComponent);
      if (this.tabs.filter(item => item.uid === srcComponent.uid).length > 1) {
        console.error(`CvTabs: Duplicate ID specified for CvTab, this may cause issues. {id: ${srcComponent.id}}}`);
      }

      this.checkDisabled(srcComponent);
      if (this.selectedId === undefined) {
        this.checkSelected();
      } else {
        if (srcComponent.internalSelected) {
          this.onTabClick(srcComponent.uid);
        }
      }
    },
    onCvBeforeDestroy(srcComponent) {
      const tabIndex = this.tabs.findIndex(item => item.uid === srcComponent.uid);
      if (tabIndex > -1) {
        const wasSelected = srcComponent.uid === this.selectedId;

        this.tabs.splice(tabIndex, 1);

        this.checkDisabled(srcComponent);

        if (wasSelected && this.tabs.length) {
          this.onTabClick(this.tabs[Math.max(tabIndex - 1, 0)].uid);
        }
      }
    },
    onTabClick(id) {
      if (this.disabledTabs.indexOf(id) === -1) {
        if (this.selectedId !== id) {
          let newIndex = -1;

          this.selectedId = id;

          for (let i = 0; i < this.tabs.length; i++) {
            if (this.tabs[i].uid === id) {
              this.tabs[i].internalSelected = true;
              newIndex = i;
            } else {
              this.tabs[i].internalSelected = false;
            }
          }

          this.open = false;
          if (this.$refs.trigger) {
            // following code build sometimes trigger is not yet available
            this.$refs.trigger.focus();
          }

          this.$emit('tab-selected', newIndex);
        }
      }
    },
    onCvSelected(srcComponent) {
      this.onTabClick(srcComponent.uid);
    },
    onCvDisabled(srcComponent) {
      this.disabledTabs.push(srcComponent.uid);
    },
    onCvEnabled(srcComponent) {
      let arrIdx = this.disabledTabs.indexOf(srcComponent.uid);
      if (arrIdx !== -1) {
        this.disabledTabs.splice(arrIdx, 1);
      }
    },
    checkDisabled(srcComponent) {
      if (srcComponent.internalDisabled) {
        this.onCvDisabled(srcComponent);
      } else {
        this.onCvEnabled(srcComponent);
      }
    },
    checkSelected() {
      let id;

      for (let i = 0; i < this.tabs.length; i++) {
        if (this.tabs[i].internalSelected) {
          id = this.tabs[i].uid;
        }
      }

      if (!this.noDefaultToFirst && id === undefined && this.tabs.length) {
        id = this.tabs[0].uid;
      }

      if (id !== undefined) {
        this.$nextTick(() => {
          this.onTabClick(id);
        });
      }
    },
    isAllTabsDisabled() {
      return this.disabledTabs.length === this.tabs.length;
    },
    onTabEnter(id) {
      // const newIndex = this.tabs.findIndex(tab => tab.uid === id);

      this.onTabClick(id);
      this.$refs.trigger.focus();
    },
    onClick() {
      this.open = !this.open;
    },
    onEsc() {
      this.open = false;
    },
    onUp() {
      if (this.isAllTabsDisabled()) {
        return;
      }

      const displayProp = window.getComputedStyle(this.$refs.trigger).getPropertyValue('display');

      if (displayProp !== 'none') {
        const el = document.activeElement;
        let id;
        if (el.classList.contains('bx--tabs__nav-link')) {
          id = el.getAttribute('aria-controls');
        } else {
          id = this.selectedId;
        }

        const newIndex = this.move(id, false);
        this.$refs.link[newIndex].focus();
      }
    },
    onDown() {
      if (this.isAllTabsDisabled()) {
        return;
      }

      const displayProp = window.getComputedStyle(this.$refs.trigger).getPropertyValue('display');

      if (displayProp !== 'none') {
        if (!this.open) {
          this.open = true;
        } else {
          const el = document.activeElement;
          let id;
          if (el.classList.contains('bx--tabs__nav-link')) {
            id = el.getAttribute('aria-controls');
          } else {
            id = this.selectedId;
          }

          const newIndex = this.move(id, true);
          this.$refs.link[newIndex].focus();
        }
      }
    },
    onLeft() {
      if (this.isAllTabsDisabled()) {
        return;
      }

      const displayProp = window.getComputedStyle(this.$refs.trigger).getPropertyValue('display');
      if (displayProp === 'none') {
        const newIndex = this.move(this.selectedId, false);
        const newId = this.tabs[newIndex].uid;

        this.onTabClick(newId);
        this.$refs.link[newIndex].focus();
      }
    },
    move(id, next) {
      let newIndex;
      let newId;

      newIndex = this.tabs.findIndex(tab => tab.uid === id);

      if (newIndex > -1) {
        newIndex = next ? newIndex + 1 : newIndex - 1;
      }
      if (newIndex < 0 || newIndex >= this.tabs.length) {
        newIndex = next ? 0 : this.tabs.length - 1;
      }

      newId = this.tabs[newIndex].uid;
      while (newId === this.selectedId || this.disabledTabs.indexOf(newId) !== -1) {
        if (newIndex > -1) {
          newIndex = next ? newIndex + 1 : newIndex - 1;
        }
        if (newIndex < 0 || newIndex >= this.tabs.length) {
          newIndex = next ? 0 : this.tabs.length - 1;
        }
        newId = this.tabs[newIndex].uid;
      }

      return newIndex;
    },
    onRight() {
      if (this.isAllTabsDisabled()) {
        return;
      }

      const displayProp = window.getComputedStyle(this.$refs.trigger).getPropertyValue('display');
      if (displayProp === 'none') {
        const newIndex = this.move(this.selectedId, true);
        const newId = this.tabs[newIndex].uid;

        this.onTabClick(newId);
        this.$refs.link[newIndex].focus();
      }
    },
    selected(index) {
      let selItem = this.tabs[index ? index : -1];
      this.selectedId = selItem ? selItem.uid : undefined;
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tabs.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tabs_cv_tabsvue_type_script_lang_js_ = (cv_tabsvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tabs/cv-tabs.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tabs_cv_tabsvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_tabs = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "c5a1":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    disabled: Boolean,
    to: { type: [String, Object] },
    href: String,
  },
  computed: {
    tagType() {
      // if to is used and not href then user wanted a router-link
      return this.to && !this.href ? 'router-link' : 'a';
    },
    linkProps() {
      if (this.disabled) {
        return {
          'aria-disabled': true,
        };
      } else if (this.to && !this.href) {
        return { to: this.to };
      }
      return { href: this.href };
    },
  },
});


/***/ }),

/***/ "c822":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-form/cv-form-group.vue?vue&type=template&id=bbf5624a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('fieldset',{staticClass:"cv-form-group bx--fieldset"},[_c('legend',{staticClass:"bx--label"},[_vm._t("label")],2),_vm._t("content")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-form/cv-form-group.vue?vue&type=template&id=bbf5624a&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-form/cv-form-group.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_form_groupvue_type_script_lang_js_ = ({
  name: 'CvFormGroup',
});

// CONCATENATED MODULE: ./src/components/cv-form/cv-form-group.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_form_cv_form_groupvue_type_script_lang_js_ = (cv_form_groupvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-form/cv-form-group.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_form_cv_form_groupvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_form_group = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "c9df":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-skip-to-content.vue?vue&type=template&id=7ea09a78&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-skip-to-content bx--skip-to-content"},'component',_vm.linkProps,false),_vm.$listeners),[_vm._t("default",[_vm._v("Skip to main content")])],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-skip-to-content.vue?vue&type=template&id=7ea09a78&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-skip-to-content.vue?vue&type=script&lang=js&
//
//
//
//
//
//



/* harmony default export */ var cv_skip_to_contentvue_type_script_lang_js_ = ({
  name: 'CvSkipToContent',
  mixins: [link_mixin["a" /* default */]],
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-skip-to-content.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_skip_to_contentvue_type_script_lang_js_ = (cv_skip_to_contentvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-skip-to-content.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_skip_to_contentvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_skip_to_content = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "cb40":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-menu-button.vue?vue&type=template&id=383435ec&
var cv_header_menu_buttonvue_type_template_id_383435ec_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',_vm._g({staticClass:"cv-header-menu-button",class:_vm.buttonClasses,attrs:{"type":"button","aria-haspopup":"true","aria-controls":_vm.ariaControls,"aria-expanded":_vm.active},on:{"click":_vm.gaToggle,"focusout":_vm.gaFocusout}},_vm.$listeners),[(_vm.dataActive)?_c('Close20'):_vm._e(),(!_vm.dataActive)?_c('Menu20'):_vm._e()],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu-button.vue?vue&type=template&id=383435ec&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/20.js
var _20 = __webpack_require__("9450");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/menu/20.js



var virtual_Menu20 = {
  name: 'Menu20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '20',
      height: '20',
      viewBox: '0 0 20 20',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('rect', {
      attrs: {
        "width": "16",
        "height": "1.2",
        "x": "2",
        "y": "14.8"
      }
    }), createElement('rect', {
      attrs: {
        "width": "16",
        "height": "1.2",
        "x": "2",
        "y": "11.2"
      }
    }), createElement('rect', {
      attrs: {
        "width": "16",
        "height": "1.2",
        "x": "2",
        "y": "7.6"
      }
    }), createElement('rect', {
      attrs: {
        "width": "16",
        "height": "1.2",
        "x": "2",
        "y": "4"
      }
    }), children]);
  }
};

/* harmony default export */ var menu_20 = (virtual_Menu20);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-menu-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var cv_header_menu_buttonvue_type_script_lang_js_ = ({
  name: 'CvHeaderMenuButton',
  mixins: [uid_mixin["a" /* default */]],
  components: { Close20: _20["a" /* default */], Menu20: menu_20 },
  props: {
    active: Boolean,
    ariaControls: { type: String, required: true },
  },
  mounted() {
    this.$parent.$emit('cv:panel-control-mounted', this);
  },
  beforeDestroy() {
    this.$parent.$emit('cv:panel-control-beforeDestroy', this);
  },
  data() {
    return {
      dataActive: this.active,
      hasRail: false,
    };
  },
  watch: {
    active() {
      if (this.active !== this.dataActive) {
        this.gaToggle();
      }
    },
  },
  computed: {
    panelExpanded: {
      get() {
        return this.dataActive;
      },
      set(val) {
        // do not emit 'cv:panel-control-toggle'
        this.dataActive = val;
      },
    },
    buttonClasses() {
      let classes = ['bx--header__action', 'bx--header__menu-trigger', 'bx--header__menu-toggle'];
      if (this.dataActive) {
        classes.push('bx--header__action--active');
      }
      if (!this.hasRail) {
        classes.push('bx--header__menu-toggle__hidden');
      }
      return classes;
    },
  },
  methods: {
    gaToggle() {
      this.$el.focus();
      this.$parent.$emit('cv:panel-control-toggle', this);
    },
    gaFocusout(ev) {
      this.$parent.$emit('cv:panel-control-focusout', this, ev);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_menu_buttonvue_type_script_lang_js_ = (cv_header_menu_buttonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu-button.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_menu_buttonvue_type_script_lang_js_,
  cv_header_menu_buttonvue_type_template_id_383435ec_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_menu_button = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "cbfa":
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
     true ? factory(exports) :
    undefined;
}(this, function (exports) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    var fp = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Arabic = {
        weekdays: {
            shorthand: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"],
            longhand: [
                "الأحد",
                "الاثنين",
                "الثلاثاء",
                "الأربعاء",
                "الخميس",
                "الجمعة",
                "السبت",
            ]
        },
        months: {
            shorthand: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
            longhand: [
                "يناير",
                "فبراير",
                "مارس",
                "أبريل",
                "مايو",
                "يونيو",
                "يوليو",
                "أغسطس",
                "سبتمبر",
                "أكتوبر",
                "نوفمبر",
                "ديسمبر",
            ]
        },
        rangeSeparator: " - "
    };
    fp.l10ns.ar = Arabic;
    fp.l10ns;

    var fp$1 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Austria = {
        weekdays: {
            shorthand: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
            longhand: [
                "Sonntag",
                "Montag",
                "Dienstag",
                "Mittwoch",
                "Donnerstag",
                "Freitag",
                "Samstag",
            ]
        },
        months: {
            shorthand: [
                "Jän",
                "Feb",
                "Mär",
                "Apr",
                "Mai",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Okt",
                "Nov",
                "Dez",
            ],
            longhand: [
                "Jänner",
                "Februar",
                "März",
                "April",
                "Mai",
                "Juni",
                "Juli",
                "August",
                "September",
                "Oktober",
                "November",
                "Dezember",
            ]
        },
        firstDayOfWeek: 1,
        weekAbbreviation: "KW",
        rangeSeparator: " bis ",
        scrollTitle: "Zum Ändern scrollen",
        toggleTitle: "Zum Umschalten klicken"
    };
    fp$1.l10ns.at = Austria;
    fp$1.l10ns;

    var fp$2 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Azerbaijan = {
        weekdays: {
            shorthand: ["Baz", "BzE", "ÇAx", "Çər", "CAx", "Cüm", "Şən"],
            longhand: [
                "Bazar",
                "Bazar ertəsi",
                "Çərşənbə axşamı",
                "Çərşənbə",
                "Cümə axşamı",
                "Cümə",
                "Şənbə",
            ]
        },
        months: {
            shorthand: [
                "Yan",
                "Fev",
                "Mar",
                "Apr",
                "May",
                "İyn",
                "İyl",
                "Avq",
                "Sen",
                "Okt",
                "Noy",
                "Dek",
            ],
            longhand: [
                "Yanvar",
                "Fevral",
                "Mart",
                "Aprel",
                "May",
                "İyun",
                "İyul",
                "Avqust",
                "Sentyabr",
                "Oktyabr",
                "Noyabr",
                "Dekabr",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return ".";
        },
        rangeSeparator: " - ",
        weekAbbreviation: "Hf",
        scrollTitle: "Artırmaq üçün sürüşdürün",
        toggleTitle: "Aç / Bağla",
        amPM: ["GƏ", "GS"],
        time_24hr: true
    };
    fp$2.l10ns.az = Azerbaijan;
    fp$2.l10ns;

    var fp$3 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Belarusian = {
        weekdays: {
            shorthand: ["Нд", "Пн", "Аў", "Ср", "Чц", "Пт", "Сб"],
            longhand: [
                "Нядзеля",
                "Панядзелак",
                "Аўторак",
                "Серада",
                "Чацвер",
                "Пятніца",
                "Субота",
            ]
        },
        months: {
            shorthand: [
                "Сту",
                "Лют",
                "Сак",
                "Кра",
                "Тра",
                "Чэр",
                "Ліп",
                "Жні",
                "Вер",
                "Кас",
                "Ліс",
                "Сне",
            ],
            longhand: [
                "Студзень",
                "Люты",
                "Сакавік",
                "Красавік",
                "Травень",
                "Чэрвень",
                "Ліпень",
                "Жнівень",
                "Верасень",
                "Кастрычнік",
                "Лістапад",
                "Снежань",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        },
        rangeSeparator: " — ",
        weekAbbreviation: "Тыд.",
        scrollTitle: "Пракруціце для павелічэння",
        toggleTitle: "Націсніце для пераключэння",
        amPM: ["ДП", "ПП"],
        yearAriaLabel: "Год",
        time_24hr: true
    };
    fp$3.l10ns.be = Belarusian;
    fp$3.l10ns;

    var fp$4 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Bosnian = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"],
            longhand: [
                "Nedjelja",
                "Ponedjeljak",
                "Utorak",
                "Srijeda",
                "Četvrtak",
                "Petak",
                "Subota",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Maj",
                "Jun",
                "Jul",
                "Avg",
                "Sep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "Januar",
                "Februar",
                "Mart",
                "April",
                "Maj",
                "Juni",
                "Juli",
                "Avgust",
                "Septembar",
                "Oktobar",
                "Novembar",
                "Decembar",
            ]
        },
        time_24hr: true
    };
    fp$4.l10ns.bs = Bosnian;
    fp$4.l10ns;

    var fp$5 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Bulgarian = {
        weekdays: {
            shorthand: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
            longhand: [
                "Неделя",
                "Понеделник",
                "Вторник",
                "Сряда",
                "Четвъртък",
                "Петък",
                "Събота",
            ]
        },
        months: {
            shorthand: [
                "Яну",
                "Фев",
                "Март",
                "Апр",
                "Май",
                "Юни",
                "Юли",
                "Авг",
                "Сеп",
                "Окт",
                "Ное",
                "Дек",
            ],
            longhand: [
                "Януари",
                "Февруари",
                "Март",
                "Април",
                "Май",
                "Юни",
                "Юли",
                "Август",
                "Септември",
                "Октомври",
                "Ноември",
                "Декември",
            ]
        },
        time_24hr: true,
        firstDayOfWeek: 1
    };
    fp$5.l10ns.bg = Bulgarian;
    fp$5.l10ns;

    var fp$6 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Bangla = {
        weekdays: {
            shorthand: ["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহস্পতি", "শুক্র", "শনি"],
            longhand: [
                "রবিবার",
                "সোমবার",
                "মঙ্গলবার",
                "বুধবার",
                "বৃহস্পতিবার",
                "শুক্রবার",
                "শনিবার",
            ]
        },
        months: {
            shorthand: [
                "জানু",
                "ফেব্রু",
                "মার্চ",
                "এপ্রিল",
                "মে",
                "জুন",
                "জুলাই",
                "আগ",
                "সেপ্টে",
                "অক্টো",
                "নভে",
                "ডিসে",
            ],
            longhand: [
                "জানুয়ারী",
                "ফেব্রুয়ারী",
                "মার্চ",
                "এপ্রিল",
                "মে",
                "জুন",
                "জুলাই",
                "আগস্ট",
                "সেপ্টেম্বর",
                "অক্টোবর",
                "নভেম্বর",
                "ডিসেম্বর",
            ]
        }
    };
    fp$6.l10ns.bn = Bangla;
    fp$6.l10ns;

    var fp$7 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Catalan = {
        weekdays: {
            shorthand: ["Dg", "Dl", "Dt", "Dc", "Dj", "Dv", "Ds"],
            longhand: [
                "Diumenge",
                "Dilluns",
                "Dimarts",
                "Dimecres",
                "Dijous",
                "Divendres",
                "Dissabte",
            ]
        },
        months: {
            shorthand: [
                "Gen",
                "Febr",
                "Març",
                "Abr",
                "Maig",
                "Juny",
                "Jul",
                "Ag",
                "Set",
                "Oct",
                "Nov",
                "Des",
            ],
            longhand: [
                "Gener",
                "Febrer",
                "Març",
                "Abril",
                "Maig",
                "Juny",
                "Juliol",
                "Agost",
                "Setembre",
                "Octubre",
                "Novembre",
                "Desembre",
            ]
        },
        ordinal: function (nth) {
            var s = nth % 100;
            if (s > 3 && s < 21)
                return "è";
            switch (s % 10) {
                case 1:
                    return "r";
                case 2:
                    return "n";
                case 3:
                    return "r";
                case 4:
                    return "t";
                default:
                    return "è";
            }
        },
        firstDayOfWeek: 1,
        time_24hr: true
    };
    fp$7.l10ns.cat = Catalan;
    fp$7.l10ns;

    var fp$8 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Czech = {
        weekdays: {
            shorthand: ["Ne", "Po", "Út", "St", "Čt", "Pá", "So"],
            longhand: [
                "Neděle",
                "Pondělí",
                "Úterý",
                "Středa",
                "Čtvrtek",
                "Pátek",
                "Sobota",
            ]
        },
        months: {
            shorthand: [
                "Led",
                "Ún",
                "Bře",
                "Dub",
                "Kvě",
                "Čer",
                "Čvc",
                "Srp",
                "Zář",
                "Říj",
                "Lis",
                "Pro",
            ],
            longhand: [
                "Leden",
                "Únor",
                "Březen",
                "Duben",
                "Květen",
                "Červen",
                "Červenec",
                "Srpen",
                "Září",
                "Říjen",
                "Listopad",
                "Prosinec",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return ".";
        },
        rangeSeparator: " do ",
        weekAbbreviation: "Týd.",
        scrollTitle: "Rolujte pro změnu",
        toggleTitle: "Přepnout dopoledne/odpoledne",
        amPM: ["dop.", "odp."],
        yearAriaLabel: "Rok",
        time_24hr: true
    };
    fp$8.l10ns.cs = Czech;
    fp$8.l10ns;

    var fp$9 = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Welsh = {
        weekdays: {
            shorthand: ["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"],
            longhand: [
                "Dydd Sul",
                "Dydd Llun",
                "Dydd Mawrth",
                "Dydd Mercher",
                "Dydd Iau",
                "Dydd Gwener",
                "Dydd Sadwrn",
            ]
        },
        months: {
            shorthand: [
                "Ion",
                "Chwef",
                "Maw",
                "Ebr",
                "Mai",
                "Meh",
                "Gorff",
                "Awst",
                "Medi",
                "Hyd",
                "Tach",
                "Rhag",
            ],
            longhand: [
                "Ionawr",
                "Chwefror",
                "Mawrth",
                "Ebrill",
                "Mai",
                "Mehefin",
                "Gorffennaf",
                "Awst",
                "Medi",
                "Hydref",
                "Tachwedd",
                "Rhagfyr",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function (nth) {
            if (nth === 1)
                return "af";
            if (nth === 2)
                return "ail";
            if (nth === 3 || nth === 4)
                return "ydd";
            if (nth === 5 || nth === 6)
                return "ed";
            if ((nth >= 7 && nth <= 10) ||
                nth == 12 ||
                nth == 15 ||
                nth == 18 ||
                nth == 20)
                return "fed";
            if (nth == 11 ||
                nth == 13 ||
                nth == 14 ||
                nth == 16 ||
                nth == 17 ||
                nth == 19)
                return "eg";
            if (nth >= 21 && nth <= 39)
                return "ain";
            // Inconclusive.
            return "";
        },
        time_24hr: true
    };
    fp$9.l10ns.cy = Welsh;
    fp$9.l10ns;

    var fp$a = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Danish = {
        weekdays: {
            shorthand: ["søn", "man", "tir", "ons", "tors", "fre", "lør"],
            longhand: [
                "søndag",
                "mandag",
                "tirsdag",
                "onsdag",
                "torsdag",
                "fredag",
                "lørdag",
            ]
        },
        months: {
            shorthand: [
                "jan",
                "feb",
                "mar",
                "apr",
                "maj",
                "jun",
                "jul",
                "aug",
                "sep",
                "okt",
                "nov",
                "dec",
            ],
            longhand: [
                "januar",
                "februar",
                "marts",
                "april",
                "maj",
                "juni",
                "juli",
                "august",
                "september",
                "oktober",
                "november",
                "december",
            ]
        },
        ordinal: function () {
            return ".";
        },
        firstDayOfWeek: 1,
        rangeSeparator: " til ",
        weekAbbreviation: "uge",
        time_24hr: true
    };
    fp$a.l10ns.da = Danish;
    fp$a.l10ns;

    var fp$b = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var German = {
        weekdays: {
            shorthand: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
            longhand: [
                "Sonntag",
                "Montag",
                "Dienstag",
                "Mittwoch",
                "Donnerstag",
                "Freitag",
                "Samstag",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mär",
                "Apr",
                "Mai",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Okt",
                "Nov",
                "Dez",
            ],
            longhand: [
                "Januar",
                "Februar",
                "März",
                "April",
                "Mai",
                "Juni",
                "Juli",
                "August",
                "September",
                "Oktober",
                "November",
                "Dezember",
            ]
        },
        firstDayOfWeek: 1,
        weekAbbreviation: "KW",
        rangeSeparator: " bis ",
        scrollTitle: "Zum Ändern scrollen",
        toggleTitle: "Zum Umschalten klicken",
        time_24hr: true
    };
    fp$b.l10ns.de = German;
    fp$b.l10ns;

    var english = {
        weekdays: {
            shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            longhand: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
            ],
            longhand: [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
            ]
        },
        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
        firstDayOfWeek: 0,
        ordinal: function (nth) {
            var s = nth % 100;
            if (s > 3 && s < 21)
                return "th";
            switch (s % 10) {
                case 1:
                    return "st";
                case 2:
                    return "nd";
                case 3:
                    return "rd";
                default:
                    return "th";
            }
        },
        rangeSeparator: " to ",
        weekAbbreviation: "Wk",
        scrollTitle: "Scroll to increment",
        toggleTitle: "Click to toggle",
        amPM: ["AM", "PM"],
        yearAriaLabel: "Year",
        hourAriaLabel: "Hour",
        minuteAriaLabel: "Minute",
        time_24hr: false
    };

    var fp$c = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Esperanto = {
        firstDayOfWeek: 1,
        rangeSeparator: " ĝis ",
        weekAbbreviation: "Sem",
        scrollTitle: "Rulumu por pligrandigi la valoron",
        toggleTitle: "Klaku por ŝalti",
        weekdays: {
            shorthand: ["Dim", "Lun", "Mar", "Mer", "Ĵaŭ", "Ven", "Sab"],
            longhand: [
                "dimanĉo",
                "lundo",
                "mardo",
                "merkredo",
                "ĵaŭdo",
                "vendredo",
                "sabato",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Maj",
                "Jun",
                "Jul",
                "Aŭg",
                "Sep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "januaro",
                "februaro",
                "marto",
                "aprilo",
                "majo",
                "junio",
                "julio",
                "aŭgusto",
                "septembro",
                "oktobro",
                "novembro",
                "decembro",
            ]
        },
        ordinal: function () {
            return "-a";
        },
        time_24hr: true
    };
    fp$c.l10ns.eo = Esperanto;
    fp$c.l10ns;

    var fp$d = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Spanish = {
        weekdays: {
            shorthand: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"],
            longhand: [
                "Domingo",
                "Lunes",
                "Martes",
                "Miércoles",
                "Jueves",
                "Viernes",
                "Sábado",
            ]
        },
        months: {
            shorthand: [
                "Ene",
                "Feb",
                "Mar",
                "Abr",
                "May",
                "Jun",
                "Jul",
                "Ago",
                "Sep",
                "Oct",
                "Nov",
                "Dic",
            ],
            longhand: [
                "Enero",
                "Febrero",
                "Marzo",
                "Abril",
                "Mayo",
                "Junio",
                "Julio",
                "Agosto",
                "Septiembre",
                "Octubre",
                "Noviembre",
                "Diciembre",
            ]
        },
        ordinal: function () {
            return "º";
        },
        firstDayOfWeek: 1,
        rangeSeparator: " a ",
        time_24hr: true
    };
    fp$d.l10ns.es = Spanish;
    fp$d.l10ns;

    var fp$e = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Estonian = {
        weekdays: {
            shorthand: ["P", "E", "T", "K", "N", "R", "L"],
            longhand: [
                "Pühapäev",
                "Esmaspäev",
                "Teisipäev",
                "Kolmapäev",
                "Neljapäev",
                "Reede",
                "Laupäev",
            ]
        },
        months: {
            shorthand: [
                "Jaan",
                "Veebr",
                "Märts",
                "Apr",
                "Mai",
                "Juuni",
                "Juuli",
                "Aug",
                "Sept",
                "Okt",
                "Nov",
                "Dets",
            ],
            longhand: [
                "Jaanuar",
                "Veebruar",
                "Märts",
                "Aprill",
                "Mai",
                "Juuni",
                "Juuli",
                "August",
                "September",
                "Oktoober",
                "November",
                "Detsember",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return ".";
        },
        weekAbbreviation: "Näd",
        rangeSeparator: " kuni ",
        scrollTitle: "Keri, et suurendada",
        toggleTitle: "Klõpsa, et vahetada",
        time_24hr: true
    };
    fp$e.l10ns.et = Estonian;
    fp$e.l10ns;

    var fp$f = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Persian = {
        weekdays: {
            shorthand: ["یک", "دو", "سه", "چهار", "پنج", "جمعه", "شنبه"],
            longhand: [
                "یک‌شنبه",
                "دوشنبه",
                "سه‌شنبه",
                "چهارشنبه",
                "پنچ‌شنبه",
                "جمعه",
                "شنبه",
            ]
        },
        months: {
            shorthand: [
                "ژانویه",
                "فوریه",
                "مارس",
                "آوریل",
                "مه",
                "ژوئن",
                "ژوئیه",
                "اوت",
                "سپتامبر",
                "اکتبر",
                "نوامبر",
                "دسامبر",
            ],
            longhand: [
                "ژانویه",
                "فوریه",
                "مارس",
                "آوریل",
                "مه",
                "ژوئن",
                "ژوئیه",
                "اوت",
                "سپتامبر",
                "اکتبر",
                "نوامبر",
                "دسامبر",
            ]
        },
        firstDayOfWeek: 6,
        ordinal: function () {
            return "";
        }
    };
    fp$f.l10ns.fa = Persian;
    fp$f.l10ns;

    var fp$g = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Finnish = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"],
            longhand: [
                "Sunnuntai",
                "Maanantai",
                "Tiistai",
                "Keskiviikko",
                "Torstai",
                "Perjantai",
                "Lauantai",
            ]
        },
        months: {
            shorthand: [
                "Tammi",
                "Helmi",
                "Maalis",
                "Huhti",
                "Touko",
                "Kesä",
                "Heinä",
                "Elo",
                "Syys",
                "Loka",
                "Marras",
                "Joulu",
            ],
            longhand: [
                "Tammikuu",
                "Helmikuu",
                "Maaliskuu",
                "Huhtikuu",
                "Toukokuu",
                "Kesäkuu",
                "Heinäkuu",
                "Elokuu",
                "Syyskuu",
                "Lokakuu",
                "Marraskuu",
                "Joulukuu",
            ]
        },
        ordinal: function () {
            return ".";
        },
        time_24hr: true
    };
    fp$g.l10ns.fi = Finnish;
    fp$g.l10ns;

    var fp$h = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Faroese = {
        weekdays: {
            shorthand: ["Sun", "Mán", "Týs", "Mik", "Hós", "Frí", "Ley"],
            longhand: [
                "Sunnudagur",
                "Mánadagur",
                "Týsdagur",
                "Mikudagur",
                "Hósdagur",
                "Fríggjadagur",
                "Leygardagur",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Mai",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Okt",
                "Nov",
                "Des",
            ],
            longhand: [
                "Januar",
                "Februar",
                "Mars",
                "Apríl",
                "Mai",
                "Juni",
                "Juli",
                "August",
                "Septembur",
                "Oktobur",
                "Novembur",
                "Desembur",
            ]
        },
        ordinal: function () {
            return ".";
        },
        firstDayOfWeek: 1,
        rangeSeparator: " til ",
        weekAbbreviation: "vika",
        scrollTitle: "Rulla fyri at broyta",
        toggleTitle: "Trýst fyri at skifta",
        yearAriaLabel: "Ár",
        time_24hr: true
    };
    fp$h.l10ns.fo = Faroese;
    fp$h.l10ns;

    var fp$i = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var French = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["dim", "lun", "mar", "mer", "jeu", "ven", "sam"],
            longhand: [
                "dimanche",
                "lundi",
                "mardi",
                "mercredi",
                "jeudi",
                "vendredi",
                "samedi",
            ]
        },
        months: {
            shorthand: [
                "janv",
                "févr",
                "mars",
                "avr",
                "mai",
                "juin",
                "juil",
                "août",
                "sept",
                "oct",
                "nov",
                "déc",
            ],
            longhand: [
                "janvier",
                "février",
                "mars",
                "avril",
                "mai",
                "juin",
                "juillet",
                "août",
                "septembre",
                "octobre",
                "novembre",
                "décembre",
            ]
        },
        ordinal: function (nth) {
            if (nth > 1)
                return "";
            return "er";
        },
        rangeSeparator: " au ",
        weekAbbreviation: "Sem",
        scrollTitle: "Défiler pour augmenter la valeur",
        toggleTitle: "Cliquer pour basculer",
        time_24hr: true
    };
    fp$i.l10ns.fr = French;
    fp$i.l10ns;

    var fp$j = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Greek = {
        weekdays: {
            shorthand: ["Κυ", "Δε", "Τρ", "Τε", "Πέ", "Πα", "Σά"],
            longhand: [
                "Κυριακή",
                "Δευτέρα",
                "Τρίτη",
                "Τετάρτη",
                "Πέμπτη",
                "Παρασκευή",
                "Σάββατο",
            ]
        },
        months: {
            shorthand: [
                "Ιαν",
                "Φεβ",
                "Μάρ",
                "Απρ",
                "Μάι",
                "Ιού",
                "Ιού",
                "Αύγ",
                "Σεπ",
                "Οκτ",
                "Νοέ",
                "Δεκ",
            ],
            longhand: [
                "Ιανουάριος",
                "Φεβρουάριος",
                "Μάρτιος",
                "Απρίλιος",
                "Μάιος",
                "Ιούνιος",
                "Ιούλιος",
                "Αύγουστος",
                "Σεπτέμβριος",
                "Οκτώβριος",
                "Νοέμβριος",
                "Δεκέμβριος",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        },
        weekAbbreviation: "Εβδ",
        rangeSeparator: " έως ",
        scrollTitle: "Μετακυλήστε για προσαύξηση",
        toggleTitle: "Κάντε κλικ για αλλαγή",
        amPM: ["ΠΜ", "ΜΜ"]
    };
    fp$j.l10ns.gr = Greek;
    fp$j.l10ns;

    var fp$k = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Hebrew = {
        weekdays: {
            shorthand: ["א", "ב", "ג", "ד", "ה", "ו", "ש"],
            longhand: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת"]
        },
        months: {
            shorthand: [
                "ינו׳",
                "פבר׳",
                "מרץ",
                "אפר׳",
                "מאי",
                "יוני",
                "יולי",
                "אוג׳",
                "ספט׳",
                "אוק׳",
                "נוב׳",
                "דצמ׳",
            ],
            longhand: [
                "ינואר",
                "פברואר",
                "מרץ",
                "אפריל",
                "מאי",
                "יוני",
                "יולי",
                "אוגוסט",
                "ספטמבר",
                "אוקטובר",
                "נובמבר",
                "דצמבר",
            ]
        },
        rangeSeparator: " אל ",
        time_24hr: true
    };
    fp$k.l10ns.he = Hebrew;
    fp$k.l10ns;

    var fp$l = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Hindi = {
        weekdays: {
            shorthand: ["रवि", "सोम", "मंगल", "बुध", "गुरु", "शुक्र", "शनि"],
            longhand: [
                "रविवार",
                "सोमवार",
                "मंगलवार",
                "बुधवार",
                "गुरुवार",
                "शुक्रवार",
                "शनिवार",
            ]
        },
        months: {
            shorthand: [
                "जन",
                "फर",
                "मार्च",
                "अप्रेल",
                "मई",
                "जून",
                "जूलाई",
                "अग",
                "सित",
                "अक्ट",
                "नव",
                "दि",
            ],
            longhand: [
                "जनवरी ",
                "फरवरी",
                "मार्च",
                "अप्रेल",
                "मई",
                "जून",
                "जूलाई",
                "अगस्त ",
                "सितम्बर",
                "अक्टूबर",
                "नवम्बर",
                "दिसम्बर",
            ]
        }
    };
    fp$l.l10ns.hi = Hindi;
    fp$l.l10ns;

    var fp$m = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Croatian = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"],
            longhand: [
                "Nedjelja",
                "Ponedjeljak",
                "Utorak",
                "Srijeda",
                "Četvrtak",
                "Petak",
                "Subota",
            ]
        },
        months: {
            shorthand: [
                "Sij",
                "Velj",
                "Ožu",
                "Tra",
                "Svi",
                "Lip",
                "Srp",
                "Kol",
                "Ruj",
                "Lis",
                "Stu",
                "Pro",
            ],
            longhand: [
                "Siječanj",
                "Veljača",
                "Ožujak",
                "Travanj",
                "Svibanj",
                "Lipanj",
                "Srpanj",
                "Kolovoz",
                "Rujan",
                "Listopad",
                "Studeni",
                "Prosinac",
            ]
        },
        time_24hr: true
    };
    fp$m.l10ns.hr = Croatian;
    fp$m.l10ns;

    var fp$n = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Hungarian = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["V", "H", "K", "Sz", "Cs", "P", "Szo"],
            longhand: [
                "Vasárnap",
                "Hétfő",
                "Kedd",
                "Szerda",
                "Csütörtök",
                "Péntek",
                "Szombat",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Már",
                "Ápr",
                "Máj",
                "Jún",
                "Júl",
                "Aug",
                "Szep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "Január",
                "Február",
                "Március",
                "Április",
                "Május",
                "Június",
                "Július",
                "Augusztus",
                "Szeptember",
                "Október",
                "November",
                "December",
            ]
        },
        ordinal: function () {
            return ".";
        },
        weekAbbreviation: "Hét",
        scrollTitle: "Görgessen",
        toggleTitle: "Kattintson a váltáshoz",
        rangeSeparator: " - ",
        time_24hr: true
    };
    fp$n.l10ns.hu = Hungarian;
    fp$n.l10ns;

    var fp$o = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Indonesian = {
        weekdays: {
            shorthand: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
            longhand: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Mei",
                "Jun",
                "Jul",
                "Agu",
                "Sep",
                "Okt",
                "Nov",
                "Des",
            ],
            longhand: [
                "Januari",
                "Februari",
                "Maret",
                "April",
                "Mei",
                "Juni",
                "Juli",
                "Agustus",
                "September",
                "Oktober",
                "November",
                "Desember",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        },
        time_24hr: true,
        rangeSeparator: " - "
    };
    fp$o.l10ns.id = Indonesian;
    fp$o.l10ns;

    var fp$p = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Icelandic = {
        weekdays: {
            shorthand: ["Sun", "Mán", "Þri", "Mið", "Fim", "Fös", "Lau"],
            longhand: [
                "Sunnudagur",
                "Mánudagur",
                "Þriðjudagur",
                "Miðvikudagur",
                "Fimmtudagur",
                "Föstudagur",
                "Laugardagur",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Maí",
                "Jún",
                "Júl",
                "Ágú",
                "Sep",
                "Okt",
                "Nóv",
                "Des",
            ],
            longhand: [
                "Janúar",
                "Febrúar",
                "Mars",
                "Apríl",
                "Maí",
                "Júní",
                "Júlí",
                "Ágúst",
                "September",
                "Október",
                "Nóvember",
                "Desember",
            ]
        },
        ordinal: function () {
            return ".";
        },
        firstDayOfWeek: 1,
        rangeSeparator: " til ",
        weekAbbreviation: "vika",
        yearAriaLabel: "Ár",
        time_24hr: true
    };
    fp$p.l10ns.is = Icelandic;
    fp$p.l10ns;

    var fp$q = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Italian = {
        weekdays: {
            shorthand: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"],
            longhand: [
                "Domenica",
                "Lunedì",
                "Martedì",
                "Mercoledì",
                "Giovedì",
                "Venerdì",
                "Sabato",
            ]
        },
        months: {
            shorthand: [
                "Gen",
                "Feb",
                "Mar",
                "Apr",
                "Mag",
                "Giu",
                "Lug",
                "Ago",
                "Set",
                "Ott",
                "Nov",
                "Dic",
            ],
            longhand: [
                "Gennaio",
                "Febbraio",
                "Marzo",
                "Aprile",
                "Maggio",
                "Giugno",
                "Luglio",
                "Agosto",
                "Settembre",
                "Ottobre",
                "Novembre",
                "Dicembre",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () { return "°"; },
        rangeSeparator: " al ",
        weekAbbreviation: "Se",
        scrollTitle: "Scrolla per aumentare",
        toggleTitle: "Clicca per cambiare",
        time_24hr: true
    };
    fp$q.l10ns.it = Italian;
    fp$q.l10ns;

    var fp$r = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Japanese = {
        weekdays: {
            shorthand: ["日", "月", "火", "水", "木", "金", "土"],
            longhand: [
                "日曜日",
                "月曜日",
                "火曜日",
                "水曜日",
                "木曜日",
                "金曜日",
                "土曜日",
            ]
        },
        months: {
            shorthand: [
                "1月",
                "2月",
                "3月",
                "4月",
                "5月",
                "6月",
                "7月",
                "8月",
                "9月",
                "10月",
                "11月",
                "12月",
            ],
            longhand: [
                "1月",
                "2月",
                "3月",
                "4月",
                "5月",
                "6月",
                "7月",
                "8月",
                "9月",
                "10月",
                "11月",
                "12月",
            ]
        },
        time_24hr: true,
        rangeSeparator: " から ",
        firstDayOfWeek: 1
    };
    fp$r.l10ns.ja = Japanese;
    fp$r.l10ns;

    var fp$s = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Georgian = {
        weekdays: {
            shorthand: ["კვ", "ორ", "სა", "ოთ", "ხუ", "პა", "შა"],
            longhand: [
                "კვირა",
                "ორშაბათი",
                "სამშაბათი",
                "ოთხშაბათი",
                "ხუთშაბათი",
                "პარასკევი",
                "შაბათი",
            ]
        },
        months: {
            shorthand: [
                "იან",
                "თებ",
                "მარ",
                "აპრ",
                "მაი",
                "ივნ",
                "ივლ",
                "აგვ",
                "სექ",
                "ოქტ",
                "ნოე",
                "დეკ",
            ],
            longhand: [
                "იანვარი",
                "თებერვალი",
                "მარტი",
                "აპრილი",
                "მაისი",
                "ივნისი",
                "ივლისი",
                "აგვისტო",
                "სექტემბერი",
                "ოქტომბერი",
                "ნოემბერი",
                "დეკემბერი",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        },
        rangeSeparator: " — ",
        weekAbbreviation: "კვ.",
        scrollTitle: "დასქროლეთ გასადიდებლად",
        toggleTitle: "დააკლიკეთ გადართვისთვის",
        amPM: ["AM", "PM"],
        yearAriaLabel: "წელი",
        time_24hr: true
    };
    fp$s.l10ns.ka = Georgian;
    fp$s.l10ns;

    var fp$t = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Korean = {
        weekdays: {
            shorthand: ["일", "월", "화", "수", "목", "금", "토"],
            longhand: [
                "일요일",
                "월요일",
                "화요일",
                "수요일",
                "목요일",
                "금요일",
                "토요일",
            ]
        },
        months: {
            shorthand: [
                "1월",
                "2월",
                "3월",
                "4월",
                "5월",
                "6월",
                "7월",
                "8월",
                "9월",
                "10월",
                "11월",
                "12월",
            ],
            longhand: [
                "1월",
                "2월",
                "3월",
                "4월",
                "5월",
                "6월",
                "7월",
                "8월",
                "9월",
                "10월",
                "11월",
                "12월",
            ]
        },
        ordinal: function () {
            return "일";
        },
        rangeSeparator: " ~ "
    };
    fp$t.l10ns.ko = Korean;
    fp$t.l10ns;

    var fp$u = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Khmer = {
        weekdays: {
            shorthand: ["អាទិត្យ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រហស.", "សុក្រ", "សៅរ៍"],
            longhand: [
                "អាទិត្យ",
                "ចន្ទ",
                "អង្គារ",
                "ពុធ",
                "ព្រហស្បតិ៍",
                "សុក្រ",
                "សៅរ៍",
            ]
        },
        months: {
            shorthand: [
                "មករា",
                "កុម្ភះ",
                "មីនា",
                "មេសា",
                "ឧសភា",
                "មិថុនា",
                "កក្កដា",
                "សីហា",
                "កញ្ញា",
                "តុលា",
                "វិច្ឆិកា",
                "ធ្នូ",
            ],
            longhand: [
                "មករា",
                "កុម្ភះ",
                "មីនា",
                "មេសា",
                "ឧសភា",
                "មិថុនា",
                "កក្កដា",
                "សីហា",
                "កញ្ញា",
                "តុលា",
                "វិច្ឆិកា",
                "ធ្នូ",
            ]
        },
        ordinal: function () {
            return "";
        },
        firstDayOfWeek: 1,
        rangeSeparator: " ដល់ ",
        weekAbbreviation: "សប្តាហ៍",
        scrollTitle: "រំកិលដើម្បីបង្កើន",
        toggleTitle: "ចុចដើម្បីផ្លាស់ប្ដូរ",
        yearAriaLabel: "ឆ្នាំ",
        time_24hr: true
    };
    fp$u.l10ns.km = Khmer;
    fp$u.l10ns;

    var fp$v = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Kazakh = {
        weekdays: {
            shorthand: ["Жс", "Дс", "Сc", "Ср", "Бс", "Жм", "Сб"],
            longhand: [
                "Жексенбi",
                "Дүйсенбi",
                "Сейсенбi",
                "Сәрсенбi",
                "Бейсенбi",
                "Жұма",
                "Сенбi",
            ]
        },
        months: {
            shorthand: [
                "Қаң",
                "Ақп",
                "Нау",
                "Сәу",
                "Мам",
                "Мау",
                "Шiл",
                "Там",
                "Қыр",
                "Қаз",
                "Қар",
                "Жел",
            ],
            longhand: [
                "Қаңтар",
                "Ақпан",
                "Наурыз",
                "Сәуiр",
                "Мамыр",
                "Маусым",
                "Шiлде",
                "Тамыз",
                "Қыркүйек",
                "Қазан",
                "Қараша",
                "Желтоқсан",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        },
        rangeSeparator: " — ",
        weekAbbreviation: "Апта",
        scrollTitle: "Үлкейту үшін айналдырыңыз",
        toggleTitle: "Ауыстыру үшін басыңыз",
        amPM: ["ТД", "ТК"],
        yearAriaLabel: "Жыл"
    };
    fp$v.l10ns.kz = Kazakh;
    fp$v.l10ns;

    var fp$w = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Lithuanian = {
        weekdays: {
            shorthand: ["S", "Pr", "A", "T", "K", "Pn", "Š"],
            longhand: [
                "Sekmadienis",
                "Pirmadienis",
                "Antradienis",
                "Trečiadienis",
                "Ketvirtadienis",
                "Penktadienis",
                "Šeštadienis",
            ]
        },
        months: {
            shorthand: [
                "Sau",
                "Vas",
                "Kov",
                "Bal",
                "Geg",
                "Bir",
                "Lie",
                "Rgp",
                "Rgs",
                "Spl",
                "Lap",
                "Grd",
            ],
            longhand: [
                "Sausis",
                "Vasaris",
                "Kovas",
                "Balandis",
                "Gegužė",
                "Birželis",
                "Liepa",
                "Rugpjūtis",
                "Rugsėjis",
                "Spalis",
                "Lapkritis",
                "Gruodis",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "-a";
        },
        weekAbbreviation: "Sav",
        scrollTitle: "Keisti laiką pelės rateliu",
        toggleTitle: "Perjungti laiko formatą",
        time_24hr: true
    };
    fp$w.l10ns.lt = Lithuanian;
    fp$w.l10ns;

    var fp$x = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Latvian = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"],
            longhand: [
                "Svētdiena",
                "Pirmdiena",
                "Otrdiena",
                "Trešdiena",
                "Ceturtdiena",
                "Piektdiena",
                "Sestdiena",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Mai",
                "Jūn",
                "Jūl",
                "Aug",
                "Sep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "Janvāris",
                "Februāris",
                "Marts",
                "Aprīlis",
                "Maijs",
                "Jūnijs",
                "Jūlijs",
                "Augusts",
                "Septembris",
                "Oktobris",
                "Novembris",
                "Decembris",
            ]
        },
        rangeSeparator: " līdz ",
        time_24hr: true
    };
    fp$x.l10ns.lv = Latvian;
    fp$x.l10ns;

    var fp$y = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Macedonian = {
        weekdays: {
            shorthand: ["Не", "По", "Вт", "Ср", "Че", "Пе", "Са"],
            longhand: [
                "Недела",
                "Понеделник",
                "Вторник",
                "Среда",
                "Четврток",
                "Петок",
                "Сабота",
            ]
        },
        months: {
            shorthand: [
                "Јан",
                "Фев",
                "Мар",
                "Апр",
                "Мај",
                "Јун",
                "Јул",
                "Авг",
                "Сеп",
                "Окт",
                "Ное",
                "Дек",
            ],
            longhand: [
                "Јануари",
                "Февруари",
                "Март",
                "Април",
                "Мај",
                "Јуни",
                "Јули",
                "Август",
                "Септември",
                "Октомври",
                "Ноември",
                "Декември",
            ]
        },
        firstDayOfWeek: 1,
        weekAbbreviation: "Нед.",
        rangeSeparator: " до ",
        time_24hr: true
    };
    fp$y.l10ns.mk = Macedonian;
    fp$y.l10ns;

    var fp$z = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Mongolian = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["Да", "Мя", "Лх", "Пү", "Ба", "Бя", "Ня"],
            longhand: ["Даваа", "Мягмар", "Лхагва", "Пүрэв", "Баасан", "Бямба", "Ням"]
        },
        months: {
            shorthand: [
                "1-р сар",
                "2-р сар",
                "3-р сар",
                "4-р сар",
                "5-р сар",
                "6-р сар",
                "7-р сар",
                "8-р сар",
                "9-р сар",
                "10-р сар",
                "11-р сар",
                "12-р сар",
            ],
            longhand: [
                "Нэгдүгээр сар",
                "Хоёрдугаар сар",
                "Гуравдугаар сар",
                "Дөрөвдүгээр сар",
                "Тавдугаар сар",
                "Зургаадугаар сар",
                "Долдугаар сар",
                "Наймдугаар сар",
                "Есдүгээр сар",
                "Аравдугаар сар",
                "Арваннэгдүгээр сар",
                "Арванхоёрдугаар сар",
            ]
        },
        rangeSeparator: "-с ",
        time_24hr: true
    };
    fp$z.l10ns.mn = Mongolian;
    fp$z.l10ns;

    var fp$A = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Malaysian = {
        weekdays: {
            shorthand: ["Min", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
            longhand: [
                "Minggu",
                "Isnin",
                "Selasa",
                "Rabu",
                "Khamis",
                "Jumaat",
                "Sabtu",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mac",
                "Apr",
                "Mei",
                "Jun",
                "Jul",
                "Ogo",
                "Sep",
                "Okt",
                "Nov",
                "Dis",
            ],
            longhand: [
                "Januari",
                "Februari",
                "Mac",
                "April",
                "Mei",
                "Jun",
                "Julai",
                "Ogos",
                "September",
                "Oktober",
                "November",
                "Disember",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        }
    };
    fp$A.l10ns;

    var fp$B = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Burmese = {
        weekdays: {
            shorthand: ["နွေ", "လာ", "ဂါ", "ဟူး", "ကြာ", "သော", "နေ"],
            longhand: [
                "တနင်္ဂနွေ",
                "တနင်္လာ",
                "အင်္ဂါ",
                "ဗုဒ္ဓဟူး",
                "ကြာသပတေး",
                "သောကြာ",
                "စနေ",
            ]
        },
        months: {
            shorthand: [
                "ဇန်",
                "ဖေ",
                "မတ်",
                "ပြီ",
                "မေ",
                "ဇွန်",
                "လိုင်",
                "သြ",
                "စက်",
                "အောက်",
                "နို",
                "ဒီ",
            ],
            longhand: [
                "ဇန်နဝါရီ",
                "ဖေဖော်ဝါရီ",
                "မတ်",
                "ဧပြီ",
                "မေ",
                "ဇွန်",
                "ဇူလိုင်",
                "သြဂုတ်",
                "စက်တင်ဘာ",
                "အောက်တိုဘာ",
                "နိုဝင်ဘာ",
                "ဒီဇင်ဘာ",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        },
        time_24hr: true
    };
    fp$B.l10ns.my = Burmese;
    fp$B.l10ns;

    var fp$C = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Dutch = {
        weekdays: {
            shorthand: ["zo", "ma", "di", "wo", "do", "vr", "za"],
            longhand: [
                "zondag",
                "maandag",
                "dinsdag",
                "woensdag",
                "donderdag",
                "vrijdag",
                "zaterdag",
            ]
        },
        months: {
            shorthand: [
                "jan",
                "feb",
                "mrt",
                "apr",
                "mei",
                "jun",
                "jul",
                "aug",
                "sept",
                "okt",
                "nov",
                "dec",
            ],
            longhand: [
                "januari",
                "februari",
                "maart",
                "april",
                "mei",
                "juni",
                "juli",
                "augustus",
                "september",
                "oktober",
                "november",
                "december",
            ]
        },
        firstDayOfWeek: 1,
        weekAbbreviation: "wk",
        rangeSeparator: " tot ",
        scrollTitle: "Scroll voor volgende / vorige",
        toggleTitle: "Klik om te wisselen",
        time_24hr: true,
        ordinal: function (nth) {
            if (nth === 1 || nth === 8 || nth >= 20)
                return "ste";
            return "de";
        }
    };
    fp$C.l10ns.nl = Dutch;
    fp$C.l10ns;

    var fp$D = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Norwegian = {
        weekdays: {
            shorthand: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"],
            longhand: [
                "Søndag",
                "Mandag",
                "Tirsdag",
                "Onsdag",
                "Torsdag",
                "Fredag",
                "Lørdag",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Mai",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Okt",
                "Nov",
                "Des",
            ],
            longhand: [
                "Januar",
                "Februar",
                "Mars",
                "April",
                "Mai",
                "Juni",
                "Juli",
                "August",
                "September",
                "Oktober",
                "November",
                "Desember",
            ]
        },
        firstDayOfWeek: 1,
        rangeSeparator: " til ",
        weekAbbreviation: "Uke",
        scrollTitle: "Scroll for å endre",
        toggleTitle: "Klikk for å veksle",
        time_24hr: true,
        ordinal: function () {
            return ".";
        }
    };
    fp$D.l10ns.no = Norwegian;
    fp$D.l10ns;

    var fp$E = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Punjabi = {
        weekdays: {
            shorthand: ["ਐਤ", "ਸੋਮ", "ਮੰਗਲ", "ਬੁੱਧ", "ਵੀਰ", "ਸ਼ੁੱਕਰ", "ਸ਼ਨਿੱਚਰ"],
            longhand: [
                "ਐਤਵਾਰ",
                "ਸੋਮਵਾਰ",
                "ਮੰਗਲਵਾਰ",
                "ਬੁੱਧਵਾਰ",
                "ਵੀਰਵਾਰ",
                "ਸ਼ੁੱਕਰਵਾਰ",
                "ਸ਼ਨਿੱਚਰਵਾਰ",
            ]
        },
        months: {
            shorthand: [
                "ਜਨ",
                "ਫ਼ਰ",
                "ਮਾਰ",
                "ਅਪ੍ਰੈ",
                "ਮਈ",
                "ਜੂਨ",
                "ਜੁਲਾ",
                "ਅਗ",
                "ਸਤੰ",
                "ਅਕ",
                "ਨਵੰ",
                "ਦਸੰ",
            ],
            longhand: [
                "ਜਨਵਰੀ",
                "ਫ਼ਰਵਰੀ",
                "ਮਾਰਚ",
                "ਅਪ੍ਰੈਲ",
                "ਮਈ",
                "ਜੂਨ",
                "ਜੁਲਾਈ",
                "ਅਗਸਤ",
                "ਸਤੰਬਰ",
                "ਅਕਤੂਬਰ",
                "ਨਵੰਬਰ",
                "ਦਸੰਬਰ",
            ]
        },
        time_24hr: true
    };
    fp$E.l10ns.pa = Punjabi;
    fp$E.l10ns;

    var fp$F = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Polish = {
        weekdays: {
            shorthand: ["Nd", "Pn", "Wt", "Śr", "Cz", "Pt", "So"],
            longhand: [
                "Niedziela",
                "Poniedziałek",
                "Wtorek",
                "Środa",
                "Czwartek",
                "Piątek",
                "Sobota",
            ]
        },
        months: {
            shorthand: [
                "Sty",
                "Lut",
                "Mar",
                "Kwi",
                "Maj",
                "Cze",
                "Lip",
                "Sie",
                "Wrz",
                "Paź",
                "Lis",
                "Gru",
            ],
            longhand: [
                "Styczeń",
                "Luty",
                "Marzec",
                "Kwiecień",
                "Maj",
                "Czerwiec",
                "Lipiec",
                "Sierpień",
                "Wrzesień",
                "Październik",
                "Listopad",
                "Grudzień",
            ]
        },
        rangeSeparator: " do ",
        weekAbbreviation: "tydz.",
        scrollTitle: "Przewiń, aby zwiększyć",
        toggleTitle: "Kliknij, aby przełączyć",
        firstDayOfWeek: 1,
        time_24hr: true,
        ordinal: function () {
            return ".";
        }
    };
    fp$F.l10ns.pl = Polish;
    fp$F.l10ns;

    var fp$G = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Portuguese = {
        weekdays: {
            shorthand: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
            longhand: [
                "Domingo",
                "Segunda-feira",
                "Terça-feira",
                "Quarta-feira",
                "Quinta-feira",
                "Sexta-feira",
                "Sábado",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Fev",
                "Mar",
                "Abr",
                "Mai",
                "Jun",
                "Jul",
                "Ago",
                "Set",
                "Out",
                "Nov",
                "Dez",
            ],
            longhand: [
                "Janeiro",
                "Fevereiro",
                "Março",
                "Abril",
                "Maio",
                "Junho",
                "Julho",
                "Agosto",
                "Setembro",
                "Outubro",
                "Novembro",
                "Dezembro",
            ]
        },
        rangeSeparator: " até ",
        time_24hr: true
    };
    fp$G.l10ns.pt = Portuguese;
    fp$G.l10ns;

    var fp$H = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Romanian = {
        weekdays: {
            shorthand: ["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "Sâm"],
            longhand: [
                "Duminică",
                "Luni",
                "Marți",
                "Miercuri",
                "Joi",
                "Vineri",
                "Sâmbătă",
            ]
        },
        months: {
            shorthand: [
                "Ian",
                "Feb",
                "Mar",
                "Apr",
                "Mai",
                "Iun",
                "Iul",
                "Aug",
                "Sep",
                "Oct",
                "Noi",
                "Dec",
            ],
            longhand: [
                "Ianuarie",
                "Februarie",
                "Martie",
                "Aprilie",
                "Mai",
                "Iunie",
                "Iulie",
                "August",
                "Septembrie",
                "Octombrie",
                "Noiembrie",
                "Decembrie",
            ]
        },
        firstDayOfWeek: 1,
        time_24hr: true,
        ordinal: function () {
            return "";
        }
    };
    fp$H.l10ns.ro = Romanian;
    fp$H.l10ns;

    var fp$I = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Russian = {
        weekdays: {
            shorthand: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
            longhand: [
                "Воскресенье",
                "Понедельник",
                "Вторник",
                "Среда",
                "Четверг",
                "Пятница",
                "Суббота",
            ]
        },
        months: {
            shorthand: [
                "Янв",
                "Фев",
                "Март",
                "Апр",
                "Май",
                "Июнь",
                "Июль",
                "Авг",
                "Сен",
                "Окт",
                "Ноя",
                "Дек",
            ],
            longhand: [
                "Январь",
                "Февраль",
                "Март",
                "Апрель",
                "Май",
                "Июнь",
                "Июль",
                "Август",
                "Сентябрь",
                "Октябрь",
                "Ноябрь",
                "Декабрь",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return "";
        },
        rangeSeparator: " — ",
        weekAbbreviation: "Нед.",
        scrollTitle: "Прокрутите для увеличения",
        toggleTitle: "Нажмите для переключения",
        amPM: ["ДП", "ПП"],
        yearAriaLabel: "Год",
        time_24hr: true
    };
    fp$I.l10ns.ru = Russian;
    fp$I.l10ns;

    var fp$J = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Sinhala = {
        weekdays: {
            shorthand: ["ඉ", "ස", "අ", "බ", "බ්‍ර", "සි", "සෙ"],
            longhand: [
                "ඉරිදා",
                "සඳුදා",
                "අඟහරුවාදා",
                "බදාදා",
                "බ්‍රහස්පතින්දා",
                "සිකුරාදා",
                "සෙනසුරාදා",
            ]
        },
        months: {
            shorthand: [
                "ජන",
                "පෙබ",
                "මාර්",
                "අප්‍රේ",
                "මැයි",
                "ජුනි",
                "ජූලි",
                "අගෝ",
                "සැප්",
                "ඔක්",
                "නොවැ",
                "දෙසැ",
            ],
            longhand: [
                "ජනවාරි",
                "පෙබරවාරි",
                "මාර්තු",
                "අප්‍රේල්",
                "මැයි",
                "ජුනි",
                "ජූලි",
                "අගෝස්තු",
                "සැප්තැම්බර්",
                "ඔක්තෝබර්",
                "නොවැම්බර්",
                "දෙසැම්බර්",
            ]
        },
        time_24hr: true
    };
    fp$J.l10ns.si = Sinhala;
    fp$J.l10ns;

    var fp$K = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Slovak = {
        weekdays: {
            shorthand: ["Ned", "Pon", "Ut", "Str", "Štv", "Pia", "Sob"],
            longhand: [
                "Nedeľa",
                "Pondelok",
                "Utorok",
                "Streda",
                "Štvrtok",
                "Piatok",
                "Sobota",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Máj",
                "Jún",
                "Júl",
                "Aug",
                "Sep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "Január",
                "Február",
                "Marec",
                "Apríl",
                "Máj",
                "Jún",
                "Júl",
                "August",
                "September",
                "Október",
                "November",
                "December",
            ]
        },
        firstDayOfWeek: 1,
        rangeSeparator: " do ",
        time_24hr: true,
        ordinal: function () {
            return ".";
        }
    };
    fp$K.l10ns.sk = Slovak;
    fp$K.l10ns;

    var fp$L = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Slovenian = {
        weekdays: {
            shorthand: ["Ned", "Pon", "Tor", "Sre", "Čet", "Pet", "Sob"],
            longhand: [
                "Nedelja",
                "Ponedeljek",
                "Torek",
                "Sreda",
                "Četrtek",
                "Petek",
                "Sobota",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Maj",
                "Jun",
                "Jul",
                "Avg",
                "Sep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "Januar",
                "Februar",
                "Marec",
                "April",
                "Maj",
                "Junij",
                "Julij",
                "Avgust",
                "September",
                "Oktober",
                "November",
                "December",
            ]
        },
        firstDayOfWeek: 1,
        rangeSeparator: " do ",
        time_24hr: true,
        ordinal: function () {
            return ".";
        }
    };
    fp$L.l10ns.sl = Slovenian;
    fp$L.l10ns;

    var fp$M = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Albanian = {
        weekdays: {
            shorthand: ["Di", "Hë", "Ma", "Më", "En", "Pr", "Sh"],
            longhand: [
                "E Diel",
                "E Hënë",
                "E Martë",
                "E Mërkurë",
                "E Enjte",
                "E Premte",
                "E Shtunë",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Shk",
                "Mar",
                "Pri",
                "Maj",
                "Qer",
                "Kor",
                "Gus",
                "Sht",
                "Tet",
                "Nën",
                "Dhj",
            ],
            longhand: [
                "Janar",
                "Shkurt",
                "Mars",
                "Prill",
                "Maj",
                "Qershor",
                "Korrik",
                "Gusht",
                "Shtator",
                "Tetor",
                "Nëntor",
                "Dhjetor",
            ]
        },
        time_24hr: true
    };
    fp$M.l10ns.sq = Albanian;
    fp$M.l10ns;

    var fp$N = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Serbian = {
        weekdays: {
            shorthand: ["Ned", "Pon", "Uto", "Sre", "Čet", "Pet", "Sub"],
            longhand: [
                "Nedelja",
                "Ponedeljak",
                "Utorak",
                "Sreda",
                "Četvrtak",
                "Petak",
                "Subota",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Maj",
                "Jun",
                "Jul",
                "Avg",
                "Sep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "Januar",
                "Februar",
                "Mart",
                "April",
                "Maj",
                "Jun",
                "Jul",
                "Avgust",
                "Septembar",
                "Oktobar",
                "Novembar",
                "Decembar",
            ]
        },
        firstDayOfWeek: 1,
        weekAbbreviation: "Ned.",
        rangeSeparator: " do ",
        time_24hr: true
    };
    fp$N.l10ns.sr = Serbian;
    fp$N.l10ns;

    var fp$O = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Swedish = {
        firstDayOfWeek: 1,
        weekAbbreviation: "v",
        weekdays: {
            shorthand: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"],
            longhand: [
                "Söndag",
                "Måndag",
                "Tisdag",
                "Onsdag",
                "Torsdag",
                "Fredag",
                "Lördag",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "Maj",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Okt",
                "Nov",
                "Dec",
            ],
            longhand: [
                "Januari",
                "Februari",
                "Mars",
                "April",
                "Maj",
                "Juni",
                "Juli",
                "Augusti",
                "September",
                "Oktober",
                "November",
                "December",
            ]
        },
        time_24hr: true,
        ordinal: function () {
            return ".";
        }
    };
    fp$O.l10ns.sv = Swedish;
    fp$O.l10ns;

    var fp$P = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Thai = {
        weekdays: {
            shorthand: ["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส"],
            longhand: [
                "อาทิตย์",
                "จันทร์",
                "อังคาร",
                "พุธ",
                "พฤหัสบดี",
                "ศุกร์",
                "เสาร์",
            ]
        },
        months: {
            shorthand: [
                "ม.ค.",
                "ก.พ.",
                "มี.ค.",
                "เม.ย.",
                "พ.ค.",
                "มิ.ย.",
                "ก.ค.",
                "ส.ค.",
                "ก.ย.",
                "ต.ค.",
                "พ.ย.",
                "ธ.ค.",
            ],
            longhand: [
                "มกราคม",
                "กุมภาพันธ์",
                "มีนาคม",
                "เมษายน",
                "พฤษภาคม",
                "มิถุนายน",
                "กรกฎาคม",
                "สิงหาคม",
                "กันยายน",
                "ตุลาคม",
                "พฤศจิกายน",
                "ธันวาคม",
            ]
        },
        firstDayOfWeek: 1,
        rangeSeparator: " ถึง ",
        scrollTitle: "เลื่อนเพื่อเพิ่มหรือลด",
        toggleTitle: "คลิกเพื่อเปลี่ยน",
        time_24hr: true,
        ordinal: function () {
            return "";
        }
    };
    fp$P.l10ns.th = Thai;
    fp$P.l10ns;

    var fp$Q = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Turkish = {
        weekdays: {
            shorthand: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt"],
            longhand: [
                "Pazar",
                "Pazartesi",
                "Salı",
                "Çarşamba",
                "Perşembe",
                "Cuma",
                "Cumartesi",
            ]
        },
        months: {
            shorthand: [
                "Oca",
                "Şub",
                "Mar",
                "Nis",
                "May",
                "Haz",
                "Tem",
                "Ağu",
                "Eyl",
                "Eki",
                "Kas",
                "Ara",
            ],
            longhand: [
                "Ocak",
                "Şubat",
                "Mart",
                "Nisan",
                "Mayıs",
                "Haziran",
                "Temmuz",
                "Ağustos",
                "Eylül",
                "Ekim",
                "Kasım",
                "Aralık",
            ]
        },
        firstDayOfWeek: 1,
        ordinal: function () {
            return ".";
        },
        rangeSeparator: " - ",
        weekAbbreviation: "Hf",
        scrollTitle: "Artırmak için kaydırın",
        toggleTitle: "Aç/Kapa",
        amPM: ["ÖÖ", "ÖS"],
        time_24hr: true
    };
    fp$Q.l10ns.tr = Turkish;
    fp$Q.l10ns;

    var fp$R = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Ukrainian = {
        firstDayOfWeek: 1,
        weekdays: {
            shorthand: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
            longhand: [
                "Неділя",
                "Понеділок",
                "Вівторок",
                "Середа",
                "Четвер",
                "П'ятниця",
                "Субота",
            ]
        },
        months: {
            shorthand: [
                "Січ",
                "Лют",
                "Бер",
                "Кві",
                "Тра",
                "Чер",
                "Лип",
                "Сер",
                "Вер",
                "Жов",
                "Лис",
                "Гру",
            ],
            longhand: [
                "Січень",
                "Лютий",
                "Березень",
                "Квітень",
                "Травень",
                "Червень",
                "Липень",
                "Серпень",
                "Вересень",
                "Жовтень",
                "Листопад",
                "Грудень",
            ]
        },
        time_24hr: true
    };
    fp$R.l10ns.uk = Ukrainian;
    fp$R.l10ns;

    var fp$S = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Vietnamese = {
        weekdays: {
            shorthand: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
            longhand: [
                "Chủ nhật",
                "Thứ hai",
                "Thứ ba",
                "Thứ tư",
                "Thứ năm",
                "Thứ sáu",
                "Thứ bảy",
            ]
        },
        months: {
            shorthand: [
                "Th1",
                "Th2",
                "Th3",
                "Th4",
                "Th5",
                "Th6",
                "Th7",
                "Th8",
                "Th9",
                "Th10",
                "Th11",
                "Th12",
            ],
            longhand: [
                "Tháng một",
                "Tháng hai",
                "Tháng ba",
                "Tháng tư",
                "Tháng năm",
                "Tháng sáu",
                "Tháng bảy",
                "Tháng tám",
                "Tháng chín",
                "Tháng mười",
                "Tháng 11",
                "Tháng 12",
            ]
        },
        firstDayOfWeek: 1,
        rangeSeparator: " đến "
    };
    fp$S.l10ns.vn = Vietnamese;
    fp$S.l10ns;

    var fp$T = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var Mandarin = {
        weekdays: {
            shorthand: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
            longhand: [
                "星期日",
                "星期一",
                "星期二",
                "星期三",
                "星期四",
                "星期五",
                "星期六",
            ]
        },
        months: {
            shorthand: [
                "一月",
                "二月",
                "三月",
                "四月",
                "五月",
                "六月",
                "七月",
                "八月",
                "九月",
                "十月",
                "十一月",
                "十二月",
            ],
            longhand: [
                "一月",
                "二月",
                "三月",
                "四月",
                "五月",
                "六月",
                "七月",
                "八月",
                "九月",
                "十月",
                "十一月",
                "十二月",
            ]
        },
        rangeSeparator: " 至 ",
        weekAbbreviation: "周",
        scrollTitle: "滚动切换",
        toggleTitle: "点击切换 12/24 小时时制"
    };
    fp$T.l10ns.zh = Mandarin;
    fp$T.l10ns;

    var fp$U = typeof window !== "undefined" && window.flatpickr !== undefined
        ? window.flatpickr
        : {
            l10ns: {}
        };
    var MandarinTraditional = {
        weekdays: {
            shorthand: ["週日", "週一", "週二", "週三", "週四", "週五", "週六"],
            longhand: [
                "星期日",
                "星期一",
                "星期二",
                "星期三",
                "星期四",
                "星期五",
                "星期六",
            ]
        },
        months: {
            shorthand: [
                "一月",
                "二月",
                "三月",
                "四月",
                "五月",
                "六月",
                "七月",
                "八月",
                "九月",
                "十月",
                "十一月",
                "十二月",
            ],
            longhand: [
                "一月",
                "二月",
                "三月",
                "四月",
                "五月",
                "六月",
                "七月",
                "八月",
                "九月",
                "十月",
                "十一月",
                "十二月",
            ]
        },
        rangeSeparator: " 至 ",
        weekAbbreviation: "週",
        scrollTitle: "滾動切換",
        toggleTitle: "點擊切換 12/24 小時時制"
    };
    fp$U.l10ns.zh_tw = MandarinTraditional;
    fp$U.l10ns;

    var l10n = {
        ar: Arabic,
        at: Austria,
        az: Azerbaijan,
        be: Belarusian,
        bg: Bulgarian,
        bn: Bangla,
        bs: Bosnian,
        cat: Catalan,
        cs: Czech,
        cy: Welsh,
        da: Danish,
        de: German,
        "default": __assign({}, english),
        en: english,
        eo: Esperanto,
        es: Spanish,
        et: Estonian,
        fa: Persian,
        fi: Finnish,
        fo: Faroese,
        fr: French,
        gr: Greek,
        he: Hebrew,
        hi: Hindi,
        hr: Croatian,
        hu: Hungarian,
        id: Indonesian,
        is: Icelandic,
        it: Italian,
        ja: Japanese,
        ka: Georgian,
        ko: Korean,
        km: Khmer,
        kz: Kazakh,
        lt: Lithuanian,
        lv: Latvian,
        mk: Macedonian,
        mn: Mongolian,
        ms: Malaysian,
        my: Burmese,
        nl: Dutch,
        no: Norwegian,
        pa: Punjabi,
        pl: Polish,
        pt: Portuguese,
        ro: Romanian,
        ru: Russian,
        si: Sinhala,
        sk: Slovak,
        sl: Slovenian,
        sq: Albanian,
        sr: Serbian,
        sv: Swedish,
        th: Thai,
        tr: Turkish,
        uk: Ukrainian,
        vn: Vietnamese,
        zh: Mandarin,
        zh_tw: MandarinTraditional
    };

    exports.default = l10n;

    Object.defineProperty(exports, '__esModule', { value: true });

}));


/***/ }),

/***/ "cea0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-button.vue?vue&type=template&id=d03ec2da&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',_vm._g({staticClass:"cv-button",class:_vm.buttonClasses,attrs:{"role":"button"}},_vm.inputListeners),[_vm._t("default"),(typeof _vm.icon === 'object')?_c(_vm.icon,{tag:"component",staticClass:"bx--temp-fix",class:(_vm.carbonPrefix + "--btn__icon")}):_vm._e(),(typeof _vm.icon === 'string' || _vm.iconHref)?_c('svg',{class:(_vm.carbonPrefix + "--btn__icon")},[_c('use',{attrs:{"href":_vm.icon || _vm.iconHref}})]):_vm._e()],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-button/cv-button.vue?vue&type=template&id=d03ec2da&

// EXTERNAL MODULE: ./src/components/cv-button/button-mixin.js
var button_mixin = __webpack_require__("eb1f");

// EXTERNAL MODULE: ./src/mixins/carbon-prefix-mixin.js
var carbon_prefix_mixin = __webpack_require__("099b");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_buttonvue_type_script_lang_js_ = ({
  name: 'CvButton',
  mixins: [button_mixin["a" /* default */], carbon_prefix_mixin["a" /* default */]],
  computed: {
    buttonClasses() {
      return this.buttonClassOpts();
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-button/cv-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_button_cv_buttonvue_type_script_lang_js_ = (cv_buttonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-button/cv-button.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_button_cv_buttonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_button = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "cf06":
/***/ (function(module, exports, __webpack_require__) {

/* flatpickr v4.6.3, @license MIT */
(function (global, factory) {
     true ? module.exports = factory() :
    undefined;
}(this, function () { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    var HOOKS = [
        "onChange",
        "onClose",
        "onDayCreate",
        "onDestroy",
        "onKeyDown",
        "onMonthChange",
        "onOpen",
        "onParseConfig",
        "onReady",
        "onValueUpdate",
        "onYearChange",
        "onPreCalendarPosition",
    ];
    var defaults = {
        _disable: [],
        _enable: [],
        allowInput: false,
        altFormat: "F j, Y",
        altInput: false,
        altInputClass: "form-control input",
        animate: typeof window === "object" &&
            window.navigator.userAgent.indexOf("MSIE") === -1,
        ariaDateFormat: "F j, Y",
        clickOpens: true,
        closeOnSelect: true,
        conjunction: ", ",
        dateFormat: "Y-m-d",
        defaultHour: 12,
        defaultMinute: 0,
        defaultSeconds: 0,
        disable: [],
        disableMobile: false,
        enable: [],
        enableSeconds: false,
        enableTime: false,
        errorHandler: function (err) {
            return typeof console !== "undefined" && console.warn(err);
        },
        getWeek: function (givenDate) {
            var date = new Date(givenDate.getTime());
            date.setHours(0, 0, 0, 0);
            // Thursday in current week decides the year.
            date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));
            // January 4 is always in week 1.
            var week1 = new Date(date.getFullYear(), 0, 4);
            // Adjust to Thursday in week 1 and count number of weeks from date to week1.
            return (1 +
                Math.round(((date.getTime() - week1.getTime()) / 86400000 -
                    3 +
                    ((week1.getDay() + 6) % 7)) /
                    7));
        },
        hourIncrement: 1,
        ignoredFocusElements: [],
        inline: false,
        locale: "default",
        minuteIncrement: 5,
        mode: "single",
        monthSelectorType: "dropdown",
        nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
        noCalendar: false,
        now: new Date(),
        onChange: [],
        onClose: [],
        onDayCreate: [],
        onDestroy: [],
        onKeyDown: [],
        onMonthChange: [],
        onOpen: [],
        onParseConfig: [],
        onReady: [],
        onValueUpdate: [],
        onYearChange: [],
        onPreCalendarPosition: [],
        plugins: [],
        position: "auto",
        positionElement: undefined,
        prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
        shorthandCurrentMonth: false,
        showMonths: 1,
        static: false,
        time_24hr: false,
        weekNumbers: false,
        wrap: false
    };

    var english = {
        weekdays: {
            shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            longhand: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
            ]
        },
        months: {
            shorthand: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
            ],
            longhand: [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
            ]
        },
        daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
        firstDayOfWeek: 0,
        ordinal: function (nth) {
            var s = nth % 100;
            if (s > 3 && s < 21)
                return "th";
            switch (s % 10) {
                case 1:
                    return "st";
                case 2:
                    return "nd";
                case 3:
                    return "rd";
                default:
                    return "th";
            }
        },
        rangeSeparator: " to ",
        weekAbbreviation: "Wk",
        scrollTitle: "Scroll to increment",
        toggleTitle: "Click to toggle",
        amPM: ["AM", "PM"],
        yearAriaLabel: "Year",
        hourAriaLabel: "Hour",
        minuteAriaLabel: "Minute",
        time_24hr: false
    };

    var pad = function (number) { return ("0" + number).slice(-2); };
    var int = function (bool) { return (bool === true ? 1 : 0); };
    /* istanbul ignore next */
    function debounce(func, wait, immediate) {
        if (immediate === void 0) { immediate = false; }
        var timeout;
        return function () {
            var context = this, args = arguments;
            timeout !== null && clearTimeout(timeout);
            timeout = window.setTimeout(function () {
                timeout = null;
                if (!immediate)
                    func.apply(context, args);
            }, wait);
            if (immediate && !timeout)
                func.apply(context, args);
        };
    }
    var arrayify = function (obj) {
        return obj instanceof Array ? obj : [obj];
    };

    function toggleClass(elem, className, bool) {
        if (bool === true)
            return elem.classList.add(className);
        elem.classList.remove(className);
    }
    function createElement(tag, className, content) {
        var e = window.document.createElement(tag);
        className = className || "";
        content = content || "";
        e.className = className;
        if (content !== undefined)
            e.textContent = content;
        return e;
    }
    function clearNode(node) {
        while (node.firstChild)
            node.removeChild(node.firstChild);
    }
    function findParent(node, condition) {
        if (condition(node))
            return node;
        else if (node.parentNode)
            return findParent(node.parentNode, condition);
        return undefined; // nothing found
    }
    function createNumberInput(inputClassName, opts) {
        var wrapper = createElement("div", "numInputWrapper"), numInput = createElement("input", "numInput " + inputClassName), arrowUp = createElement("span", "arrowUp"), arrowDown = createElement("span", "arrowDown");
        if (navigator.userAgent.indexOf("MSIE 9.0") === -1) {
            numInput.type = "number";
        }
        else {
            numInput.type = "text";
            numInput.pattern = "\\d*";
        }
        if (opts !== undefined)
            for (var key in opts)
                numInput.setAttribute(key, opts[key]);
        wrapper.appendChild(numInput);
        wrapper.appendChild(arrowUp);
        wrapper.appendChild(arrowDown);
        return wrapper;
    }
    function getEventTarget(event) {
        if (typeof event.composedPath === "function") {
            var path = event.composedPath();
            return path[0];
        }
        return event.target;
    }

    var doNothing = function () { return undefined; };
    var monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? "shorthand" : "longhand"][monthNumber]; };
    var revFormat = {
        D: doNothing,
        F: function (dateObj, monthName, locale) {
            dateObj.setMonth(locale.months.longhand.indexOf(monthName));
        },
        G: function (dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
        },
        H: function (dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
        },
        J: function (dateObj, day) {
            dateObj.setDate(parseFloat(day));
        },
        K: function (dateObj, amPM, locale) {
            dateObj.setHours((dateObj.getHours() % 12) +
                12 * int(new RegExp(locale.amPM[1], "i").test(amPM)));
        },
        M: function (dateObj, shortMonth, locale) {
            dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));
        },
        S: function (dateObj, seconds) {
            dateObj.setSeconds(parseFloat(seconds));
        },
        U: function (_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },
        W: function (dateObj, weekNum, locale) {
            var weekNumber = parseInt(weekNum);
            var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);
            date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);
            return date;
        },
        Y: function (dateObj, year) {
            dateObj.setFullYear(parseFloat(year));
        },
        Z: function (_, ISODate) { return new Date(ISODate); },
        d: function (dateObj, day) {
            dateObj.setDate(parseFloat(day));
        },
        h: function (dateObj, hour) {
            dateObj.setHours(parseFloat(hour));
        },
        i: function (dateObj, minutes) {
            dateObj.setMinutes(parseFloat(minutes));
        },
        j: function (dateObj, day) {
            dateObj.setDate(parseFloat(day));
        },
        l: doNothing,
        m: function (dateObj, month) {
            dateObj.setMonth(parseFloat(month) - 1);
        },
        n: function (dateObj, month) {
            dateObj.setMonth(parseFloat(month) - 1);
        },
        s: function (dateObj, seconds) {
            dateObj.setSeconds(parseFloat(seconds));
        },
        u: function (_, unixMillSeconds) {
            return new Date(parseFloat(unixMillSeconds));
        },
        w: doNothing,
        y: function (dateObj, year) {
            dateObj.setFullYear(2000 + parseFloat(year));
        }
    };
    var tokenRegex = {
        D: "(\\w+)",
        F: "(\\w+)",
        G: "(\\d\\d|\\d)",
        H: "(\\d\\d|\\d)",
        J: "(\\d\\d|\\d)\\w+",
        K: "",
        M: "(\\w+)",
        S: "(\\d\\d|\\d)",
        U: "(.+)",
        W: "(\\d\\d|\\d)",
        Y: "(\\d{4})",
        Z: "(.+)",
        d: "(\\d\\d|\\d)",
        h: "(\\d\\d|\\d)",
        i: "(\\d\\d|\\d)",
        j: "(\\d\\d|\\d)",
        l: "(\\w+)",
        m: "(\\d\\d|\\d)",
        n: "(\\d\\d|\\d)",
        s: "(\\d\\d|\\d)",
        u: "(.+)",
        w: "(\\d\\d|\\d)",
        y: "(\\d{2})"
    };
    var formats = {
        // get the date in UTC
        Z: function (date) { return date.toISOString(); },
        // weekday name, short, e.g. Thu
        D: function (date, locale, options) {
            return locale.weekdays.shorthand[formats.w(date, locale, options)];
        },
        // full month name e.g. January
        F: function (date, locale, options) {
            return monthToStr(formats.n(date, locale, options) - 1, false, locale);
        },
        // padded hour 1-12
        G: function (date, locale, options) {
            return pad(formats.h(date, locale, options));
        },
        // hours with leading zero e.g. 03
        H: function (date) { return pad(date.getHours()); },
        // day (1-30) with ordinal suffix e.g. 1st, 2nd
        J: function (date, locale) {
            return locale.ordinal !== undefined
                ? date.getDate() + locale.ordinal(date.getDate())
                : date.getDate();
        },
        // AM/PM
        K: function (date, locale) { return locale.amPM[int(date.getHours() > 11)]; },
        // shorthand month e.g. Jan, Sep, Oct, etc
        M: function (date, locale) {
            return monthToStr(date.getMonth(), true, locale);
        },
        // seconds 00-59
        S: function (date) { return pad(date.getSeconds()); },
        // unix timestamp
        U: function (date) { return date.getTime() / 1000; },
        W: function (date, _, options) {
            return options.getWeek(date);
        },
        // full year e.g. 2016
        Y: function (date) { return date.getFullYear(); },
        // day in month, padded (01-30)
        d: function (date) { return pad(date.getDate()); },
        // hour from 1-12 (am/pm)
        h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },
        // minutes, padded with leading zero e.g. 09
        i: function (date) { return pad(date.getMinutes()); },
        // day in month (1-30)
        j: function (date) { return date.getDate(); },
        // weekday name, full, e.g. Thursday
        l: function (date, locale) {
            return locale.weekdays.longhand[date.getDay()];
        },
        // padded month number (01-12)
        m: function (date) { return pad(date.getMonth() + 1); },
        // the month number (1-12)
        n: function (date) { return date.getMonth() + 1; },
        // seconds 0-59
        s: function (date) { return date.getSeconds(); },
        // Unix Milliseconds
        u: function (date) { return date.getTime(); },
        // number of the day of the week
        w: function (date) { return date.getDay(); },
        // last two digits of year e.g. 16 for 2016
        y: function (date) { return String(date.getFullYear()).substring(2); }
    };

    var createDateFormatter = function (_a) {
        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;
        return function (dateObj, frmt, overrideLocale) {
            var locale = overrideLocale || l10n;
            if (config.formatDate !== undefined) {
                return config.formatDate(dateObj, frmt, locale);
            }
            return frmt
                .split("")
                .map(function (c, i, arr) {
                return formats[c] && arr[i - 1] !== "\\"
                    ? formats[c](dateObj, locale, config)
                    : c !== "\\"
                        ? c
                        : "";
            })
                .join("");
        };
    };
    var createDateParser = function (_a) {
        var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;
        return function (date, givenFormat, timeless, customLocale) {
            if (date !== 0 && !date)
                return undefined;
            var locale = customLocale || l10n;
            var parsedDate;
            var dateOrig = date;
            if (date instanceof Date)
                parsedDate = new Date(date.getTime());
            else if (typeof date !== "string" &&
                date.toFixed !== undefined // timestamp
            )
                // create a copy
                parsedDate = new Date(date);
            else if (typeof date === "string") {
                // date string
                var format = givenFormat || (config || defaults).dateFormat;
                var datestr = String(date).trim();
                if (datestr === "today") {
                    parsedDate = new Date();
                    timeless = true;
                }
                else if (/Z$/.test(datestr) ||
                    /GMT$/.test(datestr) // datestrings w/ timezone
                )
                    parsedDate = new Date(date);
                else if (config && config.parseDate)
                    parsedDate = config.parseDate(date, format);
                else {
                    parsedDate =
                        !config || !config.noCalendar
                            ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)
                            : new Date(new Date().setHours(0, 0, 0, 0));
                    var matched = void 0, ops = [];
                    for (var i = 0, matchIndex = 0, regexStr = ""; i < format.length; i++) {
                        var token_1 = format[i];
                        var isBackSlash = token_1 === "\\";
                        var escaped = format[i - 1] === "\\" || isBackSlash;
                        if (tokenRegex[token_1] && !escaped) {
                            regexStr += tokenRegex[token_1];
                            var match = new RegExp(regexStr).exec(date);
                            if (match && (matched = true)) {
                                ops[token_1 !== "Y" ? "push" : "unshift"]({
                                    fn: revFormat[token_1],
                                    val: match[++matchIndex]
                                });
                            }
                        }
                        else if (!isBackSlash)
                            regexStr += "."; // don't really care
                        ops.forEach(function (_a) {
                            var fn = _a.fn, val = _a.val;
                            return (parsedDate = fn(parsedDate, val, locale) || parsedDate);
                        });
                    }
                    parsedDate = matched ? parsedDate : undefined;
                }
            }
            /* istanbul ignore next */
            if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {
                config.errorHandler(new Error("Invalid date provided: " + dateOrig));
                return undefined;
            }
            if (timeless === true)
                parsedDate.setHours(0, 0, 0, 0);
            return parsedDate;
        };
    };
    /**
     * Compute the difference in dates, measured in ms
     */
    function compareDates(date1, date2, timeless) {
        if (timeless === void 0) { timeless = true; }
        if (timeless !== false) {
            return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -
                new Date(date2.getTime()).setHours(0, 0, 0, 0));
        }
        return date1.getTime() - date2.getTime();
    }
    var isBetween = function (ts, ts1, ts2) {
        return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);
    };
    var duration = {
        DAY: 86400000
    };

    if (typeof Object.assign !== "function") {
        Object.assign = function (target) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            if (!target) {
                throw TypeError("Cannot convert undefined or null to object");
            }
            var _loop_1 = function (source) {
                if (source) {
                    Object.keys(source).forEach(function (key) { return (target[key] = source[key]); });
                }
            };
            for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {
                var source = args_1[_a];
                _loop_1(source);
            }
            return target;
        };
    }

    var DEBOUNCED_CHANGE_MS = 300;
    function FlatpickrInstance(element, instanceConfig) {
        var self = {
            config: __assign({}, defaults, flatpickr.defaultConfig),
            l10n: english
        };
        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });
        self._handlers = [];
        self.pluginElements = [];
        self.loadedPlugins = [];
        self._bind = bind;
        self._setHoursFromDate = setHoursFromDate;
        self._positionCalendar = positionCalendar;
        self.changeMonth = changeMonth;
        self.changeYear = changeYear;
        self.clear = clear;
        self.close = close;
        self._createElement = createElement;
        self.destroy = destroy;
        self.isEnabled = isEnabled;
        self.jumpToDate = jumpToDate;
        self.open = open;
        self.redraw = redraw;
        self.set = set;
        self.setDate = setDate;
        self.toggle = toggle;
        function setupHelperFunctions() {
            self.utils = {
                getDaysInMonth: function (month, yr) {
                    if (month === void 0) { month = self.currentMonth; }
                    if (yr === void 0) { yr = self.currentYear; }
                    if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))
                        return 29;
                    return self.l10n.daysInMonth[month];
                }
            };
        }
        function init() {
            self.element = self.input = element;
            self.isOpen = false;
            parseConfig();
            setupLocale();
            setupInputs();
            setupDates();
            setupHelperFunctions();
            if (!self.isMobile)
                build();
            bindEvents();
            if (self.selectedDates.length || self.config.noCalendar) {
                if (self.config.enableTime) {
                    setHoursFromDate(self.config.noCalendar
                        ? self.latestSelectedDateObj || self.config.minDate
                        : undefined);
                }
                updateValue(false);
            }
            setCalendarWidth();
            self.showTimeInput =
                self.selectedDates.length > 0 || self.config.noCalendar;
            var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
            /* TODO: investigate this further
        
              Currently, there is weird positioning behavior in safari causing pages
              to scroll up. https://github.com/chmln/flatpickr/issues/563
        
              However, most browsers are not Safari and positioning is expensive when used
              in scale. https://github.com/chmln/flatpickr/issues/1096
            */
            if (!self.isMobile && isSafari) {
                positionCalendar();
            }
            triggerEvent("onReady");
        }
        function bindToInstance(fn) {
            return fn.bind(self);
        }
        function setCalendarWidth() {
            var config = self.config;
            if (config.weekNumbers === false && config.showMonths === 1)
                return;
            else if (config.noCalendar !== true) {
                window.requestAnimationFrame(function () {
                    if (self.calendarContainer !== undefined) {
                        self.calendarContainer.style.visibility = "hidden";
                        self.calendarContainer.style.display = "block";
                    }
                    if (self.daysContainer !== undefined) {
                        var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;
                        self.daysContainer.style.width = daysWidth + "px";
                        self.calendarContainer.style.width =
                            daysWidth +
                                (self.weekWrapper !== undefined
                                    ? self.weekWrapper.offsetWidth
                                    : 0) +
                                "px";
                        self.calendarContainer.style.removeProperty("visibility");
                        self.calendarContainer.style.removeProperty("display");
                    }
                });
            }
        }
        /**
         * The handler for all events targeting the time inputs
         */
        function updateTime(e) {
            if (self.selectedDates.length === 0) {
                setDefaultTime();
            }
            if (e !== undefined && e.type !== "blur") {
                timeWrapper(e);
            }
            var prevValue = self._input.value;
            setHoursFromInputs();
            updateValue();
            if (self._input.value !== prevValue) {
                self._debouncedChange();
            }
        }
        function ampm2military(hour, amPM) {
            return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);
        }
        function military2ampm(hour) {
            switch (hour % 24) {
                case 0:
                case 12:
                    return 12;
                default:
                    return hour % 12;
            }
        }
        /**
         * Syncs the selected date object time with user's time input
         */
        function setHoursFromInputs() {
            if (self.hourElement === undefined || self.minuteElement === undefined)
                return;
            var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined
                ? (parseInt(self.secondElement.value, 10) || 0) % 60
                : 0;
            if (self.amPM !== undefined) {
                hours = ampm2military(hours, self.amPM.textContent);
            }
            var limitMinHours = self.config.minTime !== undefined ||
                (self.config.minDate &&
                    self.minDateHasTime &&
                    self.latestSelectedDateObj &&
                    compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===
                        0);
            var limitMaxHours = self.config.maxTime !== undefined ||
                (self.config.maxDate &&
                    self.maxDateHasTime &&
                    self.latestSelectedDateObj &&
                    compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===
                        0);
            if (limitMaxHours) {
                var maxTime = self.config.maxTime !== undefined
                    ? self.config.maxTime
                    : self.config.maxDate;
                hours = Math.min(hours, maxTime.getHours());
                if (hours === maxTime.getHours())
                    minutes = Math.min(minutes, maxTime.getMinutes());
                if (minutes === maxTime.getMinutes())
                    seconds = Math.min(seconds, maxTime.getSeconds());
            }
            if (limitMinHours) {
                var minTime = self.config.minTime !== undefined
                    ? self.config.minTime
                    : self.config.minDate;
                hours = Math.max(hours, minTime.getHours());
                if (hours === minTime.getHours())
                    minutes = Math.max(minutes, minTime.getMinutes());
                if (minutes === minTime.getMinutes())
                    seconds = Math.max(seconds, minTime.getSeconds());
            }
            setHours(hours, minutes, seconds);
        }
        /**
         * Syncs time input values with a date
         */
        function setHoursFromDate(dateObj) {
            var date = dateObj || self.latestSelectedDateObj;
            if (date)
                setHours(date.getHours(), date.getMinutes(), date.getSeconds());
        }
        function setDefaultHours() {
            var hours = self.config.defaultHour;
            var minutes = self.config.defaultMinute;
            var seconds = self.config.defaultSeconds;
            if (self.config.minDate !== undefined) {
                var minHr = self.config.minDate.getHours();
                var minMinutes = self.config.minDate.getMinutes();
                hours = Math.max(hours, minHr);
                if (hours === minHr)
                    minutes = Math.max(minMinutes, minutes);
                if (hours === minHr && minutes === minMinutes)
                    seconds = self.config.minDate.getSeconds();
            }
            if (self.config.maxDate !== undefined) {
                var maxHr = self.config.maxDate.getHours();
                var maxMinutes = self.config.maxDate.getMinutes();
                hours = Math.min(hours, maxHr);
                if (hours === maxHr)
                    minutes = Math.min(maxMinutes, minutes);
                if (hours === maxHr && minutes === maxMinutes)
                    seconds = self.config.maxDate.getSeconds();
            }
            setHours(hours, minutes, seconds);
        }
        /**
         * Sets the hours, minutes, and optionally seconds
         * of the latest selected date object and the
         * corresponding time inputs
         * @param {Number} hours the hour. whether its military
         *                 or am-pm gets inferred from config
         * @param {Number} minutes the minutes
         * @param {Number} seconds the seconds (optional)
         */
        function setHours(hours, minutes, seconds) {
            if (self.latestSelectedDateObj !== undefined) {
                self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);
            }
            if (!self.hourElement || !self.minuteElement || self.isMobile)
                return;
            self.hourElement.value = pad(!self.config.time_24hr
                ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)
                : hours);
            self.minuteElement.value = pad(minutes);
            if (self.amPM !== undefined)
                self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];
            if (self.secondElement !== undefined)
                self.secondElement.value = pad(seconds);
        }
        /**
         * Handles the year input and incrementing events
         * @param {Event} event the keyup or increment event
         */
        function onYearInput(event) {
            var year = parseInt(event.target.value) + (event.delta || 0);
            if (year / 1000 > 1 ||
                (event.key === "Enter" && !/[^\d]/.test(year.toString()))) {
                changeYear(year);
            }
        }
        /**
         * Essentially addEventListener + tracking
         * @param {Element} element the element to addEventListener to
         * @param {String} event the event name
         * @param {Function} handler the event handler
         */
        function bind(element, event, handler, options) {
            if (event instanceof Array)
                return event.forEach(function (ev) { return bind(element, ev, handler, options); });
            if (element instanceof Array)
                return element.forEach(function (el) { return bind(el, event, handler, options); });
            element.addEventListener(event, handler, options);
            self._handlers.push({
                element: element,
                event: event,
                handler: handler,
                options: options
            });
        }
        /**
         * A mousedown handler which mimics click.
         * Minimizes latency, since we don't need to wait for mouseup in most cases.
         * Also, avoids handling right clicks.
         *
         * @param {Function} handler the event handler
         */
        function onClick(handler) {
            return function (evt) {
                evt.which === 1 && handler(evt);
            };
        }
        function triggerChange() {
            triggerEvent("onChange");
        }
        /**
         * Adds all the necessary event listeners
         */
        function bindEvents() {
            if (self.config.wrap) {
                ["open", "close", "toggle", "clear"].forEach(function (evt) {
                    Array.prototype.forEach.call(self.element.querySelectorAll("[data-" + evt + "]"), function (el) {
                        return bind(el, "click", self[evt]);
                    });
                });
            }
            if (self.isMobile) {
                setupMobile();
                return;
            }
            var debouncedResize = debounce(onResize, 50);
            self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);
            if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))
                bind(self.daysContainer, "mouseover", function (e) {
                    if (self.config.mode === "range")
                        onMouseOver(e.target);
                });
            bind(window.document.body, "keydown", onKeyDown);
            if (!self.config.inline && !self.config.static)
                bind(window, "resize", debouncedResize);
            if (window.ontouchstart !== undefined)
                bind(window.document, "touchstart", documentClick);
            else
                bind(window.document, "mousedown", onClick(documentClick));
            bind(window.document, "focus", documentClick, { capture: true });
            if (self.config.clickOpens === true) {
                bind(self._input, "focus", self.open);
                bind(self._input, "mousedown", onClick(self.open));
            }
            if (self.daysContainer !== undefined) {
                bind(self.monthNav, "mousedown", onClick(onMonthNavClick));
                bind(self.monthNav, ["keyup", "increment"], onYearInput);
                bind(self.daysContainer, "mousedown", onClick(selectDate));
            }
            if (self.timeContainer !== undefined &&
                self.minuteElement !== undefined &&
                self.hourElement !== undefined) {
                var selText = function (e) {
                    return e.target.select();
                };
                bind(self.timeContainer, ["increment"], updateTime);
                bind(self.timeContainer, "blur", updateTime, { capture: true });
                bind(self.timeContainer, "mousedown", onClick(timeIncrement));
                bind([self.hourElement, self.minuteElement], ["focus", "click"], selText);
                if (self.secondElement !== undefined)
                    bind(self.secondElement, "focus", function () { return self.secondElement && self.secondElement.select(); });
                if (self.amPM !== undefined) {
                    bind(self.amPM, "mousedown", onClick(function (e) {
                        updateTime(e);
                        triggerChange();
                    }));
                }
            }
        }
        /**
         * Set the calendar view to a particular date.
         * @param {Date} jumpDate the date to set the view to
         * @param {boolean} triggerChange if change events should be triggered
         */
        function jumpToDate(jumpDate, triggerChange) {
            var jumpTo = jumpDate !== undefined
                ? self.parseDate(jumpDate)
                : self.latestSelectedDateObj ||
                    (self.config.minDate && self.config.minDate > self.now
                        ? self.config.minDate
                        : self.config.maxDate && self.config.maxDate < self.now
                            ? self.config.maxDate
                            : self.now);
            var oldYear = self.currentYear;
            var oldMonth = self.currentMonth;
            try {
                if (jumpTo !== undefined) {
                    self.currentYear = jumpTo.getFullYear();
                    self.currentMonth = jumpTo.getMonth();
                }
            }
            catch (e) {
                /* istanbul ignore next */
                e.message = "Invalid date supplied: " + jumpTo;
                self.config.errorHandler(e);
            }
            if (triggerChange && self.currentYear !== oldYear) {
                triggerEvent("onYearChange");
                buildMonthSwitch();
            }
            if (triggerChange &&
                (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {
                triggerEvent("onMonthChange");
            }
            self.redraw();
        }
        /**
         * The up/down arrow handler for time inputs
         * @param {Event} e the click event
         */
        function timeIncrement(e) {
            if (~e.target.className.indexOf("arrow"))
                incrementNumInput(e, e.target.classList.contains("arrowUp") ? 1 : -1);
        }
        /**
         * Increments/decrements the value of input associ-
         * ated with the up/down arrow by dispatching an
         * "increment" event on the input.
         *
         * @param {Event} e the click event
         * @param {Number} delta the diff (usually 1 or -1)
         * @param {Element} inputElem the input element
         */
        function incrementNumInput(e, delta, inputElem) {
            var target = e && e.target;
            var input = inputElem ||
                (target && target.parentNode && target.parentNode.firstChild);
            var event = createEvent("increment");
            event.delta = delta;
            input && input.dispatchEvent(event);
        }
        function build() {
            var fragment = window.document.createDocumentFragment();
            self.calendarContainer = createElement("div", "flatpickr-calendar");
            self.calendarContainer.tabIndex = -1;
            if (!self.config.noCalendar) {
                fragment.appendChild(buildMonthNav());
                self.innerContainer = createElement("div", "flatpickr-innerContainer");
                if (self.config.weekNumbers) {
                    var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;
                    self.innerContainer.appendChild(weekWrapper);
                    self.weekNumbers = weekNumbers;
                    self.weekWrapper = weekWrapper;
                }
                self.rContainer = createElement("div", "flatpickr-rContainer");
                self.rContainer.appendChild(buildWeekdays());
                if (!self.daysContainer) {
                    self.daysContainer = createElement("div", "flatpickr-days");
                    self.daysContainer.tabIndex = -1;
                }
                buildDays();
                self.rContainer.appendChild(self.daysContainer);
                self.innerContainer.appendChild(self.rContainer);
                fragment.appendChild(self.innerContainer);
            }
            if (self.config.enableTime) {
                fragment.appendChild(buildTime());
            }
            toggleClass(self.calendarContainer, "rangeMode", self.config.mode === "range");
            toggleClass(self.calendarContainer, "animate", self.config.animate === true);
            toggleClass(self.calendarContainer, "multiMonth", self.config.showMonths > 1);
            self.calendarContainer.appendChild(fragment);
            var customAppend = self.config.appendTo !== undefined &&
                self.config.appendTo.nodeType !== undefined;
            if (self.config.inline || self.config.static) {
                self.calendarContainer.classList.add(self.config.inline ? "inline" : "static");
                if (self.config.inline) {
                    if (!customAppend && self.element.parentNode)
                        self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);
                    else if (self.config.appendTo !== undefined)
                        self.config.appendTo.appendChild(self.calendarContainer);
                }
                if (self.config.static) {
                    var wrapper = createElement("div", "flatpickr-wrapper");
                    if (self.element.parentNode)
                        self.element.parentNode.insertBefore(wrapper, self.element);
                    wrapper.appendChild(self.element);
                    if (self.altInput)
                        wrapper.appendChild(self.altInput);
                    wrapper.appendChild(self.calendarContainer);
                }
            }
            if (!self.config.static && !self.config.inline)
                (self.config.appendTo !== undefined
                    ? self.config.appendTo
                    : window.document.body).appendChild(self.calendarContainer);
        }
        function createDay(className, date, dayNumber, i) {
            var dateIsEnabled = isEnabled(date, true), dayElement = createElement("span", "flatpickr-day " + className, date.getDate().toString());
            dayElement.dateObj = date;
            dayElement.$i = i;
            dayElement.setAttribute("aria-label", self.formatDate(date, self.config.ariaDateFormat));
            if (className.indexOf("hidden") === -1 &&
                compareDates(date, self.now) === 0) {
                self.todayDateElem = dayElement;
                dayElement.classList.add("today");
                dayElement.setAttribute("aria-current", "date");
            }
            if (dateIsEnabled) {
                dayElement.tabIndex = -1;
                if (isDateSelected(date)) {
                    dayElement.classList.add("selected");
                    self.selectedDateElem = dayElement;
                    if (self.config.mode === "range") {
                        toggleClass(dayElement, "startRange", self.selectedDates[0] &&
                            compareDates(date, self.selectedDates[0], true) === 0);
                        toggleClass(dayElement, "endRange", self.selectedDates[1] &&
                            compareDates(date, self.selectedDates[1], true) === 0);
                        if (className === "nextMonthDay")
                            dayElement.classList.add("inRange");
                    }
                }
            }
            else {
                dayElement.classList.add("flatpickr-disabled");
            }
            if (self.config.mode === "range") {
                if (isDateInRange(date) && !isDateSelected(date))
                    dayElement.classList.add("inRange");
            }
            if (self.weekNumbers &&
                self.config.showMonths === 1 &&
                className !== "prevMonthDay" &&
                dayNumber % 7 === 1) {
                self.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + self.config.getWeek(date) + "</span>");
            }
            triggerEvent("onDayCreate", dayElement);
            return dayElement;
        }
        function focusOnDayElem(targetNode) {
            targetNode.focus();
            if (self.config.mode === "range")
                onMouseOver(targetNode);
        }
        function getFirstAvailableDay(delta) {
            var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;
            var endMonth = delta > 0 ? self.config.showMonths : -1;
            for (var m = startMonth; m != endMonth; m += delta) {
                var month = self.daysContainer.children[m];
                var startIndex = delta > 0 ? 0 : month.children.length - 1;
                var endIndex = delta > 0 ? month.children.length : -1;
                for (var i = startIndex; i != endIndex; i += delta) {
                    var c = month.children[i];
                    if (c.className.indexOf("hidden") === -1 && isEnabled(c.dateObj))
                        return c;
                }
            }
            return undefined;
        }
        function getNextAvailableDay(current, delta) {
            var givenMonth = current.className.indexOf("Month") === -1
                ? current.dateObj.getMonth()
                : self.currentMonth;
            var endMonth = delta > 0 ? self.config.showMonths : -1;
            var loopDelta = delta > 0 ? 1 : -1;
            for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {
                var month = self.daysContainer.children[m];
                var startIndex = givenMonth - self.currentMonth === m
                    ? current.$i + delta
                    : delta < 0
                        ? month.children.length - 1
                        : 0;
                var numMonthDays = month.children.length;
                for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {
                    var c = month.children[i];
                    if (c.className.indexOf("hidden") === -1 &&
                        isEnabled(c.dateObj) &&
                        Math.abs(current.$i - i) >= Math.abs(delta))
                        return focusOnDayElem(c);
                }
            }
            self.changeMonth(loopDelta);
            focusOnDay(getFirstAvailableDay(loopDelta), 0);
            return undefined;
        }
        function focusOnDay(current, offset) {
            var dayFocused = isInView(document.activeElement || document.body);
            var startElem = current !== undefined
                ? current
                : dayFocused
                    ? document.activeElement
                    : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)
                        ? self.selectedDateElem
                        : self.todayDateElem !== undefined && isInView(self.todayDateElem)
                            ? self.todayDateElem
                            : getFirstAvailableDay(offset > 0 ? 1 : -1);
            if (startElem === undefined)
                return self._input.focus();
            if (!dayFocused)
                return focusOnDayElem(startElem);
            getNextAvailableDay(startElem, offset);
        }
        function buildMonthDays(year, month) {
            var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;
            var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12);
            var daysInMonth = self.utils.getDaysInMonth(month), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? "prevMonthDay hidden" : "prevMonthDay", nextMonthDayClass = isMultiMonth ? "nextMonthDay hidden" : "nextMonthDay";
            var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;
            // prepend days from the ending of previous month
            for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {
                days.appendChild(createDay(prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));
            }
            // Start at 1 since there is no 0th day
            for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {
                days.appendChild(createDay("", new Date(year, month, dayNumber), dayNumber, dayIndex));
            }
            // append days from the next month
            for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&
                (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {
                days.appendChild(createDay(nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));
            }
            //updateNavigationCurrentMonth();
            var dayContainer = createElement("div", "dayContainer");
            dayContainer.appendChild(days);
            return dayContainer;
        }
        function buildDays() {
            if (self.daysContainer === undefined) {
                return;
            }
            clearNode(self.daysContainer);
            // TODO: week numbers for each month
            if (self.weekNumbers)
                clearNode(self.weekNumbers);
            var frag = document.createDocumentFragment();
            for (var i = 0; i < self.config.showMonths; i++) {
                var d = new Date(self.currentYear, self.currentMonth, 1);
                d.setMonth(self.currentMonth + i);
                frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));
            }
            self.daysContainer.appendChild(frag);
            self.days = self.daysContainer.firstChild;
            if (self.config.mode === "range" && self.selectedDates.length === 1) {
                onMouseOver();
            }
        }
        function buildMonthSwitch() {
            if (self.config.showMonths > 1 ||
                self.config.monthSelectorType !== "dropdown")
                return;
            var shouldBuildMonth = function (month) {
                if (self.config.minDate !== undefined &&
                    self.currentYear === self.config.minDate.getFullYear() &&
                    month < self.config.minDate.getMonth()) {
                    return false;
                }
                return !(self.config.maxDate !== undefined &&
                    self.currentYear === self.config.maxDate.getFullYear() &&
                    month > self.config.maxDate.getMonth());
            };
            self.monthsDropdownContainer.tabIndex = -1;
            self.monthsDropdownContainer.innerHTML = "";
            for (var i = 0; i < 12; i++) {
                if (!shouldBuildMonth(i))
                    continue;
                var month = createElement("option", "flatpickr-monthDropdown-month");
                month.value = new Date(self.currentYear, i).getMonth().toString();
                month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);
                month.tabIndex = -1;
                if (self.currentMonth === i) {
                    month.selected = true;
                }
                self.monthsDropdownContainer.appendChild(month);
            }
        }
        function buildMonth() {
            var container = createElement("div", "flatpickr-month");
            var monthNavFragment = window.document.createDocumentFragment();
            var monthElement;
            if (self.config.showMonths > 1 ||
                self.config.monthSelectorType === "static") {
                monthElement = createElement("span", "cur-month");
            }
            else {
                self.monthsDropdownContainer = createElement("select", "flatpickr-monthDropdown-months");
                bind(self.monthsDropdownContainer, "change", function (e) {
                    var target = e.target;
                    var selectedMonth = parseInt(target.value, 10);
                    self.changeMonth(selectedMonth - self.currentMonth);
                    triggerEvent("onMonthChange");
                });
                buildMonthSwitch();
                monthElement = self.monthsDropdownContainer;
            }
            var yearInput = createNumberInput("cur-year", { tabindex: "-1" });
            var yearElement = yearInput.getElementsByTagName("input")[0];
            yearElement.setAttribute("aria-label", self.l10n.yearAriaLabel);
            if (self.config.minDate) {
                yearElement.setAttribute("min", self.config.minDate.getFullYear().toString());
            }
            if (self.config.maxDate) {
                yearElement.setAttribute("max", self.config.maxDate.getFullYear().toString());
                yearElement.disabled =
                    !!self.config.minDate &&
                        self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();
            }
            var currentMonth = createElement("div", "flatpickr-current-month");
            currentMonth.appendChild(monthElement);
            currentMonth.appendChild(yearInput);
            monthNavFragment.appendChild(currentMonth);
            container.appendChild(monthNavFragment);
            return {
                container: container,
                yearElement: yearElement,
                monthElement: monthElement
            };
        }
        function buildMonths() {
            clearNode(self.monthNav);
            self.monthNav.appendChild(self.prevMonthNav);
            if (self.config.showMonths) {
                self.yearElements = [];
                self.monthElements = [];
            }
            for (var m = self.config.showMonths; m--;) {
                var month = buildMonth();
                self.yearElements.push(month.yearElement);
                self.monthElements.push(month.monthElement);
                self.monthNav.appendChild(month.container);
            }
            self.monthNav.appendChild(self.nextMonthNav);
        }
        function buildMonthNav() {
            self.monthNav = createElement("div", "flatpickr-months");
            self.yearElements = [];
            self.monthElements = [];
            self.prevMonthNav = createElement("span", "flatpickr-prev-month");
            self.prevMonthNav.innerHTML = self.config.prevArrow;
            self.nextMonthNav = createElement("span", "flatpickr-next-month");
            self.nextMonthNav.innerHTML = self.config.nextArrow;
            buildMonths();
            Object.defineProperty(self, "_hidePrevMonthArrow", {
                get: function () { return self.__hidePrevMonthArrow; },
                set: function (bool) {
                    if (self.__hidePrevMonthArrow !== bool) {
                        toggleClass(self.prevMonthNav, "flatpickr-disabled", bool);
                        self.__hidePrevMonthArrow = bool;
                    }
                }
            });
            Object.defineProperty(self, "_hideNextMonthArrow", {
                get: function () { return self.__hideNextMonthArrow; },
                set: function (bool) {
                    if (self.__hideNextMonthArrow !== bool) {
                        toggleClass(self.nextMonthNav, "flatpickr-disabled", bool);
                        self.__hideNextMonthArrow = bool;
                    }
                }
            });
            self.currentYearElement = self.yearElements[0];
            updateNavigationCurrentMonth();
            return self.monthNav;
        }
        function buildTime() {
            self.calendarContainer.classList.add("hasTime");
            if (self.config.noCalendar)
                self.calendarContainer.classList.add("noCalendar");
            self.timeContainer = createElement("div", "flatpickr-time");
            self.timeContainer.tabIndex = -1;
            var separator = createElement("span", "flatpickr-time-separator", ":");
            var hourInput = createNumberInput("flatpickr-hour", {
                "aria-label": self.l10n.hourAriaLabel
            });
            self.hourElement = hourInput.getElementsByTagName("input")[0];
            var minuteInput = createNumberInput("flatpickr-minute", {
                "aria-label": self.l10n.minuteAriaLabel
            });
            self.minuteElement = minuteInput.getElementsByTagName("input")[0];
            self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;
            self.hourElement.value = pad(self.latestSelectedDateObj
                ? self.latestSelectedDateObj.getHours()
                : self.config.time_24hr
                    ? self.config.defaultHour
                    : military2ampm(self.config.defaultHour));
            self.minuteElement.value = pad(self.latestSelectedDateObj
                ? self.latestSelectedDateObj.getMinutes()
                : self.config.defaultMinute);
            self.hourElement.setAttribute("step", self.config.hourIncrement.toString());
            self.minuteElement.setAttribute("step", self.config.minuteIncrement.toString());
            self.hourElement.setAttribute("min", self.config.time_24hr ? "0" : "1");
            self.hourElement.setAttribute("max", self.config.time_24hr ? "23" : "12");
            self.minuteElement.setAttribute("min", "0");
            self.minuteElement.setAttribute("max", "59");
            self.timeContainer.appendChild(hourInput);
            self.timeContainer.appendChild(separator);
            self.timeContainer.appendChild(minuteInput);
            if (self.config.time_24hr)
                self.timeContainer.classList.add("time24hr");
            if (self.config.enableSeconds) {
                self.timeContainer.classList.add("hasSeconds");
                var secondInput = createNumberInput("flatpickr-second");
                self.secondElement = secondInput.getElementsByTagName("input")[0];
                self.secondElement.value = pad(self.latestSelectedDateObj
                    ? self.latestSelectedDateObj.getSeconds()
                    : self.config.defaultSeconds);
                self.secondElement.setAttribute("step", self.minuteElement.getAttribute("step"));
                self.secondElement.setAttribute("min", "0");
                self.secondElement.setAttribute("max", "59");
                self.timeContainer.appendChild(createElement("span", "flatpickr-time-separator", ":"));
                self.timeContainer.appendChild(secondInput);
            }
            if (!self.config.time_24hr) {
                // add self.amPM if appropriate
                self.amPM = createElement("span", "flatpickr-am-pm", self.l10n.amPM[int((self.latestSelectedDateObj
                    ? self.hourElement.value
                    : self.config.defaultHour) > 11)]);
                self.amPM.title = self.l10n.toggleTitle;
                self.amPM.tabIndex = -1;
                self.timeContainer.appendChild(self.amPM);
            }
            return self.timeContainer;
        }
        function buildWeekdays() {
            if (!self.weekdayContainer)
                self.weekdayContainer = createElement("div", "flatpickr-weekdays");
            else
                clearNode(self.weekdayContainer);
            for (var i = self.config.showMonths; i--;) {
                var container = createElement("div", "flatpickr-weekdaycontainer");
                self.weekdayContainer.appendChild(container);
            }
            updateWeekdays();
            return self.weekdayContainer;
        }
        function updateWeekdays() {
            if (!self.weekdayContainer) {
                return;
            }
            var firstDayOfWeek = self.l10n.firstDayOfWeek;
            var weekdays = self.l10n.weekdays.shorthand.slice();
            if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {
                weekdays = weekdays.splice(firstDayOfWeek, weekdays.length).concat(weekdays.splice(0, firstDayOfWeek));
            }
            for (var i = self.config.showMonths; i--;) {
                self.weekdayContainer.children[i].innerHTML = "\n      <span class='flatpickr-weekday'>\n        " + weekdays.join("</span><span class='flatpickr-weekday'>") + "\n      </span>\n      ";
            }
        }
        /* istanbul ignore next */
        function buildWeeks() {
            self.calendarContainer.classList.add("hasWeeks");
            var weekWrapper = createElement("div", "flatpickr-weekwrapper");
            weekWrapper.appendChild(createElement("span", "flatpickr-weekday", self.l10n.weekAbbreviation));
            var weekNumbers = createElement("div", "flatpickr-weeks");
            weekWrapper.appendChild(weekNumbers);
            return {
                weekWrapper: weekWrapper,
                weekNumbers: weekNumbers
            };
        }
        function changeMonth(value, isOffset) {
            if (isOffset === void 0) { isOffset = true; }
            var delta = isOffset ? value : value - self.currentMonth;
            if ((delta < 0 && self._hidePrevMonthArrow === true) ||
                (delta > 0 && self._hideNextMonthArrow === true))
                return;
            self.currentMonth += delta;
            if (self.currentMonth < 0 || self.currentMonth > 11) {
                self.currentYear += self.currentMonth > 11 ? 1 : -1;
                self.currentMonth = (self.currentMonth + 12) % 12;
                triggerEvent("onYearChange");
                buildMonthSwitch();
            }
            buildDays();
            triggerEvent("onMonthChange");
            updateNavigationCurrentMonth();
        }
        function clear(triggerChangeEvent, toInitial) {
            if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }
            if (toInitial === void 0) { toInitial = true; }
            self.input.value = "";
            if (self.altInput !== undefined)
                self.altInput.value = "";
            if (self.mobileInput !== undefined)
                self.mobileInput.value = "";
            self.selectedDates = [];
            self.latestSelectedDateObj = undefined;
            if (toInitial === true) {
                self.currentYear = self._initialDate.getFullYear();
                self.currentMonth = self._initialDate.getMonth();
            }
            self.showTimeInput = false;
            if (self.config.enableTime === true) {
                setDefaultHours();
            }
            self.redraw();
            if (triggerChangeEvent)
                // triggerChangeEvent is true (default) or an Event
                triggerEvent("onChange");
        }
        function close() {
            self.isOpen = false;
            if (!self.isMobile) {
                if (self.calendarContainer !== undefined) {
                    self.calendarContainer.classList.remove("open");
                }
                if (self._input !== undefined) {
                    self._input.classList.remove("active");
                }
            }
            triggerEvent("onClose");
        }
        function destroy() {
            if (self.config !== undefined)
                triggerEvent("onDestroy");
            for (var i = self._handlers.length; i--;) {
                var h = self._handlers[i];
                h.element.removeEventListener(h.event, h.handler, h.options);
            }
            self._handlers = [];
            if (self.mobileInput) {
                if (self.mobileInput.parentNode)
                    self.mobileInput.parentNode.removeChild(self.mobileInput);
                self.mobileInput = undefined;
            }
            else if (self.calendarContainer && self.calendarContainer.parentNode) {
                if (self.config.static && self.calendarContainer.parentNode) {
                    var wrapper = self.calendarContainer.parentNode;
                    wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);
                    if (wrapper.parentNode) {
                        while (wrapper.firstChild)
                            wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);
                        wrapper.parentNode.removeChild(wrapper);
                    }
                }
                else
                    self.calendarContainer.parentNode.removeChild(self.calendarContainer);
            }
            if (self.altInput) {
                self.input.type = "text";
                if (self.altInput.parentNode)
                    self.altInput.parentNode.removeChild(self.altInput);
                delete self.altInput;
            }
            if (self.input) {
                self.input.type = self.input._type;
                self.input.classList.remove("flatpickr-input");
                self.input.removeAttribute("readonly");
                self.input.value = "";
            }
            [
                "_showTimeInput",
                "latestSelectedDateObj",
                "_hideNextMonthArrow",
                "_hidePrevMonthArrow",
                "__hideNextMonthArrow",
                "__hidePrevMonthArrow",
                "isMobile",
                "isOpen",
                "selectedDateElem",
                "minDateHasTime",
                "maxDateHasTime",
                "days",
                "daysContainer",
                "_input",
                "_positionElement",
                "innerContainer",
                "rContainer",
                "monthNav",
                "todayDateElem",
                "calendarContainer",
                "weekdayContainer",
                "prevMonthNav",
                "nextMonthNav",
                "monthsDropdownContainer",
                "currentMonthElement",
                "currentYearElement",
                "navigationCurrentMonth",
                "selectedDateElem",
                "config",
            ].forEach(function (k) {
                try {
                    delete self[k];
                }
                catch (_) { }
            });
        }
        function isCalendarElem(elem) {
            if (self.config.appendTo && self.config.appendTo.contains(elem))
                return true;
            return self.calendarContainer.contains(elem);
        }
        function documentClick(e) {
            if (self.isOpen && !self.config.inline) {
                var eventTarget_1 = getEventTarget(e);
                var isCalendarElement = isCalendarElem(eventTarget_1);
                var isInput = eventTarget_1 === self.input ||
                    eventTarget_1 === self.altInput ||
                    self.element.contains(eventTarget_1) ||
                    // web components
                    // e.path is not present in all browsers. circumventing typechecks
                    (e.path &&
                        e.path.indexOf &&
                        (~e.path.indexOf(self.input) ||
                            ~e.path.indexOf(self.altInput)));
                var lostFocus = e.type === "blur"
                    ? isInput &&
                        e.relatedTarget &&
                        !isCalendarElem(e.relatedTarget)
                    : !isInput &&
                        !isCalendarElement &&
                        !isCalendarElem(e.relatedTarget);
                var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {
                    return elem.contains(eventTarget_1);
                });
                if (lostFocus && isIgnored) {
                    if (self.timeContainer !== undefined &&
                        self.minuteElement !== undefined &&
                        self.hourElement !== undefined) {
                        updateTime();
                    }
                    self.close();
                    if (self.config.mode === "range" && self.selectedDates.length === 1) {
                        self.clear(false);
                        self.redraw();
                    }
                }
            }
        }
        function changeYear(newYear) {
            if (!newYear ||
                (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||
                (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))
                return;
            var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;
            self.currentYear = newYearNum || self.currentYear;
            if (self.config.maxDate &&
                self.currentYear === self.config.maxDate.getFullYear()) {
                self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);
            }
            else if (self.config.minDate &&
                self.currentYear === self.config.minDate.getFullYear()) {
                self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);
            }
            if (isNewYear) {
                self.redraw();
                triggerEvent("onYearChange");
                buildMonthSwitch();
            }
        }
        function isEnabled(date, timeless) {
            if (timeless === void 0) { timeless = true; }
            var dateToCheck = self.parseDate(date, undefined, timeless); // timeless
            if ((self.config.minDate &&
                dateToCheck &&
                compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||
                (self.config.maxDate &&
                    dateToCheck &&
                    compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))
                return false;
            if (self.config.enable.length === 0 && self.config.disable.length === 0)
                return true;
            if (dateToCheck === undefined)
                return false;
            var bool = self.config.enable.length > 0, array = bool ? self.config.enable : self.config.disable;
            for (var i = 0, d = void 0; i < array.length; i++) {
                d = array[i];
                if (typeof d === "function" &&
                    d(dateToCheck) // disabled by function
                )
                    return bool;
                else if (d instanceof Date &&
                    dateToCheck !== undefined &&
                    d.getTime() === dateToCheck.getTime())
                    // disabled by date
                    return bool;
                else if (typeof d === "string" && dateToCheck !== undefined) {
                    // disabled by date string
                    var parsed = self.parseDate(d, undefined, true);
                    return parsed && parsed.getTime() === dateToCheck.getTime()
                        ? bool
                        : !bool;
                }
                else if (
                // disabled by range
                typeof d === "object" &&
                    dateToCheck !== undefined &&
                    d.from &&
                    d.to &&
                    dateToCheck.getTime() >= d.from.getTime() &&
                    dateToCheck.getTime() <= d.to.getTime())
                    return bool;
            }
            return !bool;
        }
        function isInView(elem) {
            if (self.daysContainer !== undefined)
                return (elem.className.indexOf("hidden") === -1 &&
                    self.daysContainer.contains(elem));
            return false;
        }
        function onKeyDown(e) {
            // e.key                      e.keyCode
            // "Backspace"                        8
            // "Tab"                              9
            // "Enter"                           13
            // "Escape"     (IE "Esc")           27
            // "ArrowLeft"  (IE "Left")          37
            // "ArrowUp"    (IE "Up")            38
            // "ArrowRight" (IE "Right")         39
            // "ArrowDown"  (IE "Down")          40
            // "Delete"     (IE "Del")           46
            var isInput = e.target === self._input;
            var allowInput = self.config.allowInput;
            var allowKeydown = self.isOpen && (!allowInput || !isInput);
            var allowInlineKeydown = self.config.inline && isInput && !allowInput;
            if (e.keyCode === 13 && isInput) {
                if (allowInput) {
                    self.setDate(self._input.value, true, e.target === self.altInput
                        ? self.config.altFormat
                        : self.config.dateFormat);
                    return e.target.blur();
                }
                else {
                    self.open();
                }
            }
            else if (isCalendarElem(e.target) ||
                allowKeydown ||
                allowInlineKeydown) {
                var isTimeObj = !!self.timeContainer &&
                    self.timeContainer.contains(e.target);
                switch (e.keyCode) {
                    case 13:
                        if (isTimeObj) {
                            e.preventDefault();
                            updateTime();
                            focusAndClose();
                        }
                        else
                            selectDate(e);
                        break;
                    case 27: // escape
                        e.preventDefault();
                        focusAndClose();
                        break;
                    case 8:
                    case 46:
                        if (isInput && !self.config.allowInput) {
                            e.preventDefault();
                            self.clear();
                        }
                        break;
                    case 37:
                    case 39:
                        if (!isTimeObj && !isInput) {
                            e.preventDefault();
                            if (self.daysContainer !== undefined &&
                                (allowInput === false ||
                                    (document.activeElement && isInView(document.activeElement)))) {
                                var delta_1 = e.keyCode === 39 ? 1 : -1;
                                if (!e.ctrlKey)
                                    focusOnDay(undefined, delta_1);
                                else {
                                    e.stopPropagation();
                                    changeMonth(delta_1);
                                    focusOnDay(getFirstAvailableDay(1), 0);
                                }
                            }
                        }
                        else if (self.hourElement)
                            self.hourElement.focus();
                        break;
                    case 38:
                    case 40:
                        e.preventDefault();
                        var delta = e.keyCode === 40 ? 1 : -1;
                        if ((self.daysContainer && e.target.$i !== undefined) ||
                            e.target === self.input ||
                            e.target === self.altInput) {
                            if (e.ctrlKey) {
                                e.stopPropagation();
                                changeYear(self.currentYear - delta);
                                focusOnDay(getFirstAvailableDay(1), 0);
                            }
                            else if (!isTimeObj)
                                focusOnDay(undefined, delta * 7);
                        }
                        else if (e.target === self.currentYearElement) {
                            changeYear(self.currentYear - delta);
                        }
                        else if (self.config.enableTime) {
                            if (!isTimeObj && self.hourElement)
                                self.hourElement.focus();
                            updateTime(e);
                            self._debouncedChange();
                        }
                        break;
                    case 9:
                        if (isTimeObj) {
                            var elems = [
                                self.hourElement,
                                self.minuteElement,
                                self.secondElement,
                                self.amPM,
                            ]
                                .concat(self.pluginElements)
                                .filter(function (x) { return x; });
                            var i = elems.indexOf(e.target);
                            if (i !== -1) {
                                var target = elems[i + (e.shiftKey ? -1 : 1)];
                                e.preventDefault();
                                (target || self._input).focus();
                            }
                        }
                        else if (!self.config.noCalendar &&
                            self.daysContainer &&
                            self.daysContainer.contains(e.target) &&
                            e.shiftKey) {
                            e.preventDefault();
                            self._input.focus();
                        }
                        break;
                    default:
                        break;
                }
            }
            if (self.amPM !== undefined && e.target === self.amPM) {
                switch (e.key) {
                    case self.l10n.amPM[0].charAt(0):
                    case self.l10n.amPM[0].charAt(0).toLowerCase():
                        self.amPM.textContent = self.l10n.amPM[0];
                        setHoursFromInputs();
                        updateValue();
                        break;
                    case self.l10n.amPM[1].charAt(0):
                    case self.l10n.amPM[1].charAt(0).toLowerCase():
                        self.amPM.textContent = self.l10n.amPM[1];
                        setHoursFromInputs();
                        updateValue();
                        break;
                }
            }
            if (isInput || isCalendarElem(e.target)) {
                triggerEvent("onKeyDown", e);
            }
        }
        function onMouseOver(elem) {
            if (self.selectedDates.length !== 1 ||
                (elem &&
                    (!elem.classList.contains("flatpickr-day") ||
                        elem.classList.contains("flatpickr-disabled"))))
                return;
            var hoverDate = elem
                ? elem.dateObj.getTime()
                : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());
            var containsDisabled = false;
            var minRange = 0, maxRange = 0;
            for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {
                if (!isEnabled(new Date(t), true)) {
                    containsDisabled =
                        containsDisabled || (t > rangeStartDate && t < rangeEndDate);
                    if (t < initialDate && (!minRange || t > minRange))
                        minRange = t;
                    else if (t > initialDate && (!maxRange || t < maxRange))
                        maxRange = t;
                }
            }
            for (var m = 0; m < self.config.showMonths; m++) {
                var month = self.daysContainer.children[m];
                var _loop_1 = function (i, l) {
                    var dayElem = month.children[i], date = dayElem.dateObj;
                    var timestamp = date.getTime();
                    var outOfRange = (minRange > 0 && timestamp < minRange) ||
                        (maxRange > 0 && timestamp > maxRange);
                    if (outOfRange) {
                        dayElem.classList.add("notAllowed");
                        ["inRange", "startRange", "endRange"].forEach(function (c) {
                            dayElem.classList.remove(c);
                        });
                        return "continue";
                    }
                    else if (containsDisabled && !outOfRange)
                        return "continue";
                    ["startRange", "inRange", "endRange", "notAllowed"].forEach(function (c) {
                        dayElem.classList.remove(c);
                    });
                    if (elem !== undefined) {
                        elem.classList.add(hoverDate <= self.selectedDates[0].getTime()
                            ? "startRange"
                            : "endRange");
                        if (initialDate < hoverDate && timestamp === initialDate)
                            dayElem.classList.add("startRange");
                        else if (initialDate > hoverDate && timestamp === initialDate)
                            dayElem.classList.add("endRange");
                        if (timestamp >= minRange &&
                            (maxRange === 0 || timestamp <= maxRange) &&
                            isBetween(timestamp, initialDate, hoverDate))
                            dayElem.classList.add("inRange");
                    }
                };
                for (var i = 0, l = month.children.length; i < l; i++) {
                    _loop_1(i, l);
                }
            }
        }
        function onResize() {
            if (self.isOpen && !self.config.static && !self.config.inline)
                positionCalendar();
        }
        function setDefaultTime() {
            self.setDate(self.config.minDate !== undefined
                ? new Date(self.config.minDate.getTime())
                : new Date(), true);
            setDefaultHours();
            updateValue();
        }
        function open(e, positionElement) {
            if (positionElement === void 0) { positionElement = self._positionElement; }
            if (self.isMobile === true) {
                if (e) {
                    e.preventDefault();
                    e.target && e.target.blur();
                }
                if (self.mobileInput !== undefined) {
                    self.mobileInput.focus();
                    self.mobileInput.click();
                }
                triggerEvent("onOpen");
                return;
            }
            if (self._input.disabled || self.config.inline)
                return;
            var wasOpen = self.isOpen;
            self.isOpen = true;
            if (!wasOpen) {
                self.calendarContainer.classList.add("open");
                self._input.classList.add("active");
                triggerEvent("onOpen");
                positionCalendar(positionElement);
            }
            if (self.config.enableTime === true && self.config.noCalendar === true) {
                if (self.selectedDates.length === 0) {
                    setDefaultTime();
                }
                if (self.config.allowInput === false &&
                    (e === undefined ||
                        !self.timeContainer.contains(e.relatedTarget))) {
                    setTimeout(function () { return self.hourElement.select(); }, 50);
                }
            }
        }
        function minMaxDateSetter(type) {
            return function (date) {
                var dateObj = (self.config["_" + type + "Date"] = self.parseDate(date, self.config.dateFormat));
                var inverseDateObj = self.config["_" + (type === "min" ? "max" : "min") + "Date"];
                if (dateObj !== undefined) {
                    self[type === "min" ? "minDateHasTime" : "maxDateHasTime"] =
                        dateObj.getHours() > 0 ||
                            dateObj.getMinutes() > 0 ||
                            dateObj.getSeconds() > 0;
                }
                if (self.selectedDates) {
                    self.selectedDates = self.selectedDates.filter(function (d) { return isEnabled(d); });
                    if (!self.selectedDates.length && type === "min")
                        setHoursFromDate(dateObj);
                    updateValue();
                }
                if (self.daysContainer) {
                    redraw();
                    if (dateObj !== undefined)
                        self.currentYearElement[type] = dateObj.getFullYear().toString();
                    else
                        self.currentYearElement.removeAttribute(type);
                    self.currentYearElement.disabled =
                        !!inverseDateObj &&
                            dateObj !== undefined &&
                            inverseDateObj.getFullYear() === dateObj.getFullYear();
                }
            };
        }
        function parseConfig() {
            var boolOpts = [
                "wrap",
                "weekNumbers",
                "allowInput",
                "clickOpens",
                "time_24hr",
                "enableTime",
                "noCalendar",
                "altInput",
                "shorthandCurrentMonth",
                "inline",
                "static",
                "enableSeconds",
                "disableMobile",
            ];
            var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));
            var formats = {};
            self.config.parseDate = userConfig.parseDate;
            self.config.formatDate = userConfig.formatDate;
            Object.defineProperty(self.config, "enable", {
                get: function () { return self.config._enable; },
                set: function (dates) {
                    self.config._enable = parseDateRules(dates);
                }
            });
            Object.defineProperty(self.config, "disable", {
                get: function () { return self.config._disable; },
                set: function (dates) {
                    self.config._disable = parseDateRules(dates);
                }
            });
            var timeMode = userConfig.mode === "time";
            if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {
                var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaults.dateFormat;
                formats.dateFormat =
                    userConfig.noCalendar || timeMode
                        ? "H:i" + (userConfig.enableSeconds ? ":S" : "")
                        : defaultDateFormat + " H:i" + (userConfig.enableSeconds ? ":S" : "");
            }
            if (userConfig.altInput &&
                (userConfig.enableTime || timeMode) &&
                !userConfig.altFormat) {
                var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaults.altFormat;
                formats.altFormat =
                    userConfig.noCalendar || timeMode
                        ? "h:i" + (userConfig.enableSeconds ? ":S K" : " K")
                        : defaultAltFormat + (" h:i" + (userConfig.enableSeconds ? ":S" : "") + " K");
            }
            if (!userConfig.altInputClass) {
                self.config.altInputClass =
                    self.input.className + " " + self.config.altInputClass;
            }
            Object.defineProperty(self.config, "minDate", {
                get: function () { return self.config._minDate; },
                set: minMaxDateSetter("min")
            });
            Object.defineProperty(self.config, "maxDate", {
                get: function () { return self.config._maxDate; },
                set: minMaxDateSetter("max")
            });
            var minMaxTimeSetter = function (type) { return function (val) {
                self.config[type === "min" ? "_minTime" : "_maxTime"] = self.parseDate(val, "H:i:S");
            }; };
            Object.defineProperty(self.config, "minTime", {
                get: function () { return self.config._minTime; },
                set: minMaxTimeSetter("min")
            });
            Object.defineProperty(self.config, "maxTime", {
                get: function () { return self.config._maxTime; },
                set: minMaxTimeSetter("max")
            });
            if (userConfig.mode === "time") {
                self.config.noCalendar = true;
                self.config.enableTime = true;
            }
            Object.assign(self.config, formats, userConfig);
            for (var i = 0; i < boolOpts.length; i++)
                self.config[boolOpts[i]] =
                    self.config[boolOpts[i]] === true ||
                        self.config[boolOpts[i]] === "true";
            HOOKS.filter(function (hook) { return self.config[hook] !== undefined; }).forEach(function (hook) {
                self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);
            });
            self.isMobile =
                !self.config.disableMobile &&
                    !self.config.inline &&
                    self.config.mode === "single" &&
                    !self.config.disable.length &&
                    !self.config.enable.length &&
                    !self.config.weekNumbers &&
                    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            for (var i = 0; i < self.config.plugins.length; i++) {
                var pluginConf = self.config.plugins[i](self) || {};
                for (var key in pluginConf) {
                    if (HOOKS.indexOf(key) > -1) {
                        self.config[key] = arrayify(pluginConf[key])
                            .map(bindToInstance)
                            .concat(self.config[key]);
                    }
                    else if (typeof userConfig[key] === "undefined")
                        self.config[key] = pluginConf[key];
                }
            }
            triggerEvent("onParseConfig");
        }
        function setupLocale() {
            if (typeof self.config.locale !== "object" &&
                typeof flatpickr.l10ns[self.config.locale] === "undefined")
                self.config.errorHandler(new Error("flatpickr: invalid locale " + self.config.locale));
            self.l10n = __assign({}, flatpickr.l10ns["default"], (typeof self.config.locale === "object"
                ? self.config.locale
                : self.config.locale !== "default"
                    ? flatpickr.l10ns[self.config.locale]
                    : undefined));
            tokenRegex.K = "(" + self.l10n.amPM[0] + "|" + self.l10n.amPM[1] + "|" + self.l10n.amPM[0].toLowerCase() + "|" + self.l10n.amPM[1].toLowerCase() + ")";
            var userConfig = __assign({}, instanceConfig, JSON.parse(JSON.stringify(element.dataset || {})));
            if (userConfig.time_24hr === undefined &&
                flatpickr.defaultConfig.time_24hr === undefined) {
                self.config.time_24hr = self.l10n.time_24hr;
            }
            self.formatDate = createDateFormatter(self);
            self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });
        }
        function positionCalendar(customPositionElement) {
            if (self.calendarContainer === undefined)
                return;
            triggerEvent("onPreCalendarPosition");
            var positionElement = customPositionElement || self._positionElement;
            var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, (function (acc, child) { return acc + child.offsetHeight; }), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(" "), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === "above" ||
                (configPosVertical !== "below" &&
                    distanceFromBottom < calendarHeight &&
                    inputBounds.top > calendarHeight);
            var top = window.pageYOffset +
                inputBounds.top +
                (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);
            toggleClass(self.calendarContainer, "arrowTop", !showOnTop);
            toggleClass(self.calendarContainer, "arrowBottom", showOnTop);
            if (self.config.inline)
                return;
            var left = window.pageXOffset +
                inputBounds.left -
                (configPosHorizontal != null && configPosHorizontal === "center"
                    ? (calendarWidth - inputBounds.width) / 2
                    : 0);
            var right = window.document.body.offsetWidth - (window.pageXOffset + inputBounds.right);
            var rightMost = left + calendarWidth > window.document.body.offsetWidth;
            var centerMost = right + calendarWidth > window.document.body.offsetWidth;
            toggleClass(self.calendarContainer, "rightMost", rightMost);
            if (self.config.static)
                return;
            self.calendarContainer.style.top = top + "px";
            if (!rightMost) {
                self.calendarContainer.style.left = left + "px";
                self.calendarContainer.style.right = "auto";
            }
            else if (!centerMost) {
                self.calendarContainer.style.left = "auto";
                self.calendarContainer.style.right = right + "px";
            }
            else {
                var doc = document.styleSheets[0];
                // some testing environments don't have css support
                if (doc === undefined)
                    return;
                var bodyWidth = window.document.body.offsetWidth;
                var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);
                var centerBefore = ".flatpickr-calendar.centerMost:before";
                var centerAfter = ".flatpickr-calendar.centerMost:after";
                var centerIndex = doc.cssRules.length;
                var centerStyle = "{left:" + inputBounds.left + "px;right:auto;}";
                toggleClass(self.calendarContainer, "rightMost", false);
                toggleClass(self.calendarContainer, "centerMost", true);
                doc.insertRule(centerBefore + "," + centerAfter + centerStyle, centerIndex);
                self.calendarContainer.style.left = centerLeft + "px";
                self.calendarContainer.style.right = "auto";
            }
        }
        function redraw() {
            if (self.config.noCalendar || self.isMobile)
                return;
            updateNavigationCurrentMonth();
            buildDays();
        }
        function focusAndClose() {
            self._input.focus();
            if (window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                navigator.msMaxTouchPoints !== undefined) {
                // hack - bugs in the way IE handles focus keeps the calendar open
                setTimeout(self.close, 0);
            }
            else {
                self.close();
            }
        }
        function selectDate(e) {
            e.preventDefault();
            e.stopPropagation();
            var isSelectable = function (day) {
                return day.classList &&
                    day.classList.contains("flatpickr-day") &&
                    !day.classList.contains("flatpickr-disabled") &&
                    !day.classList.contains("notAllowed");
            };
            var t = findParent(e.target, isSelectable);
            if (t === undefined)
                return;
            var target = t;
            var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));
            var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||
                selectedDate.getMonth() >
                    self.currentMonth + self.config.showMonths - 1) &&
                self.config.mode !== "range";
            self.selectedDateElem = target;
            if (self.config.mode === "single")
                self.selectedDates = [selectedDate];
            else if (self.config.mode === "multiple") {
                var selectedIndex = isDateSelected(selectedDate);
                if (selectedIndex)
                    self.selectedDates.splice(parseInt(selectedIndex), 1);
                else
                    self.selectedDates.push(selectedDate);
            }
            else if (self.config.mode === "range") {
                if (self.selectedDates.length === 2) {
                    self.clear(false, false);
                }
                self.latestSelectedDateObj = selectedDate;
                self.selectedDates.push(selectedDate);
                // unless selecting same date twice, sort ascendingly
                if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)
                    self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });
            }
            setHoursFromInputs();
            if (shouldChangeMonth) {
                var isNewYear = self.currentYear !== selectedDate.getFullYear();
                self.currentYear = selectedDate.getFullYear();
                self.currentMonth = selectedDate.getMonth();
                if (isNewYear) {
                    triggerEvent("onYearChange");
                    buildMonthSwitch();
                }
                triggerEvent("onMonthChange");
            }
            updateNavigationCurrentMonth();
            buildDays();
            updateValue();
            if (self.config.enableTime)
                setTimeout(function () { return (self.showTimeInput = true); }, 50);
            // maintain focus
            if (!shouldChangeMonth &&
                self.config.mode !== "range" &&
                self.config.showMonths === 1)
                focusOnDayElem(target);
            else if (self.selectedDateElem !== undefined &&
                self.hourElement === undefined) {
                self.selectedDateElem && self.selectedDateElem.focus();
            }
            if (self.hourElement !== undefined)
                self.hourElement !== undefined && self.hourElement.focus();
            if (self.config.closeOnSelect) {
                var single = self.config.mode === "single" && !self.config.enableTime;
                var range = self.config.mode === "range" &&
                    self.selectedDates.length === 2 &&
                    !self.config.enableTime;
                if (single || range) {
                    focusAndClose();
                }
            }
            triggerChange();
        }
        var CALLBACKS = {
            locale: [setupLocale, updateWeekdays],
            showMonths: [buildMonths, setCalendarWidth, buildWeekdays],
            minDate: [jumpToDate],
            maxDate: [jumpToDate]
        };
        function set(option, value) {
            if (option !== null && typeof option === "object") {
                Object.assign(self.config, option);
                for (var key in option) {
                    if (CALLBACKS[key] !== undefined)
                        CALLBACKS[key].forEach(function (x) { return x(); });
                }
            }
            else {
                self.config[option] = value;
                if (CALLBACKS[option] !== undefined)
                    CALLBACKS[option].forEach(function (x) { return x(); });
                else if (HOOKS.indexOf(option) > -1)
                    self.config[option] = arrayify(value);
            }
            self.redraw();
            updateValue(false);
        }
        function setSelectedDate(inputDate, format) {
            var dates = [];
            if (inputDate instanceof Array)
                dates = inputDate.map(function (d) { return self.parseDate(d, format); });
            else if (inputDate instanceof Date || typeof inputDate === "number")
                dates = [self.parseDate(inputDate, format)];
            else if (typeof inputDate === "string") {
                switch (self.config.mode) {
                    case "single":
                    case "time":
                        dates = [self.parseDate(inputDate, format)];
                        break;
                    case "multiple":
                        dates = inputDate
                            .split(self.config.conjunction)
                            .map(function (date) { return self.parseDate(date, format); });
                        break;
                    case "range":
                        dates = inputDate
                            .split(self.l10n.rangeSeparator)
                            .map(function (date) { return self.parseDate(date, format); });
                        break;
                    default:
                        break;
                }
            }
            else
                self.config.errorHandler(new Error("Invalid date supplied: " + JSON.stringify(inputDate)));
            self.selectedDates = dates.filter(function (d) { return d instanceof Date && isEnabled(d, false); });
            if (self.config.mode === "range")
                self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });
        }
        function setDate(date, triggerChange, format) {
            if (triggerChange === void 0) { triggerChange = false; }
            if (format === void 0) { format = self.config.dateFormat; }
            if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))
                return self.clear(triggerChange);
            setSelectedDate(date, format);
            self.showTimeInput = self.selectedDates.length > 0;
            self.latestSelectedDateObj =
                self.selectedDates[self.selectedDates.length - 1];
            self.redraw();
            jumpToDate();
            setHoursFromDate();
            if (self.selectedDates.length === 0) {
                self.clear(false);
            }
            updateValue(triggerChange);
            if (triggerChange)
                triggerEvent("onChange");
        }
        function parseDateRules(arr) {
            return arr
                .slice()
                .map(function (rule) {
                if (typeof rule === "string" ||
                    typeof rule === "number" ||
                    rule instanceof Date) {
                    return self.parseDate(rule, undefined, true);
                }
                else if (rule &&
                    typeof rule === "object" &&
                    rule.from &&
                    rule.to)
                    return {
                        from: self.parseDate(rule.from, undefined),
                        to: self.parseDate(rule.to, undefined)
                    };
                return rule;
            })
                .filter(function (x) { return x; }); // remove falsy values
        }
        function setupDates() {
            self.selectedDates = [];
            self.now = self.parseDate(self.config.now) || new Date();
            // Workaround IE11 setting placeholder as the input's value
            var preloadedDate = self.config.defaultDate ||
                ((self.input.nodeName === "INPUT" ||
                    self.input.nodeName === "TEXTAREA") &&
                    self.input.placeholder &&
                    self.input.value === self.input.placeholder
                    ? null
                    : self.input.value);
            if (preloadedDate)
                setSelectedDate(preloadedDate, self.config.dateFormat);
            self._initialDate =
                self.selectedDates.length > 0
                    ? self.selectedDates[0]
                    : self.config.minDate &&
                        self.config.minDate.getTime() > self.now.getTime()
                        ? self.config.minDate
                        : self.config.maxDate &&
                            self.config.maxDate.getTime() < self.now.getTime()
                            ? self.config.maxDate
                            : self.now;
            self.currentYear = self._initialDate.getFullYear();
            self.currentMonth = self._initialDate.getMonth();
            if (self.selectedDates.length > 0)
                self.latestSelectedDateObj = self.selectedDates[0];
            if (self.config.minTime !== undefined)
                self.config.minTime = self.parseDate(self.config.minTime, "H:i");
            if (self.config.maxTime !== undefined)
                self.config.maxTime = self.parseDate(self.config.maxTime, "H:i");
            self.minDateHasTime =
                !!self.config.minDate &&
                    (self.config.minDate.getHours() > 0 ||
                        self.config.minDate.getMinutes() > 0 ||
                        self.config.minDate.getSeconds() > 0);
            self.maxDateHasTime =
                !!self.config.maxDate &&
                    (self.config.maxDate.getHours() > 0 ||
                        self.config.maxDate.getMinutes() > 0 ||
                        self.config.maxDate.getSeconds() > 0);
            Object.defineProperty(self, "showTimeInput", {
                get: function () { return self._showTimeInput; },
                set: function (bool) {
                    self._showTimeInput = bool;
                    if (self.calendarContainer)
                        toggleClass(self.calendarContainer, "showTimeInput", bool);
                    self.isOpen && positionCalendar();
                }
            });
        }
        function setupInputs() {
            self.input = self.config.wrap
                ? element.querySelector("[data-input]")
                : element;
            /* istanbul ignore next */
            if (!self.input) {
                self.config.errorHandler(new Error("Invalid input element specified"));
                return;
            }
            // hack: store previous type to restore it after destroy()
            self.input._type = self.input.type;
            self.input.type = "text";
            self.input.classList.add("flatpickr-input");
            self._input = self.input;
            if (self.config.altInput) {
                // replicate self.element
                self.altInput = createElement(self.input.nodeName, self.config.altInputClass);
                self._input = self.altInput;
                self.altInput.placeholder = self.input.placeholder;
                self.altInput.disabled = self.input.disabled;
                self.altInput.required = self.input.required;
                self.altInput.tabIndex = self.input.tabIndex;
                self.altInput.type = "text";
                self.input.setAttribute("type", "hidden");
                if (!self.config.static && self.input.parentNode)
                    self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);
            }
            if (!self.config.allowInput)
                self._input.setAttribute("readonly", "readonly");
            self._positionElement = self.config.positionElement || self._input;
        }
        function setupMobile() {
            var inputType = self.config.enableTime
                ? self.config.noCalendar
                    ? "time"
                    : "datetime-local"
                : "date";
            self.mobileInput = createElement("input", self.input.className + " flatpickr-mobile");
            self.mobileInput.step = self.input.getAttribute("step") || "any";
            self.mobileInput.tabIndex = 1;
            self.mobileInput.type = inputType;
            self.mobileInput.disabled = self.input.disabled;
            self.mobileInput.required = self.input.required;
            self.mobileInput.placeholder = self.input.placeholder;
            self.mobileFormatStr =
                inputType === "datetime-local"
                    ? "Y-m-d\\TH:i:S"
                    : inputType === "date"
                        ? "Y-m-d"
                        : "H:i:S";
            if (self.selectedDates.length > 0) {
                self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);
            }
            if (self.config.minDate)
                self.mobileInput.min = self.formatDate(self.config.minDate, "Y-m-d");
            if (self.config.maxDate)
                self.mobileInput.max = self.formatDate(self.config.maxDate, "Y-m-d");
            self.input.type = "hidden";
            if (self.altInput !== undefined)
                self.altInput.type = "hidden";
            try {
                if (self.input.parentNode)
                    self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);
            }
            catch (_a) { }
            bind(self.mobileInput, "change", function (e) {
                self.setDate(e.target.value, false, self.mobileFormatStr);
                triggerEvent("onChange");
                triggerEvent("onClose");
            });
        }
        function toggle(e) {
            if (self.isOpen === true)
                return self.close();
            self.open(e);
        }
        function triggerEvent(event, data) {
            // If the instance has been destroyed already, all hooks have been removed
            if (self.config === undefined)
                return;
            var hooks = self.config[event];
            if (hooks !== undefined && hooks.length > 0) {
                for (var i = 0; hooks[i] && i < hooks.length; i++)
                    hooks[i](self.selectedDates, self.input.value, self, data);
            }
            if (event === "onChange") {
                self.input.dispatchEvent(createEvent("change"));
                // many front-end frameworks bind to the input event
                self.input.dispatchEvent(createEvent("input"));
            }
        }
        function createEvent(name) {
            var e = document.createEvent("Event");
            e.initEvent(name, true, true);
            return e;
        }
        function isDateSelected(date) {
            for (var i = 0; i < self.selectedDates.length; i++) {
                if (compareDates(self.selectedDates[i], date) === 0)
                    return "" + i;
            }
            return false;
        }
        function isDateInRange(date) {
            if (self.config.mode !== "range" || self.selectedDates.length < 2)
                return false;
            return (compareDates(date, self.selectedDates[0]) >= 0 &&
                compareDates(date, self.selectedDates[1]) <= 0);
        }
        function updateNavigationCurrentMonth() {
            if (self.config.noCalendar || self.isMobile || !self.monthNav)
                return;
            self.yearElements.forEach(function (yearElement, i) {
                var d = new Date(self.currentYear, self.currentMonth, 1);
                d.setMonth(self.currentMonth + i);
                if (self.config.showMonths > 1 ||
                    self.config.monthSelectorType === "static") {
                    self.monthElements[i].textContent =
                        monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + " ";
                }
                else {
                    self.monthsDropdownContainer.value = d.getMonth().toString();
                }
                yearElement.value = d.getFullYear().toString();
            });
            self._hidePrevMonthArrow =
                self.config.minDate !== undefined &&
                    (self.currentYear === self.config.minDate.getFullYear()
                        ? self.currentMonth <= self.config.minDate.getMonth()
                        : self.currentYear < self.config.minDate.getFullYear());
            self._hideNextMonthArrow =
                self.config.maxDate !== undefined &&
                    (self.currentYear === self.config.maxDate.getFullYear()
                        ? self.currentMonth + 1 > self.config.maxDate.getMonth()
                        : self.currentYear > self.config.maxDate.getFullYear());
        }
        function getDateStr(format) {
            return self.selectedDates
                .map(function (dObj) { return self.formatDate(dObj, format); })
                .filter(function (d, i, arr) {
                return self.config.mode !== "range" ||
                    self.config.enableTime ||
                    arr.indexOf(d) === i;
            })
                .join(self.config.mode !== "range"
                ? self.config.conjunction
                : self.l10n.rangeSeparator);
        }
        /**
         * Updates the values of inputs associated with the calendar
         */
        function updateValue(triggerChange) {
            if (triggerChange === void 0) { triggerChange = true; }
            if (self.mobileInput !== undefined && self.mobileFormatStr) {
                self.mobileInput.value =
                    self.latestSelectedDateObj !== undefined
                        ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)
                        : "";
            }
            self.input.value = getDateStr(self.config.dateFormat);
            if (self.altInput !== undefined) {
                self.altInput.value = getDateStr(self.config.altFormat);
            }
            if (triggerChange !== false)
                triggerEvent("onValueUpdate");
        }
        function onMonthNavClick(e) {
            var isPrevMonth = self.prevMonthNav.contains(e.target);
            var isNextMonth = self.nextMonthNav.contains(e.target);
            if (isPrevMonth || isNextMonth) {
                changeMonth(isPrevMonth ? -1 : 1);
            }
            else if (self.yearElements.indexOf(e.target) >= 0) {
                e.target.select();
            }
            else if (e.target.classList.contains("arrowUp")) {
                self.changeYear(self.currentYear + 1);
            }
            else if (e.target.classList.contains("arrowDown")) {
                self.changeYear(self.currentYear - 1);
            }
        }
        function timeWrapper(e) {
            e.preventDefault();
            var isKeyDown = e.type === "keydown", input = e.target;
            if (self.amPM !== undefined && e.target === self.amPM) {
                self.amPM.textContent =
                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
            }
            var min = parseFloat(input.getAttribute("min")), max = parseFloat(input.getAttribute("max")), step = parseFloat(input.getAttribute("step")), curValue = parseInt(input.value, 10), delta = e.delta ||
                (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);
            var newValue = curValue + step * delta;
            if (typeof input.value !== "undefined" && input.value.length === 2) {
                var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;
                if (newValue < min) {
                    newValue =
                        max +
                            newValue +
                            int(!isHourElem) +
                            (int(isHourElem) && int(!self.amPM));
                    if (isMinuteElem)
                        incrementNumInput(undefined, -1, self.hourElement);
                }
                else if (newValue > max) {
                    newValue =
                        input === self.hourElement ? newValue - max - int(!self.amPM) : min;
                    if (isMinuteElem)
                        incrementNumInput(undefined, 1, self.hourElement);
                }
                if (self.amPM &&
                    isHourElem &&
                    (step === 1
                        ? newValue + curValue === 23
                        : Math.abs(newValue - curValue) > step)) {
                    self.amPM.textContent =
                        self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];
                }
                input.value = pad(newValue);
            }
        }
        init();
        return self;
    }
    /* istanbul ignore next */
    function _flatpickr(nodeList, config) {
        // static list
        var nodes = Array.prototype.slice
            .call(nodeList)
            .filter(function (x) { return x instanceof HTMLElement; });
        var instances = [];
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            try {
                if (node.getAttribute("data-fp-omit") !== null)
                    continue;
                if (node._flatpickr !== undefined) {
                    node._flatpickr.destroy();
                    node._flatpickr = undefined;
                }
                node._flatpickr = FlatpickrInstance(node, config || {});
                instances.push(node._flatpickr);
            }
            catch (e) {
                console.error(e);
            }
        }
        return instances.length === 1 ? instances[0] : instances;
    }
    /* istanbul ignore next */
    if (typeof HTMLElement !== "undefined" &&
        typeof HTMLCollection !== "undefined" &&
        typeof NodeList !== "undefined") {
        // browser env
        HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {
            return _flatpickr(this, config);
        };
        HTMLElement.prototype.flatpickr = function (config) {
            return _flatpickr([this], config);
        };
    }
    /* istanbul ignore next */
    var flatpickr = function (selector, config) {
        if (typeof selector === "string") {
            return _flatpickr(window.document.querySelectorAll(selector), config);
        }
        else if (selector instanceof Node) {
            return _flatpickr([selector], config);
        }
        else {
            return _flatpickr(selector, config);
        }
    };
    /* istanbul ignore next */
    flatpickr.defaultConfig = {};
    flatpickr.l10ns = {
        en: __assign({}, english),
        "default": __assign({}, english)
    };
    flatpickr.localize = function (l10n) {
        flatpickr.l10ns["default"] = __assign({}, flatpickr.l10ns["default"], l10n);
    };
    flatpickr.setDefaults = function (config) {
        flatpickr.defaultConfig = __assign({}, flatpickr.defaultConfig, config);
    };
    flatpickr.parseDate = createDateParser({});
    flatpickr.formatDate = createDateFormatter({});
    flatpickr.compareDates = compareDates;
    /* istanbul ignore next */
    if (typeof jQuery !== "undefined" && typeof jQuery.fn !== "undefined") {
        jQuery.fn.flatpickr = function (config) {
            return _flatpickr(this, config);
        };
    }
    // eslint-disable-next-line @typescript-eslint/camelcase
    Date.prototype.fp_incr = function (days) {
        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === "string" ? parseInt(days, 10) : days));
    };
    if (typeof window !== "undefined") {
        window.flatpickr = flatpickr;
    }

    return flatpickr;

}));


/***/ }),

/***/ "cfd8":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

exports._defineProperty = _defineProperty;
exports._objectSpread2 = _objectSpread2;


/***/ }),

/***/ "d294":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-search.vue?vue&type=template&id=055603b2&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-search',_vm._g(_vm._b({staticClass:"cv-toolbar-search",attrs:{"kind":"toolbar","form-item":false,"value":_vm.value,"small":""},on:{"focus":_vm.onFocus,"blur":_vm.onBlur}},'cv-search',_vm.$attrs,false),_vm.$listeners))}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-search.vue?vue&type=template&id=055603b2&

// EXTERNAL MODULE: ./src/components/cv-search/cv-search.vue + 5 modules
var cv_search = __webpack_require__("2b0a");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toolbar/cv-toolbar-search.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_toolbar_searchvue_type_script_lang_js_ = ({
  name: 'CvToolbarSearch',
  components: {
    CvSearch: cv_search["default"],
  },
  inheritAttrs: false,
  props: {
    value: String,
  },
  methods: {
    onBlur(ev) {
      if (!this.$el.contains(ev.target)) {
        this.$el.classList.remove('bx--toolbar-search--active');
      }
    },
    onFocus() {
      this.$el.classList.add('bx--toolbar-search--active');
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-search.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toolbar_cv_toolbar_searchvue_type_script_lang_js_ = (cv_toolbar_searchvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toolbar/cv-toolbar-search.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toolbar_cv_toolbar_searchvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toolbar_search = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "d3be":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list-data.vue?vue&type=template&id=3951de40&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-structured-list-data bx--structured-list-td",class:{
    'bx--structured-list-content--nowrap': _vm.noWrap,
  }},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-data.vue?vue&type=template&id=3951de40&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-structured-list/cv-structured-list-data.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var cv_structured_list_datavue_type_script_lang_js_ = ({
  name: 'CvStructuredListData',
  props: {
    noWrap: Boolean,
  },
});

// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-data.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_structured_list_cv_structured_list_datavue_type_script_lang_js_ = (cv_structured_list_datavue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-structured-list/cv-structured-list-data.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_structured_list_cv_structured_list_datavue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_structured_list_data = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "d43c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const options = ['light'];

/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    theme: {
      type: String,
      default: '',
      validator: value => value.length === 0 || options.includes(value),
    },
  },
});


/***/ }),

/***/ "d52d":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-modal/cv-modal.vue?vue&type=template&id=36b07095&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-modal bx--modal",class:{
    'is-visible': _vm.dataVisible,
    'bx--modal--danger': _vm.kind === 'danger',
  },attrs:{"data-modal":"","id":_vm.uid,"tabindex":"-1"},on:{"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.onEsc($event)},"click":function($event){if($event.target !== $event.currentTarget){ return null; }return _vm.onExternalClick($event)}}},[_c('div',{ref:"modalDialog",staticClass:"bx--modal-container",class:_vm.modalClasses},[_c('div',{ref:"beforeContent",staticClass:"cv-modal__before-content",staticStyle:{"position":"absolute","height":"1px","width":"1px","left":"-9999px"},attrs:{"tabindex":"0"},on:{"focus":_vm.focusBeforeContent}}),_c('div',{staticClass:"bx--modal-header"},[_c('p',{staticClass:"bx--modal-header__label"},[_vm._t("label")],2),_c('p',{staticClass:"bx--modal-header__heading"},[_vm._t("title",[_vm._v("\n          Modal Title\n        ")])],2),_c('button',{ref:"close",staticClass:"bx--modal-close",attrs:{"type":"button","aria-label":_vm.closeAriaLabel},on:{"click":_vm.onClose}},[_c('Close16',{staticClass:"bx--modal-close__icon"})],1)]),_c('div',{ref:"content",staticClass:"bx--modal-content",class:{ 'bx--modal-content--with-form': _vm.hasFormContent },attrs:{"tabindex":_vm.scrollable ? 0 : undefined}},[_vm._t("content")],2),(_vm.hasFooter)?_c('div',{staticClass:"bx--modal-footer"},[(_vm.hasSecondary)?_c('cv-button',{ref:"secondary",attrs:{"type":"button","kind":_vm.secondaryKind},on:{"click":_vm.onSecondaryClick}},[_vm._t("secondary-button",[_vm._v("Secondary button")])],2):_vm._e(),(_vm.hasPrimary)?_c('cv-button',{ref:"primary",attrs:{"disabled":_vm.primaryButtonDisabled,"type":"button","kind":_vm.primaryKind},on:{"click":_vm.onPrimaryClick}},[_vm._t("primary-button",[_vm._v("Primary button")])],2):_vm._e()],1):_vm._e(),_c('div',{ref:"afterContent",staticClass:"cv-modal__after-content",staticStyle:{"position":"absolute","height":"1px","width":"1px","left":"-9999px"},attrs:{"tabindex":"0"},on:{"focus":_vm.focusAfterContent}})])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-modal/cv-modal.vue?vue&type=template&id=36b07095&

// EXTERNAL MODULE: ./src/components/cv-button/cv-button.vue + 4 modules
var cv_button = __webpack_require__("cea0");

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/16.js
var _16 = __webpack_require__("5416");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-modal/cv-modal.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var cv_modalvue_type_script_lang_js_ = ({
  name: 'CvModal',
  mixins: [uid_mixin["a" /* default */]],
  components: {
    CvButton: cv_button["default"],
    Close16: _16["a" /* default */],
  },
  props: {
    closeAriaLabel: { type: String, default: 'Close modal' },
    kind: {
      type: String,
      default: '',
      validator: val => ['', 'danger'].includes(val),
    },
    autoHideOff: Boolean,
    visible: Boolean,
    primaryButtonDisabled: Boolean,
    size: String,
    hasFormContent: Boolean,
  },
  data() {
    return {
      dataVisible: false,
      scrollable: false,
      hasFooter: false,
      hasHeaderLabel: false,
      hasPrimary: false,
      hasSecondary: false,
    };
  },
  mounted() {
    if (this.visible) {
      this.show();
    }
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  watch: {
    visible(val) {
      if (val) {
        this.show();
      } else {
        this.hide();
      }
    },
  },
  computed: {
    primaryKind() {
      if (this.kind === 'danger') {
        return 'danger';
      } else {
        return 'primary';
      }
    },
    secondaryKind() {
      return 'secondary';
    },
    modalClasses() {
      const frontBit = 'bx--modal-container--';
      switch (this.size) {
        case 'xs':
          return `${frontBit}xs`;
        case 'small':
          return `${frontBit}sm`;
        case 'large':
          return `${frontBit}lg`;
        default:
          return '';
      }
    },
  },
  model: {
    event: 'modelEvent',
    prop: 'visible',
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.hasFooter = !!(this.$slots['primary-button'] || this.$slots['secondary-button']);
      this.hasHeaderLabel = !!this.$slots.label;
      this.hasSecondary = !!this.$slots['secondary-button'];
      this.hasPrimary = !!this.$slots['primary-button'];
    },
    focusBeforeContent() {
      if (this.$slots['primary-button']) {
        this.$refs.primary.$el.focus();
      } else if (this.$slots['secondary-button']) {
        this.$refs.secondary.$el.focus();
      } else {
        this.$refs.close.focus();
      }
    },
    focusAfterContent() {
      this.$refs.close.focus();
    },
    onShown() {
      const focusEl = this.$refs.content.querySelector('[data-modal-primary-focus]');
      if (focusEl) {
        focusEl.focus();
      } else if (this.$slots['primary-button']) {
        this.$refs.primary.$el.focus();
      } else if (this.$slots['secondary-button']) {
        this.$refs.secondary.$el.focus();
      } else {
        this.$refs.close.focus();
      }
      this.$emit('modal-shown');

      // check to see if content scrollable
      this.scrollable = this.$refs.content.scrollHeight > this.$refs.content.clientHeight;

      this.$el.removeEventListener('transitionend', this.onShown);
    },
    onExternalClick(ev) {
      if (ev.target === this.$el) {
        this._maybeHide(ev, 'external-click');
      }
    },
    onEsc(ev) {
      this._maybeHide(ev, 'escape-press');
    },
    onClose(ev) {
      this._maybeHide(ev, 'close-click');
    },
    show() {
      // prevent body scrolling
      document.body.classList.add('bx--body--with-modal-open');

      this.$el.addEventListener('transitionend', this.onShown);
      this.dataVisible = true;
    },
    _maybeHide(event, reason) {
      if (!this.autoHideOff) {
        this.hide();
      } else {
        event['cv:reason'] = reason;
        this.$emit('modal-hide-request', event);
      }
    },
    hide() {
      //restore any previous scrollability
      document.body.classList.remove('bx--body--with-modal-open');

      this.dataVisible = false;
      this.$emit('modal-hidden');
    },
    onPrimaryClick(ev) {
      this.$emit('primary-click');
      if (!this.$listeners['primary-click']) {
        this._maybeHide(ev, 'primary-click');
      }
    },
    onSecondaryClick(ev) {
      this.$emit('secondary-click');
      if (!this.$listeners['secondary-click']) {
        this._maybeHide(ev, 'secondary-click');
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-modal/cv-modal.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_modal_cv_modalvue_type_script_lang_js_ = (cv_modalvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-modal/cv-modal.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_modal_cv_modalvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_modal = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "dd5c":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/cv-code-snippet.vue?vue&type=template&id=5922d456&
var cv_code_snippetvue_type_template_id_5922d456_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.theComponent,_vm._b({tag:"component",staticClass:"cv-code-snippet",attrs:{"copy-feedback":_vm.copyFeedback,"feedback-aria-label":_vm.feedbackAriaLabel},on:{"copy-code":_vm.onCopyCode}},'component',_vm.$attrs,false),[_c('code',{ref:"code"},[_vm._t("default")],2),_c('textarea',{ref:"clippy",staticClass:"cv-code-snippet__clippy",staticStyle:{"position":"absolute","left":"-9999px","max-width":"0","opacity":"0","overflow":"hidden"},attrs:{"aria-hidden":"true"}})])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-code-snippet/cv-code-snippet.vue?vue&type=template&id=5922d456&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-code-snippet-inline.vue?vue&type=template&id=ba1bbc74&
var _cv_code_snippet_inlinevue_type_template_id_ba1bbc74_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-feedback-button',{staticClass:"cv-code-snippet-inline bx--snippet bx--snippet--inline",class:{ 'bx--snippet--light': _vm.theme === 'light' },attrs:{"feedback":_vm.copyFeedback,"inline":"","aria-label":_vm.feedbackAriaLabel},on:{"click":function($event){return _vm.$emit('copy-code')}}},[_vm._t("default")],2)}
var _cv_code_snippet_inlinevue_type_template_id_ba1bbc74_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-inline.vue?vue&type=template&id=ba1bbc74&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-feedback-button.vue?vue&type=template&id=f3e2c49c&
var _cv_feedback_buttonvue_type_template_id_f3e2c49c_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',_vm._b({staticClass:"cv-feedback-button",class:_vm.buttonClasses,attrs:{"type":"button","data-copy-btn":""},on:{"click":_vm.onClick,"animationend":_vm.onAnimationEnd}},'button',_vm.$attrs,false),[_vm._t("default"),_c('span',{class:_vm.assistiveTextClasses},[_vm._v(_vm._s(_vm.feedback))])],2)}
var _cv_feedback_buttonvue_type_template_id_f3e2c49c_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-feedback-button.vue?vue&type=template&id=f3e2c49c&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-feedback-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

const animationClass = 'bx--copy-btn--animating';
const fadeInClass = 'bx--copy-btn--fade-in';
const fadeOutClass = 'bx--copy-btn--fade-out';
const feedbackPhases = {
  DEFAULT: 0,
  FADE_IN: 1,
  ACTIVE: 2,
  FADE_OUT: 3,
};
/* harmony default export */ var _cv_feedback_buttonvue_type_script_lang_js_ = ({
  name: 'cvFeedbackButton',
  inheritAttrs: false,
  props: {
    feedback: { type: String, required: true },
    inline: Boolean,
    timeout: { type: Number, default: 2000 },
  },
  computed: {
    buttonClasses() {
      const stdClasses = this.inline ? '' : 'bx--copy-btn';
      let animationClasses;

      switch (this.feedbackPhase) {
        case feedbackPhases.FADE_IN:
          animationClasses = ` ${animationClass} ${fadeInClass}`;
          break;
        case feedbackPhases.ACTIVE:
          animationClasses = ` ${animationClass}`;
          break;
        case feedbackPhases.FADE_OUT:
          animationClasses = ` ${animationClass} ${fadeOutClass}`;
          break;
        default:
          animationClasses = '';
          break;
      }

      return `${stdClasses}${animationClasses}`;
    },
    assistiveTextClasses() {
      return `bx--assistive-text bx--copy-btn__feedback`;
    },
  },
  data() {
    return {
      feedbackPhase: feedbackPhases.DEFAULT,
    };
  },
  methods: {
    onClick() {
      if (this.feedbackPhase === feedbackPhases.DEFAULT) {
        this.$emit('click');

        // start fade in animation
        this.feedbackPhase = feedbackPhases.FADE_IN;
      }
    },
    onAnimationEnd() {
      if (this.feedbackPhase === feedbackPhases.FADE_IN) {
        // fade in animation complete
        this.feedbackPhase = feedbackPhases.ACTIVE;

        setTimeout(() => {
          // queue fade out
          this.feedbackPhase = feedbackPhases.FADE_OUT;
        }, 2000);
      }
      if (this.feedbackPhase === feedbackPhases.FADE_OUT) {
        // reset to start
        this.feedbackPhase = feedbackPhases.DEFAULT;
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-feedback-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_code_snippet_cv_feedback_buttonvue_type_script_lang_js_ = (_cv_feedback_buttonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-feedback-button.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_code_snippet_cv_feedback_buttonvue_type_script_lang_js_,
  _cv_feedback_buttonvue_type_template_id_f3e2c49c_render,
  _cv_feedback_buttonvue_type_template_id_f3e2c49c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_feedback_button = (component.exports);
// EXTERNAL MODULE: ./src/mixins/theme-mixin.js
var theme_mixin = __webpack_require__("d43c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-code-snippet-inline.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var _cv_code_snippet_inlinevue_type_script_lang_js_ = ({
  name: 'CvCodeSnippetInline',
  mixins: [theme_mixin["a" /* default */]],
  components: {
    CvFeedbackButton: _cv_feedback_button,
  },
  props: {
    copyFeedback: String,
    feedbackAriaLabel: String,
  },
});

// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-inline.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_code_snippet_cv_code_snippet_inlinevue_type_script_lang_js_ = (_cv_code_snippet_inlinevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-inline.vue





/* normalize component */

var _cv_code_snippet_inline_component = Object(componentNormalizer["a" /* default */])(
  cv_code_snippet_cv_code_snippet_inlinevue_type_script_lang_js_,
  _cv_code_snippet_inlinevue_type_template_id_ba1bbc74_render,
  _cv_code_snippet_inlinevue_type_template_id_ba1bbc74_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_code_snippet_inline = (_cv_code_snippet_inline_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-code-snippet-multiline.vue?vue&type=template&id=0f3604f1&
var _cv_code_snippet_multilinevue_type_template_id_0f3604f1_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-code-snippet-multiline bx--snippet bx--snippet--multi",class:{ 'bx--snippet--expand': _vm.expanded },attrs:{"data-code-snippet":""}},[_c('div',{staticClass:"bx--snippet-container"},[_c('pre',[_vm._v("      "),_vm._t("default"),_vm._v("\n    ")],2)]),_c('cv-feedback-button',{attrs:{"feedback":_vm.copyFeedback,"aria-label":_vm.feedbackAriaLabel},on:{"click":function($event){return _vm.$emit('copy-code')}}},[_c('Copy16',{staticClass:"bx--snippet__icon"})],1),_c('cv-button',{staticClass:"bx--snippet-btn--expand",attrs:{"type":"button","kind":"ghost","size":"small"},on:{"click":_vm.toggleExpand}},[_c('span',{staticClass:"bx--snippet-btn--text"},[_vm._v(_vm._s(_vm.expandButtonText))]),_c('ChevronDown16',{staticClass:"bx--icon-chevron--down"})],1)],1)}
var _cv_code_snippet_multilinevue_type_template_id_0f3604f1_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-multiline.vue?vue&type=template&id=0f3604f1&

// EXTERNAL MODULE: ./src/components/cv-button/cv-button.vue + 4 modules
var cv_button = __webpack_require__("cea0");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/copy/16.js



var virtual_Copy16 = {
  name: 'Copy16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M28,10V28H10V10H28m0-2H10a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V10a2,2,0,0,0-2-2Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M4,18H2V4A2,2,0,0,1,4,2H18V4H4Z"
      }
    }), children]);
  }
};

/* harmony default export */ var _16 = (virtual_Copy16);

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/16.js
var chevron_down_16 = __webpack_require__("ae56");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-code-snippet-multiline.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var _cv_code_snippet_multilinevue_type_script_lang_js_ = ({
  name: 'CvCodeSnippetMultiline',
  components: {
    CvButton: cv_button["default"],
    CvFeedbackButton: _cv_feedback_button,
    Copy16: _16,
    ChevronDown16: chevron_down_16["a" /* default */],
  },
  props: {
    lessText: { type: String, default: 'Show less' },
    moreText: { type: String, default: 'Show more' },
    feedbackAriaLabel: String,
    copyFeedback: String,
  },
  data() {
    return {
      expanded: false,
    };
  },
  computed: {
    expandButtonText() {
      return this.expanded ? this.lessText : this.moreText;
    },
  },
  methods: {
    toggleExpand() {
      this.expanded = !this.expanded;
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-multiline.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_code_snippet_cv_code_snippet_multilinevue_type_script_lang_js_ = (_cv_code_snippet_multilinevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-multiline.vue





/* normalize component */

var _cv_code_snippet_multiline_component = Object(componentNormalizer["a" /* default */])(
  cv_code_snippet_cv_code_snippet_multilinevue_type_script_lang_js_,
  _cv_code_snippet_multilinevue_type_template_id_0f3604f1_render,
  _cv_code_snippet_multilinevue_type_template_id_0f3604f1_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_code_snippet_multiline = (_cv_code_snippet_multiline_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-code-snippet-oneline.vue?vue&type=template&id=ae1ea1b4&
var _cv_code_snippet_onelinevue_type_template_id_ae1ea1b4_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-code-snippet-oneline bx--snippet bx--snippet--single"},[_c('div',{staticClass:"bx--snippet-container"},[_c('pre',[_vm._v("      "),_vm._t("default"),_vm._v("\n    ")],2)]),_c('cv-feedback-button',{attrs:{"feedback":_vm.copyFeedback,"aria-label":_vm.feedbackAriaLabel},on:{"click":function($event){return _vm.$emit('copy-code')}}},[_c('Copy16',{staticClass:"bx--snippet__icon"})],1)],1)}
var _cv_code_snippet_onelinevue_type_template_id_ae1ea1b4_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-oneline.vue?vue&type=template&id=ae1ea1b4&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/_cv-code-snippet-oneline.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var _cv_code_snippet_onelinevue_type_script_lang_js_ = ({
  name: 'CvCodeSnippetOneline',
  components: {
    CvFeedbackButton: _cv_feedback_button,
    Copy16: _16,
  },
  props: {
    copyFeedback: String,
    feedbackAriaLabel: String,
  },
});

// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-oneline.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_code_snippet_cv_code_snippet_onelinevue_type_script_lang_js_ = (_cv_code_snippet_onelinevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-code-snippet/_cv-code-snippet-oneline.vue





/* normalize component */

var _cv_code_snippet_oneline_component = Object(componentNormalizer["a" /* default */])(
  cv_code_snippet_cv_code_snippet_onelinevue_type_script_lang_js_,
  _cv_code_snippet_onelinevue_type_template_id_ae1ea1b4_render,
  _cv_code_snippet_onelinevue_type_template_id_ae1ea1b4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_code_snippet_oneline = (_cv_code_snippet_oneline_component.exports);
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-code-snippet/cv-code-snippet.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var cv_code_snippetvue_type_script_lang_js_ = ({
  name: 'CvCodeSnippet',
  inheritAttrs: false,
  components: {
    CvCodeSnippetInline: _cv_code_snippet_inline,
    CvCodeSnippetMultiline: _cv_code_snippet_multiline,
    CvCodeSnippetOneline: _cv_code_snippet_oneline,
  },
  props: {
    feedbackAriaLabel: { type: String, default: 'Copy code' },
    copyFeedback: { type: String, default: 'Copied!' },
    kind: {
      type: String,
      default: 'oneline',
      validator: value => ['inline', 'multiline', 'oneline'].includes(value),
    },
  },
  computed: {
    theComponent() {
      switch (this.kind) {
        case 'inline':
          return 'CvCodeSnippetInline';
        case 'multiline':
          return 'CvCodeSnippetMultiline';
        default:
          return 'CvCodeSnippetOneline';
      }
    },
  },
  methods: {
    onCopyCode() {
      // copy to clipboard
      this.$refs.clippy.value = this.$refs.code.innerText;
      this.$refs.clippy.select();
      document.execCommand('copy');
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-code-snippet/cv-code-snippet.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_code_snippet_cv_code_snippetvue_type_script_lang_js_ = (cv_code_snippetvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-code-snippet/cv-code-snippet.vue





/* normalize component */

var cv_code_snippet_component = Object(componentNormalizer["a" /* default */])(
  cv_code_snippet_cv_code_snippetvue_type_script_lang_js_,
  cv_code_snippetvue_type_template_id_5922d456_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_code_snippet = __webpack_exports__["default"] = (cv_code_snippet_component.exports);

/***/ }),

/***/ "def8":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table.vue?vue&type=template&id=43ed6d0a&
var cv_data_tablevue_type_template_id_43ed6d0a_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-data-table",style:(_vm.tableStyle)},[_c('div',{staticClass:"bx--data-table-container"},[(_vm.hasTableHeader)?_c('div',{staticClass:"bx--data-table-header"},[(_vm.title)?_c('h4',{staticClass:"bx--data-table-header__title"},[_vm._v(_vm._s(_vm.title))]):_vm._e(),(_vm.isHelper)?_c('p',{staticClass:"bx--data-table-header__description"},[_vm._t("helper-text",[_vm._v(_vm._s(_vm.helperText))])],2):_vm._e()]):_vm._e(),(_vm.hasToolbar)?_c('section',{staticClass:"bx--table-toolbar"},[(_vm.batchActive)?_c('div',{style:({ minHeight: '48px', maxWidth: '0' })}):_vm._e(),(_vm.hasBatchActions)?_c('div',{staticClass:"bx--batch-actions",class:{ 'bx--batch-actions--active': _vm.batchActive },attrs:{"aria-label":_vm.actionBarAriaLabel}},[_c('div',{staticClass:"bx--action-list"},[_vm._t("batch-actions"),_c('cv-button',{staticClass:"bx--batch-summary__cancel",attrs:{"size":"small"},on:{"click":_vm.deselect}},[_vm._v("\n            "+_vm._s(_vm.batchCancelLabel)+"\n          ")])],2),_c('div',{staticClass:"bx--batch-summary"},[_c('p',{staticClass:"bx--batch-summary__para"},[_c('span',{attrs:{"data-items-selected":""}},[_vm._t("items-selected",[_vm._v(_vm._s(_vm.dataRowsSelected.length)+" items selected")],{"scope":{ count: _vm.dataRowsSelected.length }})],2)])])]):_vm._e(),((_vm.hasActions || _vm.$listeners.search) && !_vm.batchActive)?_c('div',{staticClass:"bx--toolbar-content"},[(_vm.$listeners.search)?_c('div',{ref:"searchContainer",class:{
            'bx--toolbar-search-container-active': _vm.searchActive || _vm.searchValue.length > 0,
            'bx--toolbar-search-container-persistent': !_vm.expandingSearch,
            'bx--toolbar-search-container-expandable': _vm.expandingSearch,
          }},[_c('div',{staticClass:"bx--search bx--search--sm",attrs:{"data-search":"","role":"search"}},[_c('div',{ref:"magnifier",staticClass:"bx--search-magnifier",attrs:{"tabindex":"0"},on:{"click":function($event){return _vm.checkSearchExpand(true)},"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.checkSearchExpand(true)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.checkSearchExpand(true)},"blur":_vm.checkSearchFocus}},[_c('Search16',{staticClass:"bx--toolbar-action__icon"})],1),_c('label',{staticClass:"bx--label",attrs:{"for":_vm.uid}},[_vm._v(_vm._s(_vm.searchLabel))]),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.searchValue),expression:"searchValue"}],ref:"search",staticClass:"bx--search-input",attrs:{"type":"text","id":_vm.uid,"role":"search","placeholder":_vm.searchPlaceholder,"aria-labelledby":_vm.uid},domProps:{"value":(_vm.searchValue)},on:{"input":[function($event){if($event.target.composing){ return; }_vm.searchValue=$event.target.value},_vm.onSearch],"blur":_vm.checkSearchFocus,"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"esc",27,$event.key,["Esc","Escape"])){ return null; }$event.preventDefault();return _vm.checkSearchExpand(false)}}}),_c('button',{staticClass:"bx--search-close",class:{ 'bx--search-close--hidden': !_vm.clearSearchVisible },attrs:{"title":_vm.searchClearLabel,"aria-label":_vm.searchClearLabel,"type":"button"},on:{"click":_vm.onClearClick}},[_c('Close16')],1)])]):_vm._e(),_vm._t("actions")],2):_vm._e()]):_vm._e(),_c('table',{staticClass:"bx--data-table",class:_vm.modifierClasses},[_c('thead',[_c('tr',[(_vm.hasExpandables)?_c('th',{staticClass:"bx--table-expand",attrs:{"data-previous-value":_vm.dataExpandAll ? 'collapsed' : 'expanded'}},[(_vm.hasExpandAll)?_c('button',{staticClass:"bx--table-expand__button",attrs:{"type":"button","aria-label":_vm.dataExpandAll ? _vm.collapseAllAriaLabel : _vm.expandAllAriaLabel},on:{"click":_vm.toggleExpandAll}},[_c('ChevronRight16',{staticClass:"bx--table-expand__svg"})],1):_vm._e()]):_vm._e(),(_vm.hasBatchActions)?_c('th',{staticClass:"bx--table-column-checkbox"},[_c('cv-checkbox',{attrs:{"form-item":false,"value":"headingCheck"},on:{"change":_vm.onHeadingCheckChange},model:{value:(_vm.headingChecked),callback:function ($$v) {_vm.headingChecked=$$v},expression:"headingChecked"}})],1):_vm._e(),_vm._l((_vm.dataColumns),function(column,index){return _c('cv-data-table-heading',{key:(index + ":" + column),attrs:{"heading":_vm.columnHeading(column),"sortable":_vm.isColSortable(column),"order":column.order,"heading-style":_vm.headingStyle(index),"skeleton":_vm.skeleton},on:{"sort":function (val) { return _vm.onSort(index, val); }}})}),(_vm.hasOverflowMenu)?_c('th'):_vm._e()],2)]),_c('cv-wrapper',{attrs:{"tag-type":_vm.hasExpandables ? '' : 'tbody'}},[_vm._t("data",_vm._l((_vm.data),function(row,rowIndex){return _c('cv-data-table-row',{key:("row:" + rowIndex),ref:"dataRows",refInFor:true,attrs:{"value":("" + rowIndex),"overflow-menu":_vm.overflowMenu}},_vm._l((row),function(cell,colIndex){return _c('cv-data-table-cell',{key:("cell:" + colIndex + ":" + rowIndex),style:(_vm.dataStyle(colIndex))},[_c('cv-wrapper',{attrs:{"tag-type":_vm.skeleton && rowIndex < 1 ? 'span' : ''}},[_vm._v(_vm._s(cell))])],1)}),1)}))],2)],1)]),(_vm.pagination)?_c('cv-pagination',_vm._b({attrs:{"number-of-items":_vm.internalNumberOfItems},on:{"change":function($event){return _vm.$emit('pagination', $event)}},scopedSlots:_vm._u([{key:"range-text",fn:function(ref){
          var scope = ref.scope;
return [(_vm.$scopedSlots['range-text'])?_vm._t("range-text",null,{"scope":scope}):_vm._e()]}},{key:"of-n-pages",fn:function(ref){
          var scope = ref.scope;
return [(_vm.$scopedSlots['of-n-pages'])?_vm._t("of-n-pages",null,{"scope":scope}):_vm._e()]}}],null,true)},'cv-pagination',_vm.internalPagination,false)):_vm._e()],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table.vue?vue&type=template&id=43ed6d0a&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/_cv-data-table-heading.vue?vue&type=template&id=8a92137c&
var _cv_data_table_headingvue_type_template_id_8a92137c_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',{style:(_vm.skeleton && _vm.headingStyle),attrs:{"aria-sort":_vm.sortOrder}},[(_vm.sortable)?_c('button',{class:['bx--table-sort', _vm.orderClass],style:(_vm.headingStyle),attrs:{"type":"button"},on:{"click":_vm.onSortClick}},[_c('cv-wrapper',{staticClass:"bx--table-header-label",attrs:{"tag-type":_vm.headingLabelTag}},[_vm._v(_vm._s(_vm.heading))]),_c('ArrowDown16',{staticClass:"bx--table-sort__icon"}),_c('Arrows16',{staticClass:"bx--table-sort__icon-unsorted"})],1):_c('cv-wrapper',{staticClass:"bx--table-header-label",style:(_vm.headingStyle),attrs:{"tag-type":_vm.headingLabelTag}},[_vm._v(_vm._s(_vm.heading))])],1)}
var _cv_data_table_headingvue_type_template_id_8a92137c_staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-data-table/_cv-data-table-heading.vue?vue&type=template&id=8a92137c&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/arrow--down/16.js



var virtual_ArrowDown16 = {
  name: 'ArrowDown16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "12.3,9.3 8.5,13.1 8.5,1 7.5,1 7.5,13.1 3.7,9.3 3,10 8,15 13,10"
      }
    }), children]);
  }
};

/* harmony default export */ var _16 = (virtual_ArrowDown16);

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/arrows/16.js



var virtual_Arrows16 = {
  name: 'Arrows16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "27.6,20.6 24,24.2 24,4 22,4 22,24.2 18.4,20.6 17,22 23,28 29,22"
      }
    }), createElement('polygon', {
      attrs: {
        "points": "9,4 3,10 4.4,11.4 8,7.8 8,28 10,28 10,7.8 13.6,11.4 15,10"
      }
    }), children]);
  }
};

/* harmony default export */ var arrows_16 = (virtual_Arrows16);

// EXTERNAL MODULE: ./src/components/cv-wrapper/_cv-wrapper.js
var _cv_wrapper = __webpack_require__("5d36");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/_cv-data-table-heading.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





const nextSortOrder = {
  ascending: 'descending',
  descending: 'none',
  none: 'ascending',
};

/* harmony default export */ var _cv_data_table_headingvue_type_script_lang_js_ = ({
  name: 'CvDataTableHeading',
  components: { ArrowDown16: _16, Arrows16: arrows_16, CvWrapper: _cv_wrapper["a" /* default */] },
  props: {
    heading: { type: String, required: true },
    sortable: Boolean,
    order: { type: String, default: 'none' },
    skeleton: Boolean,
    headingStyle: Object,
  },
  computed: {
    sortOrder() {
      if (this.order !== 'ascending' && this.order !== 'descending') {
        return 'none';
      } else {
        return this.order;
      }
    },
    sortText() {
      return this.sortOrder !== 'descending'
        ? 'Sort rows by this header in descending order'
        : 'Sort rows by this header in ascending order';
    },
    orderClass() {
      let result = '';
      if (this.sortOrder === 'descending') {
        result = 'bx--table-sort--active';
      } else if (this.sortOrder === 'ascending') {
        result = 'bx--table-sort--active bx--table-sort--ascending';
      }
      return result;
    },
    headingLabelTag() {
      return this.heading.length === 0 || !this.skeleton ? 'span' : '';
    },
  },
  model: {
    event: 'sort',
    prop: 'order',
  },
  methods: {
    onSortClick() {
      this.$emit('sort', nextSortOrder[this.sortOrder]);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-data-table/_cv-data-table-heading.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_data_table_cv_data_table_headingvue_type_script_lang_js_ = (_cv_data_table_headingvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-data-table/_cv-data-table-heading.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_data_table_cv_data_table_headingvue_type_script_lang_js_,
  _cv_data_table_headingvue_type_template_id_8a92137c_render,
  _cv_data_table_headingvue_type_template_id_8a92137c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_data_table_heading = (component.exports);
// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table-row.vue + 9 modules
var cv_data_table_row = __webpack_require__("0f44");

// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table-cell.vue + 4 modules
var cv_data_table_cell = __webpack_require__("0647");

// EXTERNAL MODULE: ./src/components/cv-button/cv-button.vue + 4 modules
var cv_button = __webpack_require__("cea0");

// EXTERNAL MODULE: ./src/components/cv-checkbox/cv-checkbox.vue + 4 modules
var cv_checkbox = __webpack_require__("eade");

// EXTERNAL MODULE: ./src/components/cv-pagination/cv-pagination.vue + 6 modules
var cv_pagination = __webpack_require__("744c");

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/search/16.js
var search_16 = __webpack_require__("a4de");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/close/16.js
var close_16 = __webpack_require__("5416");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--right/16.js
var chevron_right_16 = __webpack_require__("7c7c");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-data-table/cv-data-table.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//













/* harmony default export */ var cv_data_tablevue_type_script_lang_js_ = ({
  name: 'CvDataTable',
  components: {
    CvButton: cv_button["default"],
    CvDataTableHeading: _cv_data_table_heading,
    CvDataTableRow: cv_data_table_row["default"],
    CvDataTableCell: cv_data_table_cell["default"],
    CvCheckbox: cv_checkbox["default"],
    CvPagination: cv_pagination["default"],
    CvWrapper: _cv_wrapper["a" /* default */],
    Search16: search_16["a" /* default */],
    Close16: close_16["a" /* default */],
    ChevronRight16: chevron_right_16["a" /* default */],
  },
  mixins: [uid_mixin["a" /* default */]],
  props: {
    actionBarAriaLabel: { type: String, default: 'Table Action Bar' },
    collapseAllAriaLabel: { type: String, default: 'Collapse all rows' },
    expandAllAriaLabel: { type: String, default: 'Expand all rows' },
    autoWidth: Boolean,
    batchCancelLabel: { type: String, default: 'cancel' },
    borderless: Boolean,
    overflowMenu: { type: [Boolean, Array], default: () => [] },
    pagination: {
      type: [Boolean, Object],
      default: false,
    },
    rowSize: {
      type: String,
      default: 'standard',
      validator: val => ['compact', 'short', 'standard', 'tall', ''].includes(val),
    },
    searchLabel: { type: String, default: 'Search' },
    searchPlaceholder: { type: String, default: 'Search' },
    searchClearLabel: { type: String, default: 'Clear search' },
    sortable: Boolean,
    title: String,
    columns: { type: Array, required: true },
    data: Array,
    zebra: Boolean,
    rowsSelected: { type: Array, default: () => [] },
    helperText: { type: String, default: undefined },
    expandingSearch: { type: Boolean, default: true },
    skeleton: Boolean,
    hasExpandAll: Boolean,
  },
  model: {
    prop: 'rows-selected',
    event: 'row-select-changes',
  },
  data() {
    return {
      dataColumns: this.isSortable
        ? this.columns.map(item => ({
            label: item.label ? item.label : item,
            order: 'none',
            sortable: item.sortable,
          }))
        : this.columns,
      hasBatchActions: false,
      hasActions: false,
      hasToolbar: false,
      isHelper: false,
      batchActive: false,
      headingChecked: false,
      dataRowsSelected: this.rowsSelected,
      searchValue: '',
      clearSearchVisible: false,
      searchActive: false,
      registeredRows: [],
      dataExpandAll: false,
    };
  },
  watch: {
    sortable() {
      this.watchColumns();
    },
    columns() {
      this.watchColumns();
    },
    rowsSelected() {
      this.updateRowsSelected();
    },
  },
  created() {
    // add these on created otherwise cv:mounted is too late.
    this.$on('cv:mounted', srcComponent => this.onCvMount(srcComponent));
    this.$on('cv:beforeDestroy', srcComponent => this.onCvBeforeDestroy(srcComponent));
  },
  mounted() {
    this.watchColumns();
    this.updateRowsSelected();
    this.checkSlots();
  },
  beforeUpdate() {
    this.checkSlots();
  },
  computed: {
    columnHeading() {
      return col => {
        if (typeof col === 'object') {
          return col.label || '';
        } else {
          return col;
        }
      };
    },
    isSortable() {
      // is any column sortable
      return this.sortable || this.columns.some(column => column.sortable);
    },
    isColSortable() {
      return col => {
        // is specific column or all sortable
        return (col && col.sortable) || this.sortable;
      };
    },
    hasTableHeader() {
      return this.title || this.isHelper;
    },

    hasExpandables() {
      return this.registeredRows.some(item => item.expandable);
    },
    hasOverflowMenu() {
      return this.overflowMenu === true || (this.overflowMenu && this.overflowMenu.length > 0);
    },
    tableStyle() {
      return this.autoWidth ? { width: 'initial' } : { width: '100%' };
    },
    internalPagination() {
      if (typeof this.pagination === 'object') {
        return this.pagination;
      } else {
        if (this.pagination === true) {
          return {};
        }
      }
      return false;
    },
    internalNumberOfItems() {
      if (this.internalPagination.numberOfItems !== undefined) {
        return this.internalPagination.numberOfItems;
      } else {
        return this.registeredRows.length;
      }
    },
    modifierClasses() {
      const prefix = 'bx--data-table--';
      const sizeClass = this.rowSize.length === 0 || this.rowSize === 'standard' ? '' : `${prefix}${this.rowSize} `;
      const zebraClass = this.zebra ? `${prefix}zebra ` : '';
      const borderlessClass = this.borderless ? `${prefix}no-border ` : '';
      const skeletonClass = this.skeleton ? `bx--skeleton ` : '';
      const sortableClass = this.isSortable ? `${prefix}sort ` : '';
      return `${sizeClass}${zebraClass}${borderlessClass}${skeletonClass}${sortableClass}`.trim();
    },
    headingStyle() {
      return index => this.dataColumns[index].headingStyle;
    },
    dataStyle() {
      return index => this.dataColumns[index].dataStyle;
    },
    selectedRows() {
      return this.dataRowsSelected;
    },
  },
  methods: {
    checkSlots() {
      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate
      this.hasBatchActions = !!this.$slots['batch-actions'];
      this.hasActions = !!this.$slots.actions;
      this.hasToolbar = !!(this.$slots.actions || this.$listeners.search || this.$slots['batch-actions']);
      this.isHelper = !!(this.$slots['helper-text'] || (this.helperText && this.helperText.length));
    },
    onCvMount(row) {
      this.registeredRows.push(row);
      if (this.registeredRows.filter(item => item.uid === row.uid).length > 1) {
        console.error(
          `CvDataTable: Duplicate ID specified for CvDataTableRow, this may cause issues. {id: ${row.id}, value: ${row.value}}`
        );
      }
      row.$on('cv:expanded-change', this.onCvExpandedChange);
      this.updateSomeExpandingRows();
    },
    onCvBeforeDestroy(row) {
      const index = this.registeredRows.findIndex(item => row.uid === item.uid);
      this.registeredRows.splice(index, 1);
      this.updateSomeExpandingRows();
    },
    checkSearchFocus(ev) {
      if (!this.$refs.searchContainer.contains(ev.relatedTarget)) {
        this.searchActive = false;
      }
    },
    checkSearchExpand(force) {
      if (typeof force === 'boolean') {
        this.searchActive = force;
      } else {
        this.searchActive = !this.searchActive;
      }
      if (this.searchActive) {
        this.$nextTick(() => {
          this.$refs.search.focus();
        });
      } else {
        this.$nextTick(() => {
          this.$refs.magnifier.focus();
        });
      }
    },
    updateRowsSelected() {
      this.dataRowsSelected = [];
      for (const i in this.registeredRows) {
        let child = this.registeredRows[i];
        if (child.isCvDataTableRow) {
          child.isChecked = this.rowsSelected.includes(child.value);

          if (child.isChecked) {
            this.dataRowsSelected.push(child.value);
          }
        }
      }
      this.headingChecked =
        this.dataRowsSelected.length === this.registeredRows.filter(item => item.isCvDataTableRow).length;
      this.batchActive = this.dataRowsSelected.length > 0;
    },
    onClearClick() {
      this.searchValue = '';
      this.clearSearchVisible = false;
      this.$emit('search', this.searchValue);
      this.$nextTick(() => {
        this.$refs.search.focus();
      });
    },
    onHeadingCheckChange() {
      // check /uncheck all children
      this.batchActive = this.headingChecked;
      this.dataRowsSelected = [];
      for (const child of this.registeredRows) {
        if (this.headingChecked) {
          this.dataRowsSelected.push(child.value);
        }

        if (child.isChecked !== this.headingChecked) {
          child.isChecked = this.headingChecked;

          this.$emit('row-select-change', {
            value: child.value,
            selected: child.isChecked,
          });
        }
      }
      this.$emit('row-select-changes', this.dataRowsSelected);
    },
    deselect() {
      this.headingChecked = false;
      this.onHeadingCheckChange();
    },
    onRowCheckChange(value, checked) {
      let modelSet = new Set(this.dataRowsSelected);

      if (!checked) {
        modelSet.delete(value);
      } else {
        modelSet.add(value);
      }
      this.dataRowsSelected = Array.from(modelSet);
      this.headingChecked = this.dataRowsSelected.length === this.registeredRows.length;
      this.batchActive = this.dataRowsSelected.length > 0;

      this.$emit('row-select-change', { value, selected: checked });
      this.$emit('row-select-changes', this.dataRowsSelected);
    },
    onMenuItemClick(val) {
      this.$emit('overflow-menu-click', val);
    },
    watchColumns() {
      this.dataColumns = this.isSortable
        ? this.columns.map(item => ({
            ...item,
            label: item.label ? item.label : item,
            order: 'none',
            sortable: item.sortable,
          }))
        : this.columns;
    },
    onSearch() {
      this.clearSearchVisible = this.searchValue.length > 0;
      this.$emit('search', this.searchValue);
    },
    onSort(index, val) {
      for (let column of this.dataColumns) {
        column.order = 'none';
      }
      this.dataColumns[index].order = val;
      this.$emit('sort', { index, order: val });
    },
    updateSomeExpandingRows() {
      for (const child of this.registeredRows) {
        child.someExpandingRows = this.hasExpandables;
      }
    },
    toggleExpandAll() {
      this.dataExpandAll = !this.dataExpandAll;
      for (const row of this.registeredRows) {
        row.isExpanded = this.dataExpandAll;
      }
    },
    onCvExpandedChange(row) {
      if (row.isExpanded) {
        // are all rows expanded
        this.dataExpandAll = this.registeredRows.every(item => item.isExpanded);
      } else {
        this.dataExpandAll = false;
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_data_table_cv_data_tablevue_type_script_lang_js_ = (cv_data_tablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./src/components/cv-data-table/cv-data-table.vue





/* normalize component */

var cv_data_table_component = Object(componentNormalizer["a" /* default */])(
  cv_data_table_cv_data_tablevue_type_script_lang_js_,
  cv_data_tablevue_type_template_id_43ed6d0a_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_data_table = __webpack_exports__["default"] = (cv_data_table_component.exports);

/***/ }),

/***/ "e2bb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tooltip/cv-interactive-tooltip.vue?vue&type=template&id=1b2b18b5&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-interactive-tooltip"},[_c('div',{staticClass:"bx--tooltip__label",attrs:{"id":(_vm.uid + "-label")}},[_vm._t("label"),_c('button',{ref:"trigger",staticClass:"bx--tooltip__trigger",attrs:{"aria-expanded":_vm.dataVisible,"aria-labelledby":(_vm.uid + "-label"),"aria-controls":("" + _vm.uid),"aria-haspopup":"true","type":"button"},on:{"click":_vm.toggle,"keydown":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"tab",9,$event.key,"Tab")){ return null; }return _vm.onTriggerTab($event)},"focusout":_vm.checkFocusOut}},[_vm._t("trigger",[_c('Information16')])],2)],2),_c('div',{ref:"popup",staticClass:"bx--tooltip",class:{ 'bx--tooltip--shown': _vm.dataVisible },style:({ left: _vm.left + 'px', top: _vm.top + 'px' }),attrs:{"id":("" + _vm.uid),"aria-hidden":"true","data-floating-menu-direction":_vm.direction,"role":"dialog","aria-describedby":(_vm.uid + "-body"),"aria-labelledby":(_vm.uid + "-label"),"tabindex":"-1"},on:{"focusout":_vm.checkFocusOut,"mousedown":function($event){$event.preventDefault();return _vm.preventFocusOut($event)}}},[_c('div',{ref:"beforeContent",staticClass:"cv-interactive-tooltip__before-content",staticStyle:{"position":"absolute","height":"1px","width":"1px","left":"-9999px"},attrs:{"tabindex":"0"},on:{"focus":_vm.focusBeforeContent}}),_c('span',{staticClass:"bx--tooltip__caret"}),_c('div',{staticClass:"bx--tooltip__content"},[_vm._t("content")],2),_c('div',{ref:"afterContent",staticClass:"cv-interactive-tooltip__after-content",staticStyle:{"position":"absolute","height":"1px","width":"1px","left":"-9999px"},attrs:{"tabindex":"0"},on:{"focus":_vm.focusAfterContent}})])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-interactive-tooltip.vue?vue&type=template&id=1b2b18b5&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/information/16.js
var _16 = __webpack_require__("4820");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-tooltip/cv-interactive-tooltip.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_interactive_tooltipvue_type_script_lang_js_ = ({
  name: 'CvInteractiveTooltip',
  mixins: [uid_mixin["a" /* default */]],
  components: { Information16: _16["a" /* default */] },
  props: {
    direction: {
      type: String,
      default: 'top',
      validator(val) {
        const validValues = ['top', 'bottom', 'right', 'left'];
        const valid = validValues.includes(val);
        if (!valid) {
          console.warn(`CVInteractiveTooltip.direction must be one of the following: ${validValues}`);
        }
        return valid;
      },
    },
    visible: { type: Boolean, default: false },
  },
  data() {
    return {
      dataVisible: false,
      left: -9999, // offscreen
      top: 0,
    };
  },
  computed: {
    contentAfter() {
      return this.direction === 'right' || this.direction === 'bottom';
    },
  },
  watch: {
    visible() {
      if (this.visible) {
        this.show();
      } else {
        this.hide();
      }
    },
    direction() {
      if (this.visible) {
        this.position();
      }
    },
  },
  methods: {
    positionListen(on) {
      if (on) {
        window.addEventListener('scroll', this.position);
        window.addEventListener('resize', this.position);
      } else {
        window.removeEventListener('scroll', this.position);
        window.removeEventListener('resize', this.position);
      }
    },
    position() {
      const menuPosition = this.$refs.trigger.getBoundingClientRect();
      const pixelsScrolledX = window.scrollX || window.pageXOffset;
      const pixelsScrolledY = window.scrollY || window.pageYOffset;

      if (this.direction === 'top' || this.direction === 'bottom') {
        this.left =
          menuPosition.left +
          0.5 +
          (this.$refs.trigger.offsetWidth - this.$refs.popup.offsetWidth) / 2 +
          pixelsScrolledX;

        if (this.direction === 'bottom') {
          this.top = menuPosition.bottom + 10 + pixelsScrolledY;
        } else {
          this.top = menuPosition.top - 15 - this.$refs.popup.offsetHeight + pixelsScrolledY;
        }
      } else {
        this.top =
          menuPosition.top +
          (this.$refs.trigger.offsetHeight - 0.5 - this.$refs.popup.offsetHeight) / 2 +
          pixelsScrolledY;
        if (this.direction === 'left') {
          this.left = menuPosition.left - 10 - this.$refs.popup.offsetWidth + pixelsScrolledX;
        } else {
          this.left = menuPosition.right + 15 + pixelsScrolledX;
        }
      }
    },
    show() {
      this.dataVisible = true;
      this.positionListen(true);

      this.$nextTick(() => {
        this.position();
        this.$refs.trigger.focus();
      });
    },
    hide() {
      this.dataVisible = false;
      this.positionListen(true);
    },
    toggle() {
      if (this.dataVisible) {
        this.hide();
      } else {
        this.show();
      }
    },
    onTriggerTab(ev) {
      if (!ev.shiftKey) {
        if (this.contentAfter) {
          // move focus before content before tab press
          this.$refs.beforeContent.focus();
        }
      } else {
        if (!this.contentAfter) {
          // move focus after content before tab press
          this.$refs.afterContent.focus();
        }
      }
    },
    checkFocusOut(ev) {
      this.dataVisible = ev.relatedTarget === this.$refs.trigger || this.$refs.popup.contains(ev.relatedTarget);
    },
    focusBeforeContent(ev) {
      if (this.contentAfter) {
        if (this.$refs.popup.contains(ev.relatedTarget)) {
          this.$refs.trigger.focus();
        }
      } else {
        this.$refs.trigger.focus();
        this.dataVisible = this.contentAfter;
      }
    },
    focusAfterContent(ev) {
      if (!this.contentAfter) {
        if (this.$refs.popup.contains(ev.relatedTarget)) {
          this.$refs.trigger.focus();
        }
      } else {
        this.$refs.trigger.focus();
        this.dataVisible = !this.contentAfter;
      }
    },
    preventFocusOut() {
      // This is here to prevent focus being lost if the user clicks on the contents of the interactive tool tip
    },
  },
  mounted() {
    // move popup out to body to ensure it appears above other elements
    this.popupEl = document.body.appendChild(this.$refs.popup);

    if (this.visible) {
      this.show();
    } else {
      this.hide();
    }
  },
  beforeDestroy() {
    this.positionListen(false);
    if (this.popupEl) {
      // move back to where it came from
      this.$el.appendChild(this.popupEl);
    }
  },
});

// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-interactive-tooltip.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_tooltip_cv_interactive_tooltipvue_type_script_lang_js_ = (cv_interactive_tooltipvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-tooltip/cv-interactive-tooltip.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_tooltip_cv_interactive_tooltipvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_interactive_tooltip = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "e44b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-overflow-menu/cv-overflow-menu.vue?vue&type=template&id=108d00ff&
var cv_overflow_menuvue_type_template_id_108d00ff_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-overflow-menu bx--overflow-menu",attrs:{"data-overflow-menu":""}},[_c('button',{ref:"trigger",staticClass:"bx--overflow-menu__trigger bx--tooltip__trigger bx--tooltip--a11y",class:[_vm.tipClasses, { 'bx--overflow-menu--open': _vm.open }],attrs:{"aria-haspopup":"","type":"button","aria-expanded":_vm.open,"aria-controls":(_vm.uid + "-menu"),"id":(_vm.uid + "-trigger")},on:{"click":_vm.doToggle,"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.doToggle($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"tab",9,$event.key,"Tab")){ return null; }return _vm.onOverflowMenuTab($event)}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.doToggle($event)}}},[_c('span',{staticClass:"bx--assistive-text"},[_vm._v(_vm._s(_vm.label))]),_vm._t("trigger",[_c('OverflowMenuVertical16',{staticClass:"bx--overflow-menu__icon"})])],2),_c('div',{ref:"popup",staticClass:"bx--overflow-menu-options",class:{
      'bx--overflow-menu--flip': _vm.flipMenu,
      'bx--overflow-menu-options--open': _vm.open,
    },style:({ left: _vm.left + 'px', top: _vm.top + 'px' }),attrs:{"tabindex":"-1","aria-labelledby":(_vm.uid + "-trigger"),"id":(_vm.uid + "-menu")},on:{"focusout":_vm.checkFocusOut,"mousedown":function($event){$event.preventDefault();return _vm.preventFocusOut($event)}}},[_c('div',{ref:"beforeContent",staticClass:"cv-overflow-menu__before-content",staticStyle:{"position":"absolute","height":"1px","width":"1px","left":"-9999px"},attrs:{"tabindex":"0"},on:{"focus":_vm.focusBeforeContent}}),_c('ul',{staticClass:"bx--overflow-menu-options__content"},[_vm._t("default")],2),_c('div',{ref:"afterContent",staticClass:"cv-overflow-menu__after-content",staticStyle:{"position":"absolute","height":"1px","width":"1px","left":"-9999px"},attrs:{"tabindex":"0"},on:{"focus":_vm.focusAfterContent}})])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu.vue?vue&type=template&id=108d00ff&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/_rollupPluginBabelHelpers-8169a350.js
var _rollupPluginBabelHelpers_8169a350 = __webpack_require__("604d");

// EXTERNAL MODULE: ./node_modules/@carbon/icon-helpers/es/index.js
var es = __webpack_require__("3bda");

// CONCATENATED MODULE: ./node_modules/@carbon/icons-vue/es/overflow-menu--vertical/16.js



var virtual_OverflowMenuVertical16 = {
  name: 'OverflowMenuVertical16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(es["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350["b" /* a */])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350["a" /* _ */])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('circle', {
      attrs: {
        "cx": "16",
        "cy": "8",
        "r": "2"
      }
    }), createElement('circle', {
      attrs: {
        "cx": "16",
        "cy": "16",
        "r": "2"
      }
    }), createElement('circle', {
      attrs: {
        "cx": "16",
        "cy": "24",
        "r": "2"
      }
    }), children]);
  }
};

/* harmony default export */ var _16 = (virtual_OverflowMenuVertical16);

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-overflow-menu/cv-overflow-menu.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_overflow_menuvue_type_script_lang_js_ = ({
  name: 'CvOverflowMenu',
  components: { OverflowMenuVertical16: _16 },
  mixins: [uid_mixin["a" /* default */]],
  props: {
    label: String,
    flipMenu: Boolean,
    up: Boolean,
    offset: {
      type: Object,
      validator(value) {
        return value.hasOwnProperty('left') && value.hasOwnProperty('top');
      },
    },
    tipPosition: {
      type: String,
      default: 'right',
      validator: val => ['top', 'left', 'bottom', 'right'.includes(val)],
    },
    tipAlignment: { type: String, default: 'center', validator: val => ['start', 'center', 'end'].includes(val) },
  },
  watch: {
    flipMenu(val) {
      this.flipMenu = val;
    },
  },
  data() {
    return {
      open: false,
      left: -9999, // offscreen,
      top: 0,
    };
  },
  computed: {
    offsetLeft() {
      return this.offset ? this.offset.left : 0;
    },
    offsetTop() {
      return this.offset ? this.offset.top : 0;
    },
    tipClasses() {
      const tipPosition = this.tipPosition || 'right';
      const tipAlignment = this.tipAlignment || 'center';
      if (this.label) {
        return `bx--tooltip__trigger bx--tooltip--a11y bx--tooltip--${tipPosition} bx--tooltip--align-${tipAlignment}`;
      } else {
        return '';
      }
    },
  },
  created() {
    this.$on('cv:close', this.doClose);
    this.$on('cv:click', this.menuItemclick);
  },
  methods: {
    checkFocusOut(ev) {
      if (this.open) {
        if (
          ev.relatedTarget === null ||
          !(this.$refs.trigger === ev.relatedTarget || this.$refs.popup.contains(ev.relatedTarget))
        ) {
          this.open = false;
          this.positionListen(false);

          // DO NOT FOCUS if relatedTarget is not null, as focus is going somewhere
          if (!ev.relatedTarget) {
            this.$nextTick(() => {
              this.doFocus();
            });
          }
        }
      }
    },
    menuItemclick() {
      this.open = false;
      this.positionListen(false);
      this.$nextTick(() => {
        this.doFocus();
      });
    },
    doClose() {
      this.open = false;
      this.positionListen(false);
    },
    positionListen(on) {
      if (on) {
        window.addEventListener('scroll', this.positionMenu);
        window.addEventListener('resize', this.positionMenu);
      } else {
        window.removeEventListener('scroll', this.positionMenu);
        window.removeEventListener('resize', this.positionMenu);
      }
    },
    async positionMenu() {
      if (this.open) {
        const menuPosition = this.$el.getBoundingClientRect();
        return this.$nextTick(() => {
          const pixelsScrolledX = window.scrollX || window.pageXOffset;
          const pixelsScrolledY = window.scrollY || window.pageYOffset;
          if (this.flipMenu) {
            this.left =
              menuPosition.left +
              this.offsetLeft -
              this.$refs.popup.offsetWidth +
              this.$el.offsetWidth +
              pixelsScrolledX;
          } else {
            this.left = menuPosition.left + this.offsetLeft + pixelsScrolledX;
          }
          if (this.up) {
            this.top = menuPosition.top + this.offsetTop - this.$refs.popup.offsetHeight + pixelsScrolledY;
          } else {
            this.top = menuPosition.bottom + this.offsetTop + pixelsScrolledY;
          }
        });
      }
    },
    doFocus() {
      let focusOn;
      if (this.open) {
        // set focus somewhere sensible, first focusable item or leave on over flow
        let focusOnList = this.$refs.popup.querySelectorAll(
          '.bx--overflow-menu-options__btn, button, link, input, textarea, [contentEditable="true"], [tabindex]'
        );
        for (let tryOn of focusOnList) {
          if (
            // don't focus on before after or something that can't be tabbed to
            !(
              tryOn.classList.contains('cv-overflow-menu__before-content') ||
              tryOn.classList.contains('cv-overflow-menu__after-content') ||
              tryOn.tabindex < 0
            )
          ) {
            focusOn = tryOn;
            break;
          }
        }
        if (!focusOn) {
          focusOn = this.$el;
        }
      } else {
        focusOn = this.$el;
      }
      focusOn.focus();
    },
    async doToggle() {
      this.open = !this.open;

      // await positionMenu otherwise it can race doFocus.
      // On initial open the menu is positioned 0,0 causing a jump
      await this.positionMenu();
      this.positionListen(this.open);
      this.$nextTick(() => {
        this.doFocus();
      });
    },
    onOverflowMenuTab(ev) {
      if (!ev.shiftKey) {
        // move focus before content before tab press
        this.$refs.beforeContent.focus();
      }
    },
    focusBeforeContent(ev) {
      if (this.$refs.popup.contains(ev.relatedTarget)) {
        this.$refs.trigger.focus();
        this.open = false;
      }
    },
    focusAfterContent() {
      this.$refs.trigger.focus();
      this.open = false;
    },
    preventFocusOut() {
      // This is here to prevent focus being lost if the user clicks on the contents of the interactive tool tip
    },
  },
  mounted() {
    // Check for los of focus
    this.$el.addEventListener('focusout', this.checkFocusOut);

    // move popup out to body to ensure it appears above other elements
    this.popupEl = document.body.appendChild(this.$refs.popup);
  },
  beforeDestroy() {
    this.positionListen(false);
    if (this.popupEl) {
      // move back to where it came from
      this.$el.appendChild(this.popupEl);
    }
  },
});

// CONCATENATED MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_overflow_menu_cv_overflow_menuvue_type_script_lang_js_ = (cv_overflow_menuvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_overflow_menu_cv_overflow_menuvue_type_script_lang_js_,
  cv_overflow_menuvue_type_template_id_108d00ff_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_overflow_menu = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "e4ef":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-select/cv-select-optgroup.vue?vue&type=template&id=5db4191c&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('optgroup',{staticClass:"cv-select-optgroup bx--select-optgroup"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-select/cv-select-optgroup.vue?vue&type=template&id=5db4191c&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-select/cv-select-optgroup.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_select_optgroupvue_type_script_lang_js_ = ({
  name: 'CvSelectOptgroup',
  // html props: label
});

// CONCATENATED MODULE: ./src/components/cv-select/cv-select-optgroup.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_select_cv_select_optgroupvue_type_script_lang_js_ = (cv_select_optgroupvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-select/cv-select-optgroup.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_select_cv_select_optgroupvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_select_optgroup = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "e834":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (false) {}

module.exports = warning;


/***/ }),

/***/ "eade":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-checkbox/cv-checkbox.vue?vue&type=template&id=05b99d36&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-checkbox bx--checkbox-wrapper",class:{ 'bx--form-item': _vm.formItem }},[_c('input',_vm._g(_vm._b({ref:"input",staticClass:"bx--checkbox",attrs:{"type":"checkbox","aria-checked":("" + _vm.isChecked),"id":_vm.uid},domProps:{"checked":_vm.isChecked === true,"value":_vm.value},on:{"focus":_vm.onFocus,"blur":_vm.onBlur}},'input',_vm.$attrs,false),_vm.inputListeners)),_c('label',{class:[
      'bx--checkbox-label',
      {
        'bx--label--disabled': _vm.$attrs.disabled !== undefined && _vm.$attrs.disabled,
        'bx--checkbox-label__focus': _vm.hasFocus,
      } ],attrs:{"data-contained-checkbox-state":_vm.isChecked,"data-contained-checkbox-disabled":_vm.$attrs.disabled,"for":_vm.uid}},[_c('span',{staticClass:"bx--checkbox-label-text",class:{ 'bx--visually-hidden': _vm.hideLabel }},[_vm._v("\n      "+_vm._s(_vm.label)+"\n    ")])])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-checkbox/cv-checkbox.vue?vue&type=template&id=05b99d36&

// EXTERNAL MODULE: ./src/mixins/check-mixin.js
var check_mixin = __webpack_require__("4835");

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-checkbox/cv-checkbox.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_checkboxvue_type_script_lang_js_ = ({
  name: 'CvCheckbox',
  mixins: [check_mixin["a" /* default */], uid_mixin["a" /* default */]],
  inheritAttrs: false,
  props: {
    hideLabel: Boolean,
    label: String,
    mixed: Boolean,
    formItem: { type: Boolean, default: true },
  },
  watch: {
    mixed() {
      this.dataMixed = this.mixed;
      if (this.dataMixed && this.checked !== true) {
        this.isChecked = false; // reset check state so mixed takes
      }
    },
  },
  data() {
    return {
      hasFocus: false,
      dataMixed: this.mixed,
    };
  },
  methods: {
    onFocus() {
      this.hasFocus = true;
    },
    onBlur() {
      this.hasFocus = false;
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-checkbox/cv-checkbox.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_checkbox_cv_checkboxvue_type_script_lang_js_ = (cv_checkboxvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-checkbox/cv-checkbox.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_checkbox_cv_checkboxvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_checkbox = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "eb1f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var carbon_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("4020");


/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    icon: {
      type: [String, Object],
      default: undefined,
      validator(val) {
        if (!val || typeof val === 'string') {
          return true;
        }
        return val.render !== null;
      },
    },
    iconHref: {
      type: String,
      default: undefined,
      validator(val) {
        if (val !== undefined && "production" === 'development') {
          console.warn('CvButton: iconHref deprecated in favour of icon to be removed in future versions.');
        }
        return true;
      },
    },
    kind: {
      type: String,
      default: 'primary',
      validator: val => ['primary', 'secondary', 'tertiary', 'ghost', 'danger', 'danger--primary'].includes(val),
    },
    small: {
      type: Boolean,
      default: undefined,
      validator(val) {
        if (val !== undefined && "production" === 'development') {
          console.warn('CvButton: small deprecated in favour of size.');
        }
        return true;
      },
    },
    size: { type: String, default: undefined, validator: val => ['', 'field', 'small'].includes(val) },
  },
  computed: {
    // Bind listeners at the component level to the embedded input element and
    // add our own input listener to service the v-model. See:
    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model
    inputListeners() {
      return Object.assign({}, this.$listeners, {
        click: event => this.$emit('click', event),
      });
    },
    buttonClassOpts() {
      return (opts = {}) => {
        let classes = [`${carbon_components__WEBPACK_IMPORTED_MODULE_0__[/* settings */ "a"].prefix}--btn`];

        if (opts.skeleton) {
          classes.push(`${carbon_components__WEBPACK_IMPORTED_MODULE_0__[/* settings */ "a"].prefix}--skeleton`);
        }

        if (opts.iconOnly) {
          classes.push(`${carbon_components__WEBPACK_IMPORTED_MODULE_0__[/* settings */ "a"].prefix}--btn--icon-only`);
        }

        if (this.kind && !opts.skeleton) {
          classes.push(`${carbon_components__WEBPACK_IMPORTED_MODULE_0__[/* settings */ "a"].prefix}--btn--${this.kind.toLowerCase()}`);
        }

        if (this.size === 'small' || (this.size === undefined && this.small)) {
          classes.push(`${carbon_components__WEBPACK_IMPORTED_MODULE_0__[/* settings */ "a"].prefix}--btn--sm`);
        }
        if (this.size === 'field') {
          classes.push(`${carbon_components__WEBPACK_IMPORTED_MODULE_0__[/* settings */ "a"].prefix}--btn--field`);
        }

        return classes.join(' ');
      };
    },
  },
});


/***/ }),

/***/ "eb70":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-menu-item.vue?vue&type=template&id=18f6259b&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-header-menu-item",attrs:{"role":_vm.role}},[_c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"bx--header__menu-item",class:{ 'bx--header__menu-item--current': _vm.activePage },attrs:{"role":"menuitem","aria-current":_vm.ariaCurrent}},'component',Object.assign({}, _vm.$attrs, _vm.linkProps),false),_vm.$listeners),[_c('span',{staticClass:"bx--text-truncate--end"},[_vm._t("default")],2)])],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu-item.vue?vue&type=template&id=18f6259b&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-menu-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_header_menu_itemvue_type_script_lang_js_ = ({
  name: 'CvHeaderMenuItem',
  mixins: [link_mixin["a" /* default */]],
  inheritAttrs: false,
  props: {
    active: Boolean,
    ariaCurrent: String,
    role: String,
  },
  computed: {
    activePage() {
      return this.active && this.ariaCurrent !== 'page';
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_menu_itemvue_type_script_lang_js_ = (cv_header_menu_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_menu_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_menu_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "ecb9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-content.vue?vue&type=template&id=254c9682&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,{tag:"component",staticClass:"bx--content"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-content.vue?vue&type=template&id=254c9682&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-content.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var cv_contentvue_type_script_lang_js_ = ({
  name: 'CvContent',
  props: {
    tagType: { type: String, default: 'main' },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-content.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_contentvue_type_script_lang_js_ = (cv_contentvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-content.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_contentvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_content = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "eed0":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-menu.vue?vue&type=template&id=662b6a45&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-header-menu bx--header__submenu",on:{"mouseenter":function($event){return _vm.doHoverToggle(true)},"mouseleave":function($event){return _vm.doHoverToggle(false)}}},[_c('a',{staticClass:"bx--header__menu-item bx--header__menu-title",attrs:{"aria-haspopup":"true","aria-expanded":_vm.expanded ? 'true' : 'false',"href":"javascript:void(0)","role":"menuitem","tabindex":"0","aria-label":_vm.$attrs.ariaLabel},on:{"click":_vm.doToggle,"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }$event.preventDefault();return _vm.doToggle($event)}],"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"space",32,$event.key,[" ","Spacebar"])){ return null; }$event.preventDefault();return _vm.doToggle($event)},"focusout":_vm.onFocusout}},[_vm._v("\n    "+_vm._s(_vm.title)+"\n    "),_c('chevron-down-glyph',{staticClass:"bx--header__menu-arrow",attrs:{"aria-label":_vm.$attrs.ariaLabel}})],1),_c('ul',{ref:"menu",staticClass:"bx--header__menu",attrs:{"aria-label":_vm.$attrs.ariaLabel,"aria-labelledby":_vm.$attrs.ariaLabelledBy,"role":"menu"},on:{"focusout":_vm.onFocusout}},[_vm._t("default")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu.vue?vue&type=template&id=662b6a45&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--down/index.js
var chevron_down = __webpack_require__("fa89");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-menu.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_header_menuvue_type_script_lang_js_ = ({
  name: 'CvHeaderMenu',
  components: { ChevronDownGlyph: chevron_down["a" /* default */] },
  props: {
    title: String,
    hoverToggle: { type: Boolean, default: true },
  },
  data() {
    return {
      expanded: false,
    };
  },
  methods: {
    doHoverToggle(force) {
      if (this.hoverToggle) {
        this.doToggle(force);
      }
    },
    doToggle(force) {
      if (typeof force === 'boolean') {
        this.expanded = force;
      } else {
        this.expanded = !this.expanded;
      }
    },
    onFocusout(ev) {
      if (!(this.$el.contains(ev.relatedTarget) || this.$refs.menu.contains(ev.relatedTarget))) {
        this.expanded = false;
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_menuvue_type_script_lang_js_ = (cv_header_menuvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-menu.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_menuvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_menu = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "f0a6":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-icon-button.vue?vue&type=template&id=f2b6961a&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('button',_vm._g({staticClass:"cv-button",class:_vm.buttonClasses,attrs:{"type":"button"}},_vm.inputListeners),[_c('span',{class:(_vm.carbonPrefix + "--assistive-text")},[_vm._v(_vm._s(_vm.label))]),(typeof _vm.icon === 'object')?_c(_vm.icon,{tag:"component",staticClass:"bx--temp-fix",class:(_vm.carbonPrefix + "--btn__icon")}):_vm._e(),(typeof _vm.icon === 'string' || _vm.iconHref)?_c('svg',{class:(_vm.carbonPrefix + "--btn__icon")},[_c('use',{attrs:{"href":_vm.icon || _vm.iconHref}})]):_vm._e()],1)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-button/cv-icon-button.vue?vue&type=template&id=f2b6961a&

// EXTERNAL MODULE: ./src/components/cv-button/button-mixin.js
var button_mixin = __webpack_require__("eb1f");

// EXTERNAL MODULE: ./src/mixins/carbon-prefix-mixin.js
var carbon_prefix_mixin = __webpack_require__("099b");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-button/cv-icon-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_icon_buttonvue_type_script_lang_js_ = ({
  name: 'CvIconButton',
  mixins: [button_mixin["a" /* default */], carbon_prefix_mixin["a" /* default */]],
  props: {
    label: { type: String, default: undefined },
    tipPosition: {
      type: String,
      default: 'bottom',
      validator: val => ['top', 'left', 'bottom', 'right'.includes(val)],
    },
    tipAlignment: { type: String, default: 'center', validator: val => ['start', 'center', 'end'].includes(val) },
  },
  computed: {
    buttonClasses() {
      return `${this.buttonClassOpts({ iconOnly: true })}${this.tipClasses}`;
    },
    tipClasses() {
      const tipPosition = this.tipPosition || 'bottom';
      const tipAlignment = this.tipAlignment || 'center';
      if (this.label) {
        return ` ${this.carbonPrefix}--tooltip__trigger ${this.carbonPrefix}--tooltip--a11y ${this.carbonPrefix}--tooltip--${tipPosition} ${this.carbonPrefix}--tooltip--align-${tipAlignment}`;
      } else {
        return '';
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-button/cv-icon-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_button_cv_icon_buttonvue_type_script_lang_js_ = (cv_icon_buttonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-button/cv-icon-button.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_button_cv_icon_buttonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_icon_button = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "f154":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toggle/cv-toggle.vue?vue&type=template&id=707c2968&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:{ 'bx--form-item': _vm.formItem }},[_c('input',_vm._g(_vm._b({staticClass:"bx--toggle-input",class:{ 'bx--toggle-input--small': _vm.small },attrs:{"type":"checkbox","id":_vm.uid,"aria-checked":("" + _vm.isChecked)},domProps:{"checked":_vm.isChecked === true,"value":_vm.value}},'input',_vm.$attrs,false),_vm.inputListeners)),_c('label',{staticClass:"bx--toggle-input__label",attrs:{"for":_vm.uid,"aria-label":_vm.hiddenLabel}},[_vm._v("\n    "+_vm._s(_vm.visibleLabel)+"\n    "),_c('span',{staticClass:"bx--toggle__switch"},[_c('svg',{staticClass:"bx--toggle__check",attrs:{"width":"6px","height":"5px","viewBox":"0 0 6 5"}},[_c('path',{attrs:{"d":"M2.2 2.7L5 0 6 1 2.2 5 0 2.7 1 1.5z"}})]),_c('span',{staticClass:"bx--toggle__text--off",attrs:{"aria-hidden":"true"}},[_vm._t("text-left",[_vm._v("Off")])],2),_c('span',{staticClass:"bx--toggle__text--on",attrs:{"aria-hidden":"true"}},[_vm._t("text-right",[_vm._v("On")])],2)])])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-toggle/cv-toggle.vue?vue&type=template&id=707c2968&

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// EXTERNAL MODULE: ./src/mixins/check-mixin.js
var check_mixin = __webpack_require__("4835");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-toggle/cv-toggle.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_togglevue_type_script_lang_js_ = ({
  name: 'CvToggle',
  mixins: [uid_mixin["a" /* default */], check_mixin["a" /* default */]],
  inheritAttrs: false,
  props: {
    small: Boolean,
    label: String,
    formItem: { type: Boolean, default: true },
    hideLabel: Boolean,
  },
  computed: {
    hiddenLabel() {
      return this.hideLabel ? this.label : undefined;
    },
    visibleLabel() {
      return this.hideLabel ? undefined : this.label;
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-toggle/cv-toggle.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_toggle_cv_togglevue_type_script_lang_js_ = (cv_togglevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-toggle/cv-toggle.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_toggle_cv_togglevue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_toggle = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "f1de":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-name.vue?vue&type=template&id=5f6b4e90&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tagType,_vm._g(_vm._b({tag:"component",staticClass:"cv-header-name bx--header__name"},'component',_vm.linkProps,false),_vm.$listeners),[(_vm.prefix)?_c('span',{staticClass:"bx--header__name--prefix"},[_vm._v(_vm._s(_vm.prefix)+" ")]):_vm._e(),_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-name.vue?vue&type=template&id=5f6b4e90&

// EXTERNAL MODULE: ./src/mixins/link-mixin.js
var link_mixin = __webpack_require__("c5a1");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/cv-header-name.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//



/* harmony default export */ var cv_header_namevue_type_script_lang_js_ = ({
  name: 'CvHeaderName',
  mixins: [link_mixin["a" /* default */]],
  props: {
    prefix: String,
  },
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-name.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_header_namevue_type_script_lang_js_ = (cv_header_namevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/cv-header-name.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_header_namevue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_header_name = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "f47d":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_WarningFilled16 = {
  name: 'WarningFilled16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M8,1C4.2,1,1,4.2,1,8s3.2,7,7,7s7-3.1,7-7S11.9,1,8,1z M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2\tc-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8\tc0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z",
        "data-icon-path": "inner-path",
        "opacity": "0"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_WarningFilled16);


/***/ }),

/***/ "f516":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/_cv-side-nav-link-text.vue?vue&type=template&id=bdeeeff0&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"bx--side-nav__link-text"},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-ui-shell/_cv-side-nav-link-text.vue?vue&type=template&id=bdeeeff0&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-ui-shell/_cv-side-nav-link-text.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var _cv_side_nav_link_textvue_type_script_lang_js_ = ({
  name: 'CvSideNavLinkText',
});

// CONCATENATED MODULE: ./src/components/cv-ui-shell/_cv-side-nav-link-text.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_ui_shell_cv_side_nav_link_textvue_type_script_lang_js_ = (_cv_side_nav_link_textvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/_cv-side-nav-link-text.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_ui_shell_cv_side_nav_link_textvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var _cv_side_nav_link_text = __webpack_exports__["a"] = (component.exports);

/***/ }),

/***/ "f6fd":
/***/ (function(module, exports) {

// document.currentScript polyfill by Adam Miller

// MIT license

(function(document){
  var currentScript = "currentScript",
      scripts = document.getElementsByTagName('script'); // Live NodeList collection

  // If browser needs currentScript polyfill, add get currentScript() to the document object
  if (!(currentScript in document)) {
    Object.defineProperty(document, currentScript, {
      get: function(){

        // IE 6-10 supports script readyState
        // IE 10+ support stack trace
        try { throw new Error(); }
        catch (err) {

          // Find the second match for the "at" string to get file src url from stack.
          // Specifically works with the format of stack traces in IE.
          var i, res = ((/.*at [^\(]*\((.*):.+:.+\)$/ig).exec(err.stack) || [false])[1];

          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag
          for(i in scripts){
            if(scripts[i].src == res || scripts[i].readyState == "interactive"){
              return scripts[i];
            }
          }

          // If no match, return null
          return null;
        }
      }
    });
  }
})(document);


/***/ }),

/***/ "f7fe":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return root.Date.now();
};

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = toNumber(wait) || 0;
  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;

    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = debounce;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "f976":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/cv-accordion-item.vue?vue&type=template&id=1e039414&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:"cv-accordion-item bx--accordion__item",class:{ 'bx--accordion__item--active': _vm.dataOpen },attrs:{"data-accordion-item":""}},[_c('button',{staticClass:"bx--accordion__heading",attrs:{"type":"button","aria-expanded":("" + _vm.dataOpen),"aria-controls":_vm.uid},on:{"click":_vm.toggle}},[_c('ChevronRight16',{staticClass:"bx--accordion__arrow"}),_c('p',{staticClass:"bx--accordion__title"},[_vm._t("title")],2)],1),_c('div',{staticClass:"bx--accordion__content",attrs:{"id":_vm.uid}},[_vm._t("content")],2)])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion-item.vue?vue&type=template&id=1e039414&

// EXTERNAL MODULE: ./node_modules/@carbon/icons-vue/es/chevron--right/16.js
var _16 = __webpack_require__("7c7c");

// EXTERNAL MODULE: ./src/mixins/uid-mixin.js
var uid_mixin = __webpack_require__("fceb");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-accordion/cv-accordion-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var cv_accordion_itemvue_type_script_lang_js_ = ({
  name: 'CvAccordionItem',
  mixins: [uid_mixin["a" /* default */]],
  components: { ChevronRight16: _16["a" /* default */] },
  props: {
    open: { type: Boolean, default: false },
  },
  watch: {
    open: {
      immediate: true,
      handler(value) {
        this.dataOpen = value;
      },
    },
  },
  data() {
    return {
      dataOpen: false,
    };
  },
  mounted() {
    this.$_CvAccordionItem = true; // for use by parent with $children
  },
  methods: {
    toggle(force) {
      const newValue = typeof force === 'boolean' ? !!force : !this.dataOpen;
      const change = this.dataOpen !== undefined && newValue !== this.dataOpen;

      this.dataOpen = newValue;
      if (change) {
        this.$parent.$emit('cv:change', this);
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_accordion_cv_accordion_itemvue_type_script_lang_js_ = (cv_accordion_itemvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-accordion/cv-accordion-item.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_accordion_cv_accordion_itemvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_accordion_item = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "fa89":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("604d");
/* harmony import */ var _carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("3bda");



var virtual_ChevronDownGlyph = {
  name: 'ChevronDownGlyph',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = Object(_carbon_icon_helpers__WEBPACK_IMPORTED_MODULE_1__["getAttributes"])(Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      width: '10',
      height: '6',
      viewBox: '0 0 10 6',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ "b"])({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = Object(_rollupPluginBabelHelpers_8169a350_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ "a"])({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "5,6 0,1 0.7,0.3 5,4.6 9.3,0.3 10,1"
      }
    }), children]);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (virtual_ChevronDownGlyph);


/***/ }),

/***/ "fb07":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-content-switcher/cv-content-switcher.vue?vue&type=template&id=db2b8758&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-content-switcher bx--content-switcher",attrs:{"data-content-switcher":"","role":"tablist"}},[_vm._t("default")],2)}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher.vue?vue&type=template&id=db2b8758&

// EXTERNAL MODULE: ./src/components/cv-content-switcher/cv-content-switcher-store.js
var cv_content_switcher_store = __webpack_require__("567b");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-content-switcher/cv-content-switcher.vue?vue&type=script&lang=js&
//
//
//
//
//
//



const toggleContent = (selector, on) => {
  // hide content
  const content = document.querySelectorAll(selector);
  for (const element of content) {
    // element.style.visibility = on;
    if (!on) {
      element.setAttribute('hidden', 'hidden');
    } else {
      element.removeAttribute('hidden');
    }
    element.setAttribute('aria-hidden', `${!on}`);
  }
};

/* harmony default export */ var cv_content_switchervue_type_script_lang_js_ = ({
  name: 'CvContentSwitcher',
  created() {
    // add these on created otherwise cv:mounted is too late.
    this.$on('cv:open', srcComponent => this.onCvOpen(srcComponent));
    this.$on('cv:mounted', srcComponent => this.onCvMount(srcComponent));
    this.$on('cv:beforeDestroy', srcComponent => this.onCvBeforeDestroy(srcComponent));
  },
  data() {
    return {
      store: cv_content_switcher_store["a" /* default */],
    };
  },
  methods: {
    switcherButtons() {
      return this.$children.filter(item => item.$_CvContentSwitcherButton);
    },
    onCvMount(srcComponent) {
      this.processState(srcComponent, srcComponent.isSelected);
    },
    onCvBeforeDestroy(srcComponent) {
      let nextOpen;
      if (srcComponent.isSelected) {
        const switcherButtons = this.switcherButtons();

        for (let index in switcherButtons) {
          if (
            switcherButtons[index].$_CvContentSwitcherButton &&
            switcherButtons[index].buttonId !== srcComponent.buttonId
          ) {
            nextOpen = switcherButtons[index];
            break;
          }
        }
      }
      // unhide content for destroyed srcComponent
      if (srcComponent.ownerId) {
        this.store.remove(srcComponent.ownerId);
      } else {
        toggleContent(srcComponent.contentSelector, true);
      }
      if (nextOpen) {
        setTimeout(() => {
          nextOpen.open();
        }, 1);
      }
    },
    processState(srcComponent, state) {
      const innerProcessState = (component, newState) => {
        if (component.ownerId) {
          this.store.setState(component.ownerId, newState);
        } else {
          toggleContent(component.contentSelector, newState);
        }
      };
      innerProcessState(srcComponent, state);

      if (state) {
        // if opening one button close others
        const switcherButtons = this.switcherButtons();
        for (let index in switcherButtons) {
          if (switcherButtons[index].buttonId !== srcComponent.buttonId) {
            switcherButtons[index].close();
            innerProcessState(switcherButtons[index], false);
          }
        }
      }
    },
    onCvOpen(srcComponent) {
      this.$emit('selected', srcComponent.ownerId ? srcComponent.ownerId : srcComponent.contentSelector);
      this.processState(srcComponent, true);
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_content_switcher_cv_content_switchervue_type_script_lang_js_ = (cv_content_switchervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-content-switcher/cv-content-switcher.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_content_switcher_cv_content_switchervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_content_switcher = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "fb12":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-number-input/cv-number-input-skeleton.vue?vue&type=template&id=e58f0c32&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"cv-number-input bx--form-item"},[_c('label',{staticClass:"bx--label bx--skeleton"}),_c('div',{staticClass:"bx--number bx--skeleton"})])}]


// CONCATENATED MODULE: ./src/components/cv-number-input/cv-number-input-skeleton.vue?vue&type=template&id=e58f0c32&

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-number-input/cv-number-input-skeleton.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//

/* harmony default export */ var cv_number_input_skeletonvue_type_script_lang_js_ = ({
  name: 'CvNumberInputSkeleton',
});

// CONCATENATED MODULE: ./src/components/cv-number-input/cv-number-input-skeleton.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_number_input_cv_number_input_skeletonvue_type_script_lang_js_ = (cv_number_input_skeletonvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-number-input/cv-number-input-skeleton.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_number_input_cv_number_input_skeletonvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_number_input_skeleton = __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "CvAccordion", function() { return /* reexport */ cv_accordion["default"]; });
__webpack_require__.d(__webpack_exports__, "CvAccordionItem", function() { return /* reexport */ cv_accordion_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvAccordionSkeleton", function() { return /* reexport */ cv_accordion_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvBreadcrumb", function() { return /* reexport */ cv_breadcrumb["default"]; });
__webpack_require__.d(__webpack_exports__, "CvBreadcrumbItem", function() { return /* reexport */ cv_breadcrumb_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvBreadcrumbSkeleton", function() { return /* reexport */ cv_breadcrumb_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvButton", function() { return /* reexport */ cv_button["default"]; });
__webpack_require__.d(__webpack_exports__, "CvIconButton", function() { return /* reexport */ cv_icon_button["default"]; });
__webpack_require__.d(__webpack_exports__, "CvButtonSkeleton", function() { return /* reexport */ cv_button_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvButtonSet", function() { return /* reexport */ cv_button_set["default"]; });
__webpack_require__.d(__webpack_exports__, "CvCheckbox", function() { return /* reexport */ cv_checkbox["default"]; });
__webpack_require__.d(__webpack_exports__, "CvCheckboxSkeleton", function() { return /* reexport */ cv_checkbox_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvCodeSnippet", function() { return /* reexport */ cv_code_snippet["default"]; });
__webpack_require__.d(__webpack_exports__, "CvCodeSnippetSkeleton", function() { return /* reexport */ cv_code_snippet_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvComboBox", function() { return /* reexport */ cv_combo_box["default"]; });
__webpack_require__.d(__webpack_exports__, "CvContentSwitcher", function() { return /* reexport */ cv_content_switcher["default"]; });
__webpack_require__.d(__webpack_exports__, "CvContentSwitcherButton", function() { return /* reexport */ cv_content_switcher_button["default"]; });
__webpack_require__.d(__webpack_exports__, "CvContentSwitcherContent", function() { return /* reexport */ cv_content_switcher_content["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDataTable", function() { return /* reexport */ cv_data_table["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDataTableRow", function() { return /* reexport */ cv_data_table_row["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDataTableCell", function() { return /* reexport */ cv_data_table_cell["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDataTableAction", function() { return /* reexport */ cv_data_table_action["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDataTableSkeleton", function() { return /* reexport */ cv_data_table_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDatePicker", function() { return /* reexport */ cv_date_picker["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDropdown", function() { return /* reexport */ cv_dropdown["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDropdownItem", function() { return /* reexport */ cv_dropdown_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDropdownSkeleton", function() { return /* reexport */ cv_dropdown_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvFileUploader", function() { return /* reexport */ cv_file_uploader["default"]; });
__webpack_require__.d(__webpack_exports__, "CvFileUploaderSkeleton", function() { return /* reexport */ cv_file_uploader_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvForm", function() { return /* reexport */ cv_form["default"]; });
__webpack_require__.d(__webpack_exports__, "CvFormItem", function() { return /* reexport */ cv_form_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvFormGroup", function() { return /* reexport */ cv_form_group["default"]; });
__webpack_require__.d(__webpack_exports__, "CvInlineLoading", function() { return /* reexport */ cv_inline_loading["default"]; });
__webpack_require__.d(__webpack_exports__, "CvInlineNotification", function() { return /* reexport */ cv_inline_notification["default"]; });
__webpack_require__.d(__webpack_exports__, "CvLink", function() { return /* reexport */ cv_link["default"]; });
__webpack_require__.d(__webpack_exports__, "CvList", function() { return /* reexport */ cv_list["default"]; });
__webpack_require__.d(__webpack_exports__, "CvListItem", function() { return /* reexport */ cv_list_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvLoading", function() { return /* reexport */ cv_loading["default"]; });
__webpack_require__.d(__webpack_exports__, "CvModal", function() { return /* reexport */ cv_modal["default"]; });
__webpack_require__.d(__webpack_exports__, "CvMultiSelect", function() { return /* reexport */ cv_multi_select["default"]; });
__webpack_require__.d(__webpack_exports__, "CvNumberInput", function() { return /* reexport */ cv_number_input["default"]; });
__webpack_require__.d(__webpack_exports__, "CvNumberInputSkeleton", function() { return /* reexport */ cv_number_input_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvOverflowMenu", function() { return /* reexport */ cv_overflow_menu["default"]; });
__webpack_require__.d(__webpack_exports__, "CvOverflowMenuItem", function() { return /* reexport */ cv_overflow_menu_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvPagination", function() { return /* reexport */ cv_pagination["default"]; });
__webpack_require__.d(__webpack_exports__, "CvProgress", function() { return /* reexport */ cv_progress["default"]; });
__webpack_require__.d(__webpack_exports__, "CvProgressStep", function() { return /* reexport */ cv_progress_step["default"]; });
__webpack_require__.d(__webpack_exports__, "CvRadioGroup", function() { return /* reexport */ cv_radio_group["default"]; });
__webpack_require__.d(__webpack_exports__, "CvRadioButton", function() { return /* reexport */ cv_radio_button["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSearch", function() { return /* reexport */ cv_search["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSelect", function() { return /* reexport */ cv_select["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSelectOption", function() { return /* reexport */ cv_select_option["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSelectOptgroup", function() { return /* reexport */ cv_select_optgroup["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSkeletonText", function() { return /* reexport */ cv_skeleton_text["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSlider", function() { return /* reexport */ cv_slider["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSliderSkeleton", function() { return /* reexport */ cv_slider_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvStructuredList", function() { return /* reexport */ cv_structured_list["default"]; });
__webpack_require__.d(__webpack_exports__, "CvStructuredListItem", function() { return /* reexport */ cv_structured_list_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvStructuredListHeading", function() { return /* reexport */ cv_structured_list_heading["default"]; });
__webpack_require__.d(__webpack_exports__, "CvStructuredListData", function() { return /* reexport */ cv_structured_list_data["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTab", function() { return /* reexport */ cv_tab["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTabs", function() { return /* reexport */ cv_tabs["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTabsSkeleton", function() { return /* reexport */ cv_tabs_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTag", function() { return /* reexport */ cv_tag["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTagSkeleton", function() { return /* reexport */ cv_tag_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTextArea", function() { return /* reexport */ cv_text_area["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTextInput", function() { return /* reexport */ cv_text_input["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTile", function() { return /* reexport */ cv_tile["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTimePicker", function() { return /* reexport */ cv_time_picker["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToastNotification", function() { return /* reexport */ cv_toast_notification["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToggle", function() { return /* reexport */ cv_toggle["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToggleSkeleton", function() { return /* reexport */ cv_toggle_skeleton["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToolbar", function() { return /* reexport */ cv_toolbar["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToolbarTitle", function() { return /* reexport */ cv_toolbar_title["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToolbarSearch", function() { return /* reexport */ cv_toolbar_search["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToolbarOption", function() { return /* reexport */ cv_toolbar_option["default"]; });
__webpack_require__.d(__webpack_exports__, "CvToolbarDivider", function() { return /* reexport */ cv_toolbar_divider["default"]; });
__webpack_require__.d(__webpack_exports__, "CvTooltip", function() { return /* reexport */ cv_tooltip["default"]; });
__webpack_require__.d(__webpack_exports__, "CvInteractiveTooltip", function() { return /* reexport */ cv_interactive_tooltip["default"]; });
__webpack_require__.d(__webpack_exports__, "CvDefinitionTooltip", function() { return /* reexport */ cv_definition_tooltip["default"]; });
__webpack_require__.d(__webpack_exports__, "CvContent", function() { return /* reexport */ cv_content["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderGlobalAction", function() { return /* reexport */ cv_header_global_action["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderMenuButton", function() { return /* reexport */ cv_header_menu_button["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderMenuItem", function() { return /* reexport */ cv_header_menu_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderMenu", function() { return /* reexport */ cv_header_menu["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderName", function() { return /* reexport */ cv_header_name["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderPanel", function() { return /* reexport */ cv_header_panel["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderNav", function() { return /* reexport */ cv_header_nav["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeaderSideNavItems", function() { return /* reexport */ cv_header_side_nav_items["default"]; });
__webpack_require__.d(__webpack_exports__, "CvHeader", function() { return /* reexport */ cv_header["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSideNav", function() { return /* reexport */ cv_side_nav["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSideNavIcon", function() { return /* reexport */ cv_side_nav_icon["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSideNavItems", function() { return /* reexport */ cv_side_nav_items["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSideNavLink", function() { return /* reexport */ cv_side_nav_link["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSideNavMenuItem", function() { return /* reexport */ cv_side_nav_menu_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSideNavMenu", function() { return /* reexport */ cv_side_nav_menu["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSkipToContent", function() { return /* reexport */ cv_skip_to_content["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSwitcherItemLink", function() { return /* reexport */ cv_switcher_item_link["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSwitcherItem", function() { return /* reexport */ cv_switcher_item["default"]; });
__webpack_require__.d(__webpack_exports__, "CvSwitcher", function() { return /* reexport */ cv_switcher["default"]; });

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  if (true) {
    __webpack_require__("f6fd")
  }

  var i
  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __webpack_require__.p = i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./src/components/cv-accordion/cv-accordion.vue + 4 modules
var cv_accordion = __webpack_require__("8667");

// EXTERNAL MODULE: ./src/components/cv-accordion/cv-accordion-item.vue + 4 modules
var cv_accordion_item = __webpack_require__("f976");

// EXTERNAL MODULE: ./src/components/cv-accordion/cv-accordion-skeleton.vue + 9 modules
var cv_accordion_skeleton = __webpack_require__("be03");

// CONCATENATED MODULE: ./src/components/cv-accordion/index.js






// EXTERNAL MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb.vue + 4 modules
var cv_breadcrumb = __webpack_require__("2b52");

// EXTERNAL MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-item.vue + 4 modules
var cv_breadcrumb_item = __webpack_require__("775a");

// EXTERNAL MODULE: ./src/components/cv-breadcrumb/cv-breadcrumb-skeleton.vue + 9 modules
var cv_breadcrumb_skeleton = __webpack_require__("5128");

// CONCATENATED MODULE: ./src/components/cv-breadcrumb/index.js






// EXTERNAL MODULE: ./src/components/cv-button/cv-button.vue + 4 modules
var cv_button = __webpack_require__("cea0");

// EXTERNAL MODULE: ./src/components/cv-button/cv-icon-button.vue + 4 modules
var cv_icon_button = __webpack_require__("f0a6");

// EXTERNAL MODULE: ./src/components/cv-button/cv-button-skeleton.vue + 4 modules
var cv_button_skeleton = __webpack_require__("6fc9");

// EXTERNAL MODULE: ./src/components/cv-button/cv-button-set.vue + 4 modules
var cv_button_set = __webpack_require__("b5e6");

// CONCATENATED MODULE: ./src/components/cv-button/index.js







// EXTERNAL MODULE: ./src/components/cv-checkbox/cv-checkbox.vue + 4 modules
var cv_checkbox = __webpack_require__("eade");

// EXTERNAL MODULE: ./src/components/cv-checkbox/cv-checkbox-skeleton.vue + 4 modules
var cv_checkbox_skeleton = __webpack_require__("90c2");

// CONCATENATED MODULE: ./src/components/cv-checkbox/index.js




// EXTERNAL MODULE: ./src/components/cv-code-snippet/cv-code-snippet.vue + 25 modules
var cv_code_snippet = __webpack_require__("dd5c");

// EXTERNAL MODULE: ./src/components/cv-code-snippet/cv-code-snippet-skeleton.vue + 4 modules
var cv_code_snippet_skeleton = __webpack_require__("2ff2");

// CONCATENATED MODULE: ./src/components/cv-code-snippet/index.js




// EXTERNAL MODULE: ./src/components/cv-combo-box/cv-combo-box.vue + 4 modules
var cv_combo_box = __webpack_require__("2b6c");

// CONCATENATED MODULE: ./src/components/cv-combo-box/index.js




// EXTERNAL MODULE: ./src/components/cv-content-switcher/cv-content-switcher.vue + 4 modules
var cv_content_switcher = __webpack_require__("fb07");

// EXTERNAL MODULE: ./src/components/cv-content-switcher/cv-content-switcher-button.vue + 4 modules
var cv_content_switcher_button = __webpack_require__("2137");

// EXTERNAL MODULE: ./src/components/cv-content-switcher/cv-content-switcher-content.vue + 4 modules
var cv_content_switcher_content = __webpack_require__("5017");

// CONCATENATED MODULE: ./src/components/cv-content-switcher/index.js





// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table-action.vue + 4 modules
var cv_data_table_action = __webpack_require__("1ee4");

// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table-cell.vue + 4 modules
var cv_data_table_cell = __webpack_require__("0647");

// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table-row.vue + 9 modules
var cv_data_table_row = __webpack_require__("0f44");

// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table.vue + 11 modules
var cv_data_table = __webpack_require__("def8");

// EXTERNAL MODULE: ./src/components/cv-data-table/cv-data-table-skeleton.vue + 4 modules
var cv_data_table_skeleton = __webpack_require__("7018");

// CONCATENATED MODULE: ./src/components/cv-data-table/index.js








// EXTERNAL MODULE: ./src/components/cv-date-picker/cv-date-picker.vue + 5 modules
var cv_date_picker = __webpack_require__("0539");

// CONCATENATED MODULE: ./src/components/cv-date-picker/index.js




// EXTERNAL MODULE: ./src/components/cv-dropdown/cv-dropdown.vue + 4 modules
var cv_dropdown = __webpack_require__("71cc");

// EXTERNAL MODULE: ./src/components/cv-dropdown/cv-dropdown-item.vue + 4 modules
var cv_dropdown_item = __webpack_require__("140e");

// EXTERNAL MODULE: ./src/components/cv-dropdown/cv-dropdown-skeleton.vue + 4 modules
var cv_dropdown_skeleton = __webpack_require__("4ce3");

// CONCATENATED MODULE: ./src/components/cv-dropdown/index.js






// EXTERNAL MODULE: ./src/components/cv-file-uploader/cv-file-uploader.vue + 4 modules
var cv_file_uploader = __webpack_require__("55e3");

// EXTERNAL MODULE: ./src/components/cv-file-uploader/cv-file-uploader-skeleton.vue + 4 modules
var cv_file_uploader_skeleton = __webpack_require__("6e60");

// CONCATENATED MODULE: ./src/components/cv-file-uploader/index.js





// EXTERNAL MODULE: ./src/components/cv-form/cv-form.vue + 4 modules
var cv_form = __webpack_require__("b5dc");

// EXTERNAL MODULE: ./src/components/cv-form/cv-form-item.vue + 4 modules
var cv_form_item = __webpack_require__("7f4d");

// EXTERNAL MODULE: ./src/components/cv-form/cv-form-group.vue + 4 modules
var cv_form_group = __webpack_require__("c822");

// CONCATENATED MODULE: ./src/components/cv-form/index.js






// EXTERNAL MODULE: ./src/components/cv-inline-loading/cv-inline-loading.vue + 4 modules
var cv_inline_loading = __webpack_require__("9318");

// EXTERNAL MODULE: ./src/components/cv-inline-loading/consts.js
var consts = __webpack_require__("80b4");

// CONCATENATED MODULE: ./src/components/cv-inline-loading/index.js





// EXTERNAL MODULE: ./src/components/cv-inline-notification/cv-inline-notification.vue + 4 modules
var cv_inline_notification = __webpack_require__("a7e9");

// CONCATENATED MODULE: ./src/components/cv-inline-notification/index.js




// EXTERNAL MODULE: ./src/components/cv-link/cv-link.vue + 4 modules
var cv_link = __webpack_require__("2f28");

// CONCATENATED MODULE: ./src/components/cv-link/index.js




// EXTERNAL MODULE: ./src/components/cv-list/cv-list.vue + 4 modules
var cv_list = __webpack_require__("7607");

// EXTERNAL MODULE: ./src/components/cv-list/cv-list-item.vue + 4 modules
var cv_list_item = __webpack_require__("3691");

// CONCATENATED MODULE: ./src/components/cv-list/index.js





// EXTERNAL MODULE: ./src/components/cv-loading/cv-loading.vue + 4 modules
var cv_loading = __webpack_require__("ff77");

// CONCATENATED MODULE: ./src/components/cv-loading/index.js




// EXTERNAL MODULE: ./src/components/cv-modal/cv-modal.vue + 4 modules
var cv_modal = __webpack_require__("d52d");

// CONCATENATED MODULE: ./src/components/cv-modal/index.js



// EXTERNAL MODULE: ./src/components/cv-multi-select/cv-multi-select.vue + 4 modules
var cv_multi_select = __webpack_require__("6586");

// CONCATENATED MODULE: ./src/components/cv-multi-select/index.js




// EXTERNAL MODULE: ./src/components/cv-number-input/cv-number-input.vue + 6 modules
var cv_number_input = __webpack_require__("63686");

// EXTERNAL MODULE: ./src/components/cv-number-input/cv-number-input-skeleton.vue + 4 modules
var cv_number_input_skeleton = __webpack_require__("fb12");

// CONCATENATED MODULE: ./src/components/cv-number-input/index.js




// EXTERNAL MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu.vue + 5 modules
var cv_overflow_menu = __webpack_require__("e44b");

// EXTERNAL MODULE: ./src/components/cv-overflow-menu/cv-overflow-menu-item.vue + 4 modules
var cv_overflow_menu_item = __webpack_require__("03f9");

// CONCATENATED MODULE: ./src/components/cv-overflow-menu/index.js





// EXTERNAL MODULE: ./src/components/cv-pagination/cv-pagination.vue + 6 modules
var cv_pagination = __webpack_require__("744c");

// CONCATENATED MODULE: ./src/components/cv-pagination/index.js



// EXTERNAL MODULE: ./src/components/cv-progress/cv-progress.vue + 4 modules
var cv_progress = __webpack_require__("51f2");

// EXTERNAL MODULE: ./src/components/cv-progress/cv-progress-step.vue + 6 modules
var cv_progress_step = __webpack_require__("24a9");

// CONCATENATED MODULE: ./src/components/cv-progress/index.js





// EXTERNAL MODULE: ./src/components/cv-radio-button/cv-radio-group.vue + 4 modules
var cv_radio_group = __webpack_require__("4c21");

// EXTERNAL MODULE: ./src/components/cv-radio-button/cv-radio-button.vue + 4 modules
var cv_radio_button = __webpack_require__("1d1a");

// CONCATENATED MODULE: ./src/components/cv-radio-button/index.js





// EXTERNAL MODULE: ./src/components/cv-search/cv-search.vue + 5 modules
var cv_search = __webpack_require__("2b0a");

// CONCATENATED MODULE: ./src/components/cv-search/index.js



// EXTERNAL MODULE: ./src/components/cv-select/cv-select.vue + 4 modules
var cv_select = __webpack_require__("1cf6");

// EXTERNAL MODULE: ./src/components/cv-select/cv-select-option.vue + 4 modules
var cv_select_option = __webpack_require__("18a2");

// EXTERNAL MODULE: ./src/components/cv-select/cv-select-optgroup.vue + 4 modules
var cv_select_optgroup = __webpack_require__("e4ef");

// CONCATENATED MODULE: ./src/components/cv-select/index.js





// EXTERNAL MODULE: ./src/components/cv-skeleton-text/cv-skeleton-text.vue + 4 modules
var cv_skeleton_text = __webpack_require__("6590");

// CONCATENATED MODULE: ./src/components/cv-skeleton-text/index.js



// EXTERNAL MODULE: ./src/components/cv-slider/cv-slider-skeleton.vue + 4 modules
var cv_slider_skeleton = __webpack_require__("a865");

// EXTERNAL MODULE: ./src/components/cv-slider/cv-slider.vue + 4 modules
var cv_slider = __webpack_require__("17cc");

// CONCATENATED MODULE: ./src/components/cv-slider/index.js





// EXTERNAL MODULE: ./src/components/cv-structured-list/cv-structured-list-data.vue + 4 modules
var cv_structured_list_data = __webpack_require__("d3be");

// EXTERNAL MODULE: ./src/components/cv-structured-list/cv-structured-list-heading.vue + 4 modules
var cv_structured_list_heading = __webpack_require__("4bc2");

// EXTERNAL MODULE: ./src/components/cv-structured-list/cv-structured-list-item.vue + 14 modules
var cv_structured_list_item = __webpack_require__("8479");

// EXTERNAL MODULE: ./src/components/cv-structured-list/cv-structured-list.vue + 4 modules
var cv_structured_list = __webpack_require__("183a");

// CONCATENATED MODULE: ./src/components/cv-structured-list/index.js






// EXTERNAL MODULE: ./src/components/cv-tabs/cv-tabs.vue + 4 modules
var cv_tabs = __webpack_require__("c49c");

// EXTERNAL MODULE: ./src/components/cv-tabs/cv-tab.vue + 4 modules
var cv_tab = __webpack_require__("18de");

// EXTERNAL MODULE: ./src/components/cv-tabs/cv-tabs-skeleton.vue + 4 modules
var cv_tabs_skeleton = __webpack_require__("005d");

// CONCATENATED MODULE: ./src/components/cv-tabs/index.js






// EXTERNAL MODULE: ./src/components/cv-tag/cv-tag.vue + 4 modules
var cv_tag = __webpack_require__("603b");

// EXTERNAL MODULE: ./src/components/cv-tag/cv-tag-skeleton.vue + 4 modules
var cv_tag_skeleton = __webpack_require__("3108");

// CONCATENATED MODULE: ./src/components/cv-tag/index.js




// EXTERNAL MODULE: ./src/components/cv-text-area/cv-text-area.vue + 4 modules
var cv_text_area = __webpack_require__("1617");

// CONCATENATED MODULE: ./src/components/cv-text-area/index.js



// EXTERNAL MODULE: ./src/components/cv-text-input/cv-text-input.vue + 6 modules
var cv_text_input = __webpack_require__("7fca");

// CONCATENATED MODULE: ./src/components/cv-text-input/index.js



// EXTERNAL MODULE: ./src/components/cv-tile/cv-tile.vue + 24 modules
var cv_tile = __webpack_require__("5106");

// CONCATENATED MODULE: ./src/components/cv-tile/index.js



// EXTERNAL MODULE: ./src/components/cv-time-picker/cv-time-picker.vue + 4 modules
var cv_time_picker = __webpack_require__("89b6");

// CONCATENATED MODULE: ./src/components/cv-time-picker/index.js



// EXTERNAL MODULE: ./src/components/cv-toast-notification/cv-toast-notification.vue + 4 modules
var cv_toast_notification = __webpack_require__("95a6");

// CONCATENATED MODULE: ./src/components/cv-toast-notification/index.js



// EXTERNAL MODULE: ./src/components/cv-toggle/cv-toggle.vue + 4 modules
var cv_toggle = __webpack_require__("f154");

// EXTERNAL MODULE: ./src/components/cv-toggle/cv-toggle-skeleton.vue + 4 modules
var cv_toggle_skeleton = __webpack_require__("68c3");

// CONCATENATED MODULE: ./src/components/cv-toggle/index.js




// EXTERNAL MODULE: ./src/components/cv-toolbar/cv-toolbar.vue + 4 modules
var cv_toolbar = __webpack_require__("15ec");

// EXTERNAL MODULE: ./src/components/cv-toolbar/cv-toolbar-title.vue + 4 modules
var cv_toolbar_title = __webpack_require__("90c2f");

// EXTERNAL MODULE: ./src/components/cv-toolbar/cv-toolbar-search.vue + 4 modules
var cv_toolbar_search = __webpack_require__("d294");

// EXTERNAL MODULE: ./src/components/cv-toolbar/cv-toolbar-option.vue + 4 modules
var cv_toolbar_option = __webpack_require__("4c37");

// EXTERNAL MODULE: ./src/components/cv-toolbar/cv-toolbar-divider.vue + 4 modules
var cv_toolbar_divider = __webpack_require__("25b6");

// CONCATENATED MODULE: ./src/components/cv-toolbar/index.js







// EXTERNAL MODULE: ./src/components/cv-tooltip/cv-tooltip.vue + 4 modules
var cv_tooltip = __webpack_require__("aee1");

// EXTERNAL MODULE: ./src/components/cv-tooltip/cv-interactive-tooltip.vue + 4 modules
var cv_interactive_tooltip = __webpack_require__("e2bb");

// EXTERNAL MODULE: ./src/components/cv-tooltip/cv-definition-tooltip.vue + 4 modules
var cv_definition_tooltip = __webpack_require__("6093");

// CONCATENATED MODULE: ./src/components/cv-tooltip/index.js






// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-global-action.vue + 4 modules
var cv_header_global_action = __webpack_require__("784a");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-menu-button.vue + 5 modules
var cv_header_menu_button = __webpack_require__("cb40");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-menu-item.vue + 4 modules
var cv_header_menu_item = __webpack_require__("eb70");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-menu.vue + 4 modules
var cv_header_menu = __webpack_require__("eed0");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-name.vue + 4 modules
var cv_header_name = __webpack_require__("f1de");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-nav.vue + 4 modules
var cv_header_nav = __webpack_require__("2b56");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-side-nav-items.vue + 4 modules
var cv_header_side_nav_items = __webpack_require__("115c");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header-panel.vue + 4 modules
var cv_header_panel = __webpack_require__("1f7b");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-header.vue + 4 modules
var cv_header = __webpack_require__("80d2");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav-icon.vue + 4 modules
var cv_side_nav_icon = __webpack_require__("8fd3");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav-items.vue + 4 modules
var cv_side_nav_items = __webpack_require__("75e8");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav-link.vue + 4 modules
var cv_side_nav_link = __webpack_require__("9952");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu-item.vue + 4 modules
var cv_side_nav_menu_item = __webpack_require__("0ad0");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav-menu.vue + 5 modules
var cv_side_nav_menu = __webpack_require__("1120");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-side-nav.vue + 10 modules
var cv_side_nav = __webpack_require__("b574");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-skip-to-content.vue + 4 modules
var cv_skip_to_content = __webpack_require__("c9df");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-switcher-item-link.vue + 4 modules
var cv_switcher_item_link = __webpack_require__("180a");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-switcher-item.vue + 4 modules
var cv_switcher_item = __webpack_require__("15aa");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-switcher.vue + 4 modules
var cv_switcher = __webpack_require__("a123");

// EXTERNAL MODULE: ./src/components/cv-ui-shell/cv-content.vue + 4 modules
var cv_content = __webpack_require__("ecb9");

// CONCATENATED MODULE: ./src/components/cv-ui-shell/index.js























// CONCATENATED MODULE: ./src/index.js
const ctx = __webpack_require__("4756");
const components = ctx.keys().map(ctx);

// Export the components as a plugin
/* harmony default export */ var src = ({
  // options is an array of components to be registered
  // e.g. ['c-button', 'c-modal']
  install(Vue, options) {
    if (typeof options === 'undefined') {
      for (let c of components) {
        Vue.component(c.default.name, c.default);
      }
    } else {
      if (!(options instanceof Array)) {
        throw new TypeError('options must be an array');
      }

      for (let c of components) {
        // register only components specified in the options
        if (options.includes(c.default.name)) {
          Vue.component(c.default.name, c.default);
        }
      }
    }
  },
});

// import/export individual components









































// exports









































// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (src);



/***/ }),

/***/ "fceb":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
const idGen = {
  newId() {
    // as it is funny gen IDs using b - https://gist.github.com/jed/982883
    const b = a =>
      a
        ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)
        : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, b);

    return `uid-${b()}`;
  },
};

// define a mixin object
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    id: { type: String, default: undefined },
  },
  computed: {
    uid() {
      return this.id && this.id.length ? this.id : idGen.newId();
    },
  },
});


/***/ }),

/***/ "ff77":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"2d6e2ed4-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-loading/cv-loading.vue?vue&type=template&id=71605a8d&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cv-wrapper',{staticClass:"cv-loading",class:_vm.overlayClasses,attrs:{"tag-type":_vm.overlay ? 'div' : ''}},[_c('div',{ref:"loading",class:{
      'cv-loading': !_vm.overlay,
      'bx--loading': _vm.active || _vm.stopping,
      'bx--loading--stop': !_vm.active && _vm.stopping,
      'bx--loading--small': _vm.small,
    },attrs:{"data-loading":""}},[_c('svg',{staticClass:"bx--loading__svg",attrs:{"viewBox":"-75 -75 150 150"}},[_c('title',[_vm._v("Loading")]),(_vm.small)?_c('circle',{staticClass:"bx--loading__background",attrs:{"cx":"0","cy":"0","r":_vm.loadingRadius}}):_vm._e(),_c('circle',{staticClass:"bx--loading__stroke",attrs:{"cx":"0","cy":"0","r":_vm.loadingRadius}})])])])}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/components/cv-loading/cv-loading.vue?vue&type=template&id=71605a8d&

// EXTERNAL MODULE: ./src/components/cv-wrapper/_cv-wrapper.js
var _cv_wrapper = __webpack_require__("5d36");

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/cv-loading/cv-loading.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var cv_loadingvue_type_script_lang_js_ = ({
  name: 'CvLoading',
  components: { CvWrapper: _cv_wrapper["a" /* default */] },
  props: {
    active: { type: Boolean, default: true },
    overlay: Boolean,
    small: Boolean,
  },
  computed: {
    overlayClasses() {
      const classes = [];
      if (this.overlay) {
        if (this.active || this.stopping) {
          classes.push('bx--loading-overlay');
        } else {
          classes.push('bx--loading-overlay--stop');
        }
      }

      return classes;
    },
    loadingRadius() {
      return this.small ? '26.8125' : '37.5';
    },
  },
  data() {
    return {
      stopping: false,
    };
  },
  watch: {
    active(val) {
      this.onActiveUpdate(val);
    },
  },
  methods: {
    onEnd(ev) {
      if (ev.animationName === 'rotate-end-p2') {
        this.$refs.loading.removeEventListener('animationend', this.onEnd);

        this.stopping = false;
        this.$emit('loading-end');
      }
    },
    onActiveUpdate(newValue) {
      this.stopping = !newValue;
      if (!newValue) {
        this.$refs.loading.addEventListener('animationend', this.onEnd);
      }
    },
  },
});

// CONCATENATED MODULE: ./src/components/cv-loading/cv-loading.vue?vue&type=script&lang=js&
 /* harmony default export */ var cv_loading_cv_loadingvue_type_script_lang_js_ = (cv_loadingvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__("2877");

// CONCATENATED MODULE: ./src/components/cv-loading/cv-loading.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  cv_loading_cv_loadingvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cv_loading = __webpack_exports__["default"] = (component.exports);

/***/ })

/******/ });
//# sourceMappingURL=carbon-vue.common.js.map