import { _ as _objectSpread2, a as _defineProperty } from '../_rollupPluginBabelHelpers-8169a350.js';
import { getAttributes } from '@carbon/icon-helpers';

var virtual_WintryMix20 = {
  name: 'WintryMix20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = getAttributes(_objectSpread2({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "15",
        "y": "26"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "17",
        "y": "28"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "19",
        "y": "30"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "19",
        "y": "26"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "15",
        "y": "30"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "13",
        "y": "16"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "15",
        "y": "18"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "17",
        "y": "20"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "17",
        "y": "16"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "13",
        "y": "20"
      }
    }), createElement('path', {
      attrs: {
        "d": "M10,30a1,1,0,0,1-.8944-1.4474l2-4.0005a1,1,0,1,1,1.7888.8947l-2,4A.9981.9981,0,0,1,10,30Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M24.8008,9.1362a8.9943,8.9943,0,0,0-17.6006,0A6.5321,6.5321,0,0,0,2,15.5V22l1,2,1-2V20.18a6.4891,6.4891,0,0,0,3.4294,1.7246L6.106,24.5527a1,1,0,1,0,1.7885.8946l2-4a1,1,0,0,0-.447-1.3418.977.977,0,0,0-.489-.0894V20H8.5a4.4975,4.4975,0,0,1-.356-8.981l.8155-.0639.0991-.812a6.9938,6.9938,0,0,1,13.8838,0l.0986.812.8154.0639A4.4975,4.4975,0,0,1,23.5,20h-.542v.0083A.9955.9955,0,0,0,22,21v3l1,2,1-2V21.9746a6.4473,6.4473,0,0,0,2-.4761V26l1,2,1-2V20.18A6.4876,6.4876,0,0,0,24.8008,9.1362Z"
      }
    }), children]);
  }
};

export default virtual_WintryMix20;
