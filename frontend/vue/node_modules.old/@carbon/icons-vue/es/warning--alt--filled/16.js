import { _ as _objectSpread2, a as _defineProperty } from '../_rollupPluginBabelHelpers-8169a350.js';
import { getAttributes } from '@carbon/icon-helpers';

var virtual_WarningAltFilled16 = {
  name: 'WarningAltFilled16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = getAttributes(_objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M14.9,13.3l-6.5-12C8.3,1,8,0.9,7.8,1.1c-0.1,0-0.2,0.1-0.2,0.2l-6.5,12c-0.1,0.2-0.1,0.3,0,0.5C1.2,13.9,1.3,14,1.5,14h13\tc0.2,0,0.3-0.1,0.4-0.2C15,13.6,15,13.4,14.9,13.3z M7.4,5.5h1.1v4H7.4V5.5z M8,12.2c-0.4,0-0.8-0.3-0.8-0.8s0.3-0.8,0.8-0.8\tc0.4,0,0.8,0.3,0.8,0.8S8.4,12.2,8,12.2z"
      }
    }), children]);
  }
};

export default virtual_WarningAltFilled16;
