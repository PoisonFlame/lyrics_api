import { _ as _objectSpread2, a as _defineProperty } from '../_rollupPluginBabelHelpers-8169a350.js';
import { getAttributes } from '@carbon/icon-helpers';

var virtual_UserData20 = {
  name: 'UserData20',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = getAttributes(_objectSpread2({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "8",
        "x": "28",
        "y": "8"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "11",
        "x": "23",
        "y": "5"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "6",
        "x": "18",
        "y": "10"
      }
    }), createElement('path', {
      attrs: {
        "d": "M16,30H14V24a3.0033,3.0033,0,0,0-3-3H7a3.0033,3.0033,0,0,0-3,3v6H2V24a5.0059,5.0059,0,0,1,5-5h4a5.0059,5.0059,0,0,1,5,5Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M9,9a3,3,0,1,1-3,3A3,3,0,0,1,9,9M9,7a5,5,0,1,0,5,5A5,5,0,0,0,9,7Z"
      }
    }), children]);
  }
};

export default virtual_UserData20;
