import { _ as _objectSpread2, a as _defineProperty } from '../../_rollupPluginBabelHelpers-8169a350.js';
import { getAttributes } from '@carbon/icon-helpers';

var virtual_QCU320 = {
  name: 'QCU320',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = getAttributes(_objectSpread2({
      width: '20',
      height: '20',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "d": "M10,23H5a2,2,0,0,1-2-2V15a2,2,0,0,1,2-2h5v2H5v6h5Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M18,23H14a2,2,0,0,1-2-2V9h2V21h4V9h2V21A2,2,0,0,1,18,23Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M28,9H22v2h6v4H23v2h5v4H22v2h6a2,2,0,0,0,2-2V11A2,2,0,0,0,28,9Z"
      }
    }), children]);
  }
};

export default virtual_QCU320;
