'use strict';

var _rollupPluginBabelHelpers = require('../../_rollupPluginBabelHelpers-00d81fcb.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_WatsonHealthMammogram16 = {
  name: 'WatsonHealthMammogram16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('polygon', {
      attrs: {
        "points": "25 32 32 32 32 25 30 25 30 30 25 30 25 32"
      }
    }), createElement('path', {
      attrs: {
        "d": "M25,27H22V17h3a3.0033,3.0033,0,0,1,3,3v4A3.0033,3.0033,0,0,1,25,27Zm-1-2h1a1.0006,1.0006,0,0,0,1-1V20a1.0006,1.0006,0,0,0-1-1H24Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M20,27H14V23a2.002,2.002,0,0,1,2-2h2V19H14V17h4a2.0023,2.0023,0,0,1,2,2v2a2.0023,2.0023,0,0,1-2,2H16v2h4Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M25,15H22V5h3a3.0033,3.0033,0,0,1,3,3v4A3.0033,3.0033,0,0,1,25,15Zm-1-2h1a1.0009,1.0009,0,0,0,1-1V8a1.0009,1.0009,0,0,0-1-1H24Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M18,5H14V7h4V9H15v2h3v2H14v2h4a2.0027,2.0027,0,0,0,2-2V7A2.0023,2.0023,0,0,0,18,5Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M10,27H8V23.9541C3.2847,23.5117,2,19.9443,2,18c0-3.0146,2.082-4.5015,3.9189-5.814C7.5723,11.0054,9,9.9854,9,8V5h2V8c0,3.0146-2.082,4.5015-3.9189,5.814C5.4277,14.9946,4,16.0146,4,18c.0054.4033.1914,4,5,4a1,1,0,0,1,1,1Z"
      }
    }), createElement('polygon', {
      attrs: {
        "points": "7 0 0 0 0 7 2 7 2 2 7 2 7 0"
      }
    }), children]);
  }
};

module.exports = virtual_WatsonHealthMammogram16;
