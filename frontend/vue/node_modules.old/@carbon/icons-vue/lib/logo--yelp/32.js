'use strict';

var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-00d81fcb.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_LogoYelp32 = {
  name: 'LogoYelp32',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2({
      width: '32',
      height: '32',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('path', {
      attrs: {
        "fill-rule": "evenodd",
        "d": "M9.09,15.2458l4.6706,2.2777a1.0706,1.0706,0,0,1-.21,2.0011L8.5087,20.7818a1.0729,1.0729,0,0,1-1.3241-.921,9.2173,9.2173,0,0,1,.4213-3.9965A1.0706,1.0706,0,0,1,9.09,15.2458Z"
      }
    }), createElement('path', {
      attrs: {
        "fill-rule": "evenodd",
        "d": "M10.96,24.8605l3.4763-3.8613a1.0707,1.0707,0,0,1,1.8657.7537l-.1814,5.1945a1.072,1.072,0,0,1-1.2491,1.0192A9.3014,9.3014,0,0,1,11.1488,26.46,1.0713,1.0713,0,0,1,10.96,24.8605Z"
      }
    }), createElement('path', {
      attrs: {
        "fill-rule": "evenodd",
        "d": "M19.2025,19.7222l4.9412,1.6058a1.0713,1.0713,0,0,1,.6363,1.4794,9.3022,9.3022,0,0,1-2.4707,3.1663,1.072,1.072,0,0,1-1.5914-.2581l-2.7543-4.4078A1.0707,1.0707,0,0,1,19.2025,19.7222Z"
      }
    }), createElement('path', {
      attrs: {
        "fill-rule": "evenodd",
        "d": "M24.2273,16.57l-4.9948,1.4321A1.0706,1.0706,0,0,1,18.05,16.3742l2.906-4.3078A1.0706,1.0706,0,0,1,22.55,11.86,9.2168,9.2168,0,0,1,24.9135,15.11,1.0729,1.0729,0,0,1,24.2273,16.57Z"
      }
    }), createElement('path', {
      attrs: {
        "fill-rule": "evenodd",
        "d": "M12.5561,4.45a14.9542,14.9542,0,0,0-2.5676.9459,1.07,1.07,0,0,0-.4636,1.5013l4.8819,8.4557a1.0707,1.0707,0,0,0,1.9979-.5353V5.0534A1.07,1.07,0,0,0,15.2526,3.985,14.9577,14.9577,0,0,0,12.5561,4.45Z"
      }
    }), children]);
  }
};

module.exports = virtual_LogoYelp32;
