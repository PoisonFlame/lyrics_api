'use strict';

var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-00d81fcb.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_TemperatureHot16 = {
  name: 'TemperatureHot16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "4",
        "x": "24.121",
        "y": "19.121",
        "transform": "rotate(-45 25.121 21.121)"
      }
    }), createElement('rect', {
      attrs: {
        "width": "4",
        "height": "2",
        "x": "26",
        "y": "13"
      }
    }), createElement('rect', {
      attrs: {
        "width": "4",
        "height": "2",
        "x": "23.121",
        "y": "5.879",
        "transform": "rotate(-45 25.121 6.879)"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "4",
        "x": "17",
        "y": "2"
      }
    }), createElement('path', {
      attrs: {
        "d": "M18,8a6.0365,6.0365,0,0,0-1,.09v2.0518A3.9567,3.9567,0,0,1,18,10a4,4,0,0,1,0,8v2A6,6,0,0,0,18,8Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M10,20.1839V7H8V20.1839a3,3,0,1,0,2,0Z"
      }
    }), createElement('path', {
      attrs: {
        "d": "M14,18.1377V7A5,5,0,0,0,4,7V18.1377A6.9894,6.9894,0,1,0,16,23,6.9411,6.9411,0,0,0,14,18.1377ZM9,28a5.0057,5.0057,0,0,1-5-5,4.9164,4.9164,0,0,1,1.0747-3.06c.094-.12.1953-.2329.2993-.3437.0518-.0547.1009-.1113.1548-.1636.11-.1064.2271-.2051.3462-.3013.0425-.0346.0815-.0727.125-.1059V7a3,3,0,0,1,6,0V19.0254c.0437.0332.0828.0718.1255.1064.1189.0962.2361.1944.3454.3008.0542.0523.1038.1094.1556.1641.1037.11.205.2236.2988.3432A4.9146,4.9146,0,0,1,14,23,5.0057,5.0057,0,0,1,9,28Z"
      }
    }), children]);
  }
};

module.exports = virtual_TemperatureHot16;
