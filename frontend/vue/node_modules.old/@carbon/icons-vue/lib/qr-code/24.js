'use strict';

var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-00d81fcb.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_QrCode24 = {
  name: 'QrCode24',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2({
      width: '24',
      height: '24',
      viewBox: '0 0 32 32',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "24",
        "y": "26",
        "transform": "rotate(-90 25 27)"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "2",
        "x": "18",
        "y": "22",
        "transform": "rotate(-90 19 23)"
      }
    }), createElement('polygon', {
      attrs: {
        "points": "18 30 22 30 22 28 20 28 20 26 18 26 18 30"
      }
    }), createElement('rect', {
      attrs: {
        "width": "4",
        "height": "2",
        "x": "25",
        "y": "23",
        "transform": "rotate(-90 27 24)"
      }
    }), createElement('polygon', {
      attrs: {
        "points": "28 26 30 26 30 30 26 30 26 28 28 28 28 26"
      }
    }), createElement('polygon', {
      attrs: {
        "points": "26 20 26 18 30 18 30 22 28 22 28 20 26 20"
      }
    }), createElement('polygon', {
      attrs: {
        "points": "24 20 22 20 22 24 20 24 20 26 24 26 24 20"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2",
        "height": "4",
        "x": "19",
        "y": "17",
        "transform": "rotate(-90 20 19)"
      }
    }), createElement('rect', {
      attrs: {
        "width": "4",
        "height": "4",
        "x": "6",
        "y": "22"
      }
    }), createElement('path', {
      attrs: {
        "d": "M14,30H2V18H14ZM4,28h8V20H4Z"
      }
    }), createElement('rect', {
      attrs: {
        "width": "4",
        "height": "4",
        "x": "22",
        "y": "6"
      }
    }), createElement('path', {
      attrs: {
        "d": "M30,14H18V2H30ZM20,12h8V4H20Z"
      }
    }), createElement('rect', {
      attrs: {
        "width": "4",
        "height": "4",
        "x": "6",
        "y": "6"
      }
    }), createElement('path', {
      attrs: {
        "d": "M14,14H2V2H14ZM4,12h8V4H4Z"
      }
    }), children]);
  }
};

module.exports = virtual_QrCode24;
