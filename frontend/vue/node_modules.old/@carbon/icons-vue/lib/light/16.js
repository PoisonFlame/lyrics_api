'use strict';

var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-00d81fcb.js');
var iconHelpers = require('@carbon/icon-helpers');

var virtual_Light16 = {
  name: 'Light16',
  functional: true,
  // We use title as the prop name as it is not a valid attribute for an SVG
  // HTML element
  props: ['title'],
  render: function render(createElement, context) {
    var children = context.children,
        data = context.data,
        listeners = context.listeners,
        props = context.props;
    var attrs = iconHelpers.getAttributes(_rollupPluginBabelHelpers._objectSpread2({
      width: '16',
      height: '16',
      viewBox: '0 0 16 16',
      preserveAspectRatio: 'xMidYMid meet',
      xmlns: 'http://www.w3.org/2000/svg',
      // Special case here, we need to coordinate that we are using title,
      // potentially, to get the right focus attributes
      title: props.title
    }, data.attrs));
    var svgData = {
      attrs: attrs,
      on: listeners
    };

    if (data.staticClass) {
      svgData.class = _rollupPluginBabelHelpers._defineProperty({}, data.staticClass, true);
    }

    if (data.class) {
      svgData.class = svgData.class || {}; // may be no static class

      svgData.class[data.class] = true;
    } // remove style set by getAttributes


    delete svgData.attrs.style; // combine incoming staticStyle, style with default willChange

    svgData.style = _rollupPluginBabelHelpers._objectSpread2({
      willChange: 'transform'
    }, data.staticStyle, {}, data.style);
    return createElement('svg', svgData, [props.title && createElement('title', null, props.title), createElement('rect', {
      attrs: {
        "width": "1",
        "height": "2.5",
        "x": "7.5",
        "y": "1"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2.5",
        "height": "1",
        "x": "10.8",
        "y": "3.4",
        "transform": "rotate(-45.001 12.041 3.923)"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2.5",
        "height": "1",
        "x": "12.5",
        "y": "7.5"
      }
    }), createElement('rect', {
      attrs: {
        "width": "1",
        "height": "2.5",
        "x": "11.6",
        "y": "10.8",
        "transform": "rotate(-45.001 12.075 12.041)"
      }
    }), createElement('rect', {
      attrs: {
        "width": "1",
        "height": "2.5",
        "x": "7.5",
        "y": "12.5"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2.5",
        "height": "1",
        "x": "2.7",
        "y": "11.6",
        "transform": "rotate(-45.001 3.96 12.079)"
      }
    }), createElement('rect', {
      attrs: {
        "width": "2.5",
        "height": "1",
        "x": "1",
        "y": "7.5"
      }
    }), createElement('rect', {
      attrs: {
        "width": "1",
        "height": "2.5",
        "x": "3.4",
        "y": "2.7",
        "transform": "rotate(-45.001 3.925 3.961)"
      }
    }), createElement('path', {
      attrs: {
        "d": "M8,6c1.1,0,2,0.9,2,2s-0.9,2-2,2S6,9.1,6,8S6.9,6,8,6 M8,5C6.3,5,5,6.3,5,8s1.3,3,3,3s3-1.3,3-3S9.7,5,8,5z"
      }
    }), children]);
  }
};

module.exports = virtual_Light16;
