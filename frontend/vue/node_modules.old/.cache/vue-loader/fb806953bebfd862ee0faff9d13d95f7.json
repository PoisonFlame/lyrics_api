{"remainingRequest":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-slider/cv-slider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-slider/cv-slider.vue","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1aWRNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvdWlkLW1peGluJzsKaW1wb3J0IHRoZW1lTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL3RoZW1lLW1peGluJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3ZTbGlkZXInLAogIG1peGluczogW3VpZE1peGluLCB0aGVtZU1peGluXSwKICBwcm9wczogewogICAgZGlzYWJsZWQ6IEJvb2xlYW4sCiAgICBsYWJlbDogU3RyaW5nLAogICAgLy8gTk9URTogSXQgaXMgbm90IHNhZmUgdG8gcmVseSBvbiBOdW1iZXJzIGZvciBub24taW50ZWdlciBzdGVwcwogICAgbWluOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJzAnIH0sCiAgICBtYXg6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnMTAwJyB9LAogICAgc3RlcDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcxJyB9LAogICAgc3RlcE11bHRpcGxpZXI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnNCcsCiAgICAgIHZhbGlkYXRvcih2YWwpIHsKICAgICAgICBpZiAodmFsLmxlbmd0aCkgewogICAgICAgICAgbGV0IGludE11bHRpcGxpZXIgPSBwYXJzZUludCh2YWwpOwogICAgICAgICAgaWYgKGlzTmFOKGludE11bHRpcGxpZXIpIHx8IGludE11bHRpcGxpZXIgPCAxKSB7CiAgICAgICAgICAgIGNvbnNvbGUud2FybignY3Ytc2xpZGVyOiBtdWx0aXBsaWVyIG11c3QgYmUgPj0gMScpOwogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9LAogICAgfSwKICAgIHZhbHVlOiBTdHJpbmcsCiAgICBtaW5MYWJlbDogU3RyaW5nLAogICAgbWF4TGFiZWw6IFN0cmluZywKICB9LAogIG1vZGVsOiB7CiAgICBwcm9wOiAndmFsdWUnLAogICAgZXZlbnQ6ICdtb2RlbEV2ZW50JywKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbnRlcm5hbFZhbHVlOiAnJywKICAgICAgYW5pbWF0ZUNsaWNrOiBmYWxzZSwKICAgICAgaXNEcmFnZ2luZzogZmFsc2UsCiAgICAgIGRyYWdTdGFydFg6IDAsCiAgICAgIGRyYWdTdGFydFZhbHVlOiAwLAogICAgICBwZXJjZW50YWdlOiAnMCUnLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpbnRlcm5hbE1pbkxhYmVsKCkgewogICAgICByZXR1cm4gdGhpcy5taW5MYWJlbCAhPT0gdW5kZWZpbmVkID8gdGhpcy5taW5MYWJlbCA6IHRoaXMuZ2V0TWluKCk7CiAgICB9LAogICAgaW50ZXJuYWxNYXhMYWJlbCgpIHsKICAgICAgcmV0dXJuIHRoaXMubWF4TGFiZWwgIT09IHVuZGVmaW5lZCA/IHRoaXMubWF4TGFiZWwgOiB0aGlzLmdldE1heCgpOwogICAgfSwKICAgIGludGVybmFsTXVsdGlwbGllcigpIHsKICAgICAgbGV0IGludE11bHRpcGxpZXIgPSBwYXJzZUludCh0aGlzLnN0ZXBNdWx0aXBsaWVyKTsKICAgICAgLy8gZGVmYXVsdCB0byA0IGZybyBtdWx0aXBsaWVyCiAgICAgIHJldHVybiBpc05hTihpbnRNdWx0aXBsaWVyKSA/IDQgOiBNYXRoLm1heChpbnRNdWx0aXBsaWVyLCAxKTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kcmVmcy5yYW5nZS52YWx1ZSA9IHRoaXMudmFsdWU7CiAgICB0aGlzLmludGVybmFsVmFsdWUgPSB0aGlzLiRyZWZzLnJhbmdlLnZhbHVlOwogICAgdGhpcy5wZXJjZW50YWdlID0gYCR7KCh0aGlzLmludGVybmFsVmFsdWUgLSB0aGlzLmdldE1pbigpKSAqIDEwMCkgLyAodGhpcy5nZXRNYXgoKSAtIHRoaXMuZ2V0TWluKCkpfSVgOwogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlKHZhbCkgewogICAgICB0aGlzLnNldFZhbHVlKHZhbCk7CiAgICB9LAogICAgbWluKCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5zZXRWYWx1ZSh0aGlzLmludGVybmFsVmFsdWUpOwogICAgICB9KTsKICAgICAgLy8gICAgICB0aGlzLmludGVybmFsTWluID0gdmFsICYmIHZhbC5sZW5ndGggPyB2YWwgOiAnMCc7CiAgICB9LAogICAgbWF4KCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5zZXRWYWx1ZSh0aGlzLmludGVybmFsVmFsdWUpOwogICAgICB9KTsKICAgIH0sCiAgICBzdGVwKCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5zZXRWYWx1ZSh0aGlzLmludGVybmFsVmFsdWUpOwogICAgICB9KTsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBOT1RFOiBJdCBpcyBub3Qgc2FmZSB0byByZWx5IG9uIE51bWJlcnMgZm9yIG5vbi1pbnRlZ2VyIHN0ZXBzCiAgICBnZXRNaW4oKSB7CiAgICAgIGlmICh0aGlzLiRyZWZzLnJhbmdlKSB7CiAgICAgICAgY29uc3QgdmFsID0gcGFyc2VGbG9hdCh0aGlzLiRyZWZzLnJhbmdlLm1pbik7CiAgICAgICAgcmV0dXJuIGlzTmFOKHZhbCkgPyAwIDogdmFsOwogICAgICB9CiAgICAgIHJldHVybiAwOwogICAgfSwKICAgIGdldE1heCgpIHsKICAgICAgaWYgKHRoaXMuJHJlZnMucmFuZ2UpIHsKICAgICAgICBjb25zdCB2YWwgPSBwYXJzZUZsb2F0KHRoaXMuJHJlZnMucmFuZ2UubWF4KTsKICAgICAgICByZXR1cm4gaXNOYU4odmFsKSA/IDEwMCA6IHZhbDsKICAgICAgfQogICAgICByZXR1cm4gMTAwOwogICAgfSwKICAgIGdldFZhbHVlKCkgewogICAgICBpZiAodGhpcy4kcmVmcy5yYW5nZSkgewogICAgICAgIGNvbnN0IHZhbCA9IHBhcnNlRmxvYXQodGhpcy4kcmVmcy5yYW5nZS52YWx1ZSk7CiAgICAgICAgcmV0dXJuIGlzTmFOKHZhbCkgPyAwIDogdmFsOwogICAgICB9CiAgICAgIHJldHVybiAodGhpcy5nZXRNYXgoKSArIHRoaXMuZ2V0TWluKCkpIC8gMjsKICAgIH0sCiAgICBnZXRTdGVwKCkgewogICAgICBpZiAodGhpcy4kcmVmcy5yYW5nZSkgewogICAgICAgIGNvbnN0IHZhbCA9IHBhcnNlRmxvYXQodGhpcy4kcmVmcy5yYW5nZS5zdGVwKTsKICAgICAgICByZXR1cm4gaXNOYU4odmFsKSA/IDAgOiB2YWw7CiAgICAgIH0KICAgICAgcmV0dXJuIDE7CiAgICB9LAoKICAgIHNldFZhbHVlKG5ld1ZhbHVlKSB7CiAgICAgIGlmICh0aGlzLmRpc2FibGVkKSByZXR1cm47CgogICAgICB0aGlzLiRyZWZzLnJhbmdlLnZhbHVlID0gbmV3VmFsdWU7CiAgICAgIHRoaXMuaW50ZXJuYWxWYWx1ZSA9IHRoaXMuJHJlZnMucmFuZ2UudmFsdWU7CgogICAgICB0aGlzLnBlcmNlbnRhZ2UgPSBgJHsoKHRoaXMuaW50ZXJuYWxWYWx1ZSAtIHRoaXMuZ2V0TWluKCkpICogMTAwKSAvICh0aGlzLmdldE1heCgpIC0gdGhpcy5nZXRNaW4oKSl9JWA7CgogICAgICB0aGlzLiRlbWl0KCdtb2RlbEV2ZW50JywgdGhpcy4kcmVmcy5yYW5nZS52YWx1ZSk7CiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMuJHJlZnMucmFuZ2UudmFsdWUpOwogICAgfSwKICAgIG9uQ2hhbmdlKCkgewogICAgICBsZXQgbmV3VmFsdWUgPSB0aGlzLmludGVybmFsVmFsdWUubGVuZ3RoID8gcGFyc2VGbG9hdCh0aGlzLmludGVybmFsVmFsdWUpIDogdGhpcy5nZXRNaW4oKTsKICAgICAgdGhpcy5zZXRWYWx1ZShuZXdWYWx1ZSk7CiAgICB9LAogICAgb25TdGFydERyYWcoZXYpIHsKICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLm9uRHJhZyk7CiAgICAgIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMub25TdG9wRHJhZyk7CgogICAgICB0aGlzLmRyYWdTdGFydFggPSBldi5jbGllbnRYOwogICAgICB0aGlzLmRyYWdTdGFydFZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpOwogICAgICB0aGlzLmlzRHJhZ2dpbmcgPSB0cnVlOwogICAgfSwKICAgIG9uRHJhZyhldikgewogICAgICBpZiAodGhpcy5pc0RyYWdnaW5nKSB7CiAgICAgICAgLy8gcGVyY2VudGFnZSBjaGFuZ2UKICAgICAgICBsZXQgbmV3VmFsdWUgPSAoZXYuY2xpZW50WCAtIHRoaXMuZHJhZ1N0YXJ0WCkgLyB0aGlzLiRyZWZzLnRyYWNrLm9mZnNldFdpZHRoOwogICAgICAgIC8vIHVuY2FwcGVkIG5ldyB2YWx1ZQogICAgICAgIG5ld1ZhbHVlID0gdGhpcy5kcmFnU3RhcnRWYWx1ZSArICh0aGlzLmdldE1heCgpIC0gdGhpcy5nZXRNaW4oKSkgKiBuZXdWYWx1ZTsKCiAgICAgICAgdGhpcy5zZXRWYWx1ZShuZXdWYWx1ZSwgZXYpOwogICAgICB9CiAgICB9LAogICAgb25TdG9wRHJhZygpIHsKICAgICAgdGhpcy5pc0RyYWdnaW5nID0gZmFsc2U7CiAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5vbkRyYWcpOwogICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLm9uU3RvcERyYWcpOwogICAgfSwKICAgIG9uVHJhY2tDbGljayhldikgewogICAgICBjb25zdCBhZnRlckFuaW1hdGUgPSBldiA9PiB7CiAgICAgICAgaWYgKGV2LnByb3BlcnR5TmFtZSA9PT0gJ2xlZnQnKSB7CiAgICAgICAgICB0aGlzLmFuaW1hdGVDbGljayA9IGZhbHNlOwogICAgICAgICAgdGhpcy4kcmVmcy50aHVtYi5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgYWZ0ZXJBbmltYXRlKTsKICAgICAgICB9CiAgICAgIH07CgogICAgICBsZXQgbmV3VmFsdWUgPSBldi5vZmZzZXRYIC8gdGhpcy4kcmVmcy50cmFjay5vZmZzZXRXaWR0aDsKICAgICAgbmV3VmFsdWUgPSAodGhpcy5nZXRNYXgoKSAtIHRoaXMuZ2V0TWluKCkpICogbmV3VmFsdWUgKyB0aGlzLmdldE1pbigpOwogICAgICB0aGlzLiRyZWZzLnRodW1iLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBhZnRlckFuaW1hdGUpOwogICAgICB0aGlzLmFuaW1hdGVDbGljayA9IHRydWU7CgogICAgICB0aGlzLnNldFZhbHVlKG5ld1ZhbHVlLCBldik7CiAgICB9LAogICAgb25VcChldikgewogICAgICBsZXQgY3VyVmFsdWUgPSBldi50YXJnZXQudHlwZSA9PT0gJ251bWJlcicgPyBwYXJzZUZsb2F0KGV2LnRhcmdldC52YWx1ZSkgOiB0aGlzLmdldFZhbHVlKCk7CiAgICAgIGxldCBuZXdWYWx1ZSA9IGN1clZhbHVlICsgKGV2LnNoaWZ0S2V5ID8gdGhpcy5pbnRlcm5hbE11bHRpcGxpZXIgKiB0aGlzLmdldFN0ZXAoKSA6IHRoaXMuZ2V0U3RlcCgpKTsKICAgICAgdGhpcy5zZXRWYWx1ZShuZXdWYWx1ZSwgZXYpOwogICAgfSwKICAgIG9uRG93bihldikgewogICAgICBsZXQgY3VyVmFsdWUgPSBldi50YXJnZXQudHlwZSA9PT0gJ251bWJlcicgPyBwYXJzZUZsb2F0KGV2LnRhcmdldC52YWx1ZSkgOiB0aGlzLmdldFZhbHVlKCk7CiAgICAgIGxldCBuZXdWYWx1ZSA9IGN1clZhbHVlIC0gKGV2LnNoaWZ0S2V5ID8gdGhpcy5pbnRlcm5hbE11bHRpcGxpZXIgKiB0aGlzLmdldFN0ZXAoKSA6IHRoaXMuZ2V0U3RlcCgpKTsKICAgICAgdGhpcy5zZXRWYWx1ZShuZXdWYWx1ZSwgZXYpOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["cv-slider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-slider.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-slider","sourcesContent":["<template>\n  <div class=\"cv-slider bx--form-item\">\n    <label :for=\"uid\" class=\"bx--label\" :class=\"{ 'bx--label--disabled': disabled }\">{{ label }}</label>\n    <div class=\"bx--slider-container\">\n      <span class=\"bx--slider__range-label\">{{ internalMinLabel }}</span>\n      <div\n        class=\"bx--slider\"\n        :class=\"{ 'bx--slider--disabled': disabled }\"\n        data-slider\n        data-slider-input-box=\"#slider-input-box\"\n      >\n        <div class=\"bx--slider__track\" @click=\"onTrackClick\" ref=\"track\"></div>\n        <div class=\"bx--slider__filled-track\" :style=\"`width: ${percentage};`\"></div>\n        <div\n          class=\"bx--slider__thumb\"\n          :class=\"{\n            'bx--slider__thumb--clicked': animateClick,\n          }\"\n          tabindex=\"0\"\n          :style=\"`left: ${percentage};`\"\n          ref=\"thumb\"\n          @keydown.up.right.prevent=\"onUp\"\n          @keydown.down.left.prevent=\"onDown\"\n          @mousedown=\"onStartDrag\"\n        ></div>\n        <input :id=\"uid\" class=\"bx--slider__input\" type=\"range\" :step=\"step\" :min=\"min\" :max=\"max\" ref=\"range\" />\n      </div>\n      <span class=\"bx--slider__range-label\">{{ internalMaxLabel }}</span>\n      <input\n        type=\"number\"\n        class=\"bx--text-input bx--slider-text-input\"\n        :class=\"{ 'bx--text-input--light': theme === 'light' }\"\n        :placeholder=\"min\"\n        v-model=\"internalValue\"\n        @change=\"onChange\"\n        ref=\"inputBox\"\n        @keydown.up.prevent=\"onUp\"\n        @keydown.down.prevent=\"onDown\"\n        :disabled=\"disabled\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport uidMixin from '../../mixins/uid-mixin';\nimport themeMixin from '../../mixins/theme-mixin';\n\nexport default {\n  name: 'CvSlider',\n  mixins: [uidMixin, themeMixin],\n  props: {\n    disabled: Boolean,\n    label: String,\n    // NOTE: It is not safe to rely on Numbers for non-integer steps\n    min: { type: String, default: '0' },\n    max: { type: String, default: '100' },\n    step: { type: String, default: '1' },\n    stepMultiplier: {\n      type: String,\n      default: '4',\n      validator(val) {\n        if (val.length) {\n          let intMultiplier = parseInt(val);\n          if (isNaN(intMultiplier) || intMultiplier < 1) {\n            console.warn('cv-slider: multiplier must be >= 1');\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    value: String,\n    minLabel: String,\n    maxLabel: String,\n  },\n  model: {\n    prop: 'value',\n    event: 'modelEvent',\n  },\n  data() {\n    return {\n      internalValue: '',\n      animateClick: false,\n      isDragging: false,\n      dragStartX: 0,\n      dragStartValue: 0,\n      percentage: '0%',\n    };\n  },\n  computed: {\n    internalMinLabel() {\n      return this.minLabel !== undefined ? this.minLabel : this.getMin();\n    },\n    internalMaxLabel() {\n      return this.maxLabel !== undefined ? this.maxLabel : this.getMax();\n    },\n    internalMultiplier() {\n      let intMultiplier = parseInt(this.stepMultiplier);\n      // default to 4 fro multiplier\n      return isNaN(intMultiplier) ? 4 : Math.max(intMultiplier, 1);\n    },\n  },\n  mounted() {\n    this.$refs.range.value = this.value;\n    this.internalValue = this.$refs.range.value;\n    this.percentage = `${((this.internalValue - this.getMin()) * 100) / (this.getMax() - this.getMin())}%`;\n  },\n  watch: {\n    value(val) {\n      this.setValue(val);\n    },\n    min() {\n      this.$nextTick(() => {\n        this.setValue(this.internalValue);\n      });\n      //      this.internalMin = val && val.length ? val : '0';\n    },\n    max() {\n      this.$nextTick(() => {\n        this.setValue(this.internalValue);\n      });\n    },\n    step() {\n      this.$nextTick(() => {\n        this.setValue(this.internalValue);\n      });\n    },\n  },\n  methods: {\n    // NOTE: It is not safe to rely on Numbers for non-integer steps\n    getMin() {\n      if (this.$refs.range) {\n        const val = parseFloat(this.$refs.range.min);\n        return isNaN(val) ? 0 : val;\n      }\n      return 0;\n    },\n    getMax() {\n      if (this.$refs.range) {\n        const val = parseFloat(this.$refs.range.max);\n        return isNaN(val) ? 100 : val;\n      }\n      return 100;\n    },\n    getValue() {\n      if (this.$refs.range) {\n        const val = parseFloat(this.$refs.range.value);\n        return isNaN(val) ? 0 : val;\n      }\n      return (this.getMax() + this.getMin()) / 2;\n    },\n    getStep() {\n      if (this.$refs.range) {\n        const val = parseFloat(this.$refs.range.step);\n        return isNaN(val) ? 0 : val;\n      }\n      return 1;\n    },\n\n    setValue(newValue) {\n      if (this.disabled) return;\n\n      this.$refs.range.value = newValue;\n      this.internalValue = this.$refs.range.value;\n\n      this.percentage = `${((this.internalValue - this.getMin()) * 100) / (this.getMax() - this.getMin())}%`;\n\n      this.$emit('modelEvent', this.$refs.range.value);\n      this.$emit('change', this.$refs.range.value);\n    },\n    onChange() {\n      let newValue = this.internalValue.length ? parseFloat(this.internalValue) : this.getMin();\n      this.setValue(newValue);\n    },\n    onStartDrag(ev) {\n      document.body.addEventListener('mousemove', this.onDrag);\n      document.body.addEventListener('mouseup', this.onStopDrag);\n\n      this.dragStartX = ev.clientX;\n      this.dragStartValue = this.getValue();\n      this.isDragging = true;\n    },\n    onDrag(ev) {\n      if (this.isDragging) {\n        // percentage change\n        let newValue = (ev.clientX - this.dragStartX) / this.$refs.track.offsetWidth;\n        // uncapped new value\n        newValue = this.dragStartValue + (this.getMax() - this.getMin()) * newValue;\n\n        this.setValue(newValue, ev);\n      }\n    },\n    onStopDrag() {\n      this.isDragging = false;\n      document.body.removeEventListener('mousemove', this.onDrag);\n      document.body.removeEventListener('mouseup', this.onStopDrag);\n    },\n    onTrackClick(ev) {\n      const afterAnimate = ev => {\n        if (ev.propertyName === 'left') {\n          this.animateClick = false;\n          this.$refs.thumb.removeEventListener('transitionend', afterAnimate);\n        }\n      };\n\n      let newValue = ev.offsetX / this.$refs.track.offsetWidth;\n      newValue = (this.getMax() - this.getMin()) * newValue + this.getMin();\n      this.$refs.thumb.addEventListener('transitionend', afterAnimate);\n      this.animateClick = true;\n\n      this.setValue(newValue, ev);\n    },\n    onUp(ev) {\n      let curValue = ev.target.type === 'number' ? parseFloat(ev.target.value) : this.getValue();\n      let newValue = curValue + (ev.shiftKey ? this.internalMultiplier * this.getStep() : this.getStep());\n      this.setValue(newValue, ev);\n    },\n    onDown(ev) {\n      let curValue = ev.target.type === 'number' ? parseFloat(ev.target.value) : this.getValue();\n      let newValue = curValue - (ev.shiftKey ? this.internalMultiplier * this.getStep() : this.getStep());\n      this.setValue(newValue, ev);\n    },\n  },\n};\n</script>\n"]}]}