{"remainingRequest":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-button/cv-icon-button.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-button/cv-icon-button.vue","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBidXR0b25NaXhpbiBmcm9tICcuL2J1dHRvbi1taXhpbic7CmltcG9ydCBjYXJib25QcmVmaXhNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvY2FyYm9uLXByZWZpeC1taXhpbic7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0N2SWNvbkJ1dHRvbicsCiAgbWl4aW5zOiBbYnV0dG9uTWl4aW4sIGNhcmJvblByZWZpeE1peGluXSwKICBwcm9wczogewogICAgbGFiZWw6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiB1bmRlZmluZWQgfSwKICAgIHRpcFBvc2l0aW9uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2JvdHRvbScsCiAgICAgIHZhbGlkYXRvcjogdmFsID0+IFsndG9wJywgJ2xlZnQnLCAnYm90dG9tJywgJ3JpZ2h0Jy5pbmNsdWRlcyh2YWwpXSwKICAgIH0sCiAgICB0aXBBbGlnbm1lbnQ6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnY2VudGVyJywgdmFsaWRhdG9yOiB2YWwgPT4gWydzdGFydCcsICdjZW50ZXInLCAnZW5kJ10uaW5jbHVkZXModmFsKSB9LAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJ1dHRvbkNsYXNzZXMoKSB7CiAgICAgIHJldHVybiBgJHt0aGlzLmJ1dHRvbkNsYXNzT3B0cyh7IGljb25Pbmx5OiB0cnVlIH0pfSR7dGhpcy50aXBDbGFzc2VzfWA7CiAgICB9LAogICAgdGlwQ2xhc3NlcygpIHsKICAgICAgY29uc3QgdGlwUG9zaXRpb24gPSB0aGlzLnRpcFBvc2l0aW9uIHx8ICdib3R0b20nOwogICAgICBjb25zdCB0aXBBbGlnbm1lbnQgPSB0aGlzLnRpcEFsaWdubWVudCB8fCAnY2VudGVyJzsKICAgICAgaWYgKHRoaXMubGFiZWwpIHsKICAgICAgICByZXR1cm4gYCAke3RoaXMuY2FyYm9uUHJlZml4fS0tdG9vbHRpcF9fdHJpZ2dlciAke3RoaXMuY2FyYm9uUHJlZml4fS0tdG9vbHRpcC0tYTExeSAke3RoaXMuY2FyYm9uUHJlZml4fS0tdG9vbHRpcC0tJHt0aXBQb3NpdGlvbn0gJHt0aGlzLmNhcmJvblByZWZpeH0tLXRvb2x0aXAtLWFsaWduLSR7dGlwQWxpZ25tZW50fWA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["cv-icon-button.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-icon-button.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-button","sourcesContent":["<template>\n  <button class=\"cv-button\" :class=\"buttonClasses\" v-on=\"inputListeners\" type=\"button\">\n    <span :class=\"`${carbonPrefix}--assistive-text`\">{{ label }}</span>\n\n    <component v-if=\"typeof icon === 'object'\" :is=\"icon\" class=\"bx--temp-fix\" :class=\"`${carbonPrefix}--btn__icon`\" />\n    <svg v-if=\"typeof icon === 'string' || iconHref\" :class=\"`${carbonPrefix}--btn__icon`\">\n      <use :href=\"icon || iconHref\" />\n    </svg>\n  </button>\n</template>\n\n<script>\nimport buttonMixin from './button-mixin';\nimport carbonPrefixMixin from '../../mixins/carbon-prefix-mixin';\n\nexport default {\n  name: 'CvIconButton',\n  mixins: [buttonMixin, carbonPrefixMixin],\n  props: {\n    label: { type: String, default: undefined },\n    tipPosition: {\n      type: String,\n      default: 'bottom',\n      validator: val => ['top', 'left', 'bottom', 'right'.includes(val)],\n    },\n    tipAlignment: { type: String, default: 'center', validator: val => ['start', 'center', 'end'].includes(val) },\n  },\n  computed: {\n    buttonClasses() {\n      return `${this.buttonClassOpts({ iconOnly: true })}${this.tipClasses}`;\n    },\n    tipClasses() {\n      const tipPosition = this.tipPosition || 'bottom';\n      const tipAlignment = this.tipAlignment || 'center';\n      if (this.label) {\n        return ` ${this.carbonPrefix}--tooltip__trigger ${this.carbonPrefix}--tooltip--a11y ${this.carbonPrefix}--tooltip--${tipPosition} ${this.carbonPrefix}--tooltip--align-${tipAlignment}`;\n      } else {\n        return '';\n      }\n    },\n  },\n};\n</script>\n"]}]}