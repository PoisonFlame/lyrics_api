{"remainingRequest":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-skeleton-text/cv-skeleton-text.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-skeleton-text/cv-skeleton-text.vue","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3ZTa2VsZXRvblRleHQnLAogIHByb3BzOiB7CiAgICB3aWR0aDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcxMDAlJyB9LAogICAgaGVhZGluZzogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgbGluZUNvdW50OiB7IHR5cGU6IE51bWJlciwgZGVmYXVsdDogMyB9LAogICAgcGFyYWdyYXBoOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRSYW5kb21JbnQ6IGZ1bmN0aW9uKG1pbiwgbWF4KSB7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluOwogICAgfSwKICAgIGNhbGNXaWR0aDogZnVuY3Rpb24oKSB7CiAgICAgIGxldCB3aWR0aCA9IHRoaXMud2lkdGg7CiAgICAgIGlmICh0aGlzLnBhcmFncmFwaCkgewogICAgICAgIGNvbnN0IHsgbnVtLCB1bml0IH0gPSB0aGlzLndpZHRoT2JqOwogICAgICAgIGlmICh1bml0ID09PSAnJScpIHsKICAgICAgICAgIGNvbnN0IHJhbmRvbVdpZHRoID0gdGhpcy5nZXRSYW5kb21JbnQoMCwgNzUpICsgJ3B4JzsKICAgICAgICAgIHdpZHRoID0gYGNhbGMoJHt3aWR0aH0gLSAke3JhbmRvbVdpZHRofSlgOwogICAgICAgIH0gZWxzZSBpZiAodW5pdCA9PT0gJ3B4JykgewogICAgICAgICAgd2lkdGggPSB0aGlzLmdldFJhbmRvbUludChudW0gLSA3NSwgbnVtKSArICdweCc7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiB3aWR0aDsKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgd2lkdGhPYmo6IGZ1bmN0aW9uKCkgewogICAgICBjb25zdCB3aWR0aE9iaiA9IHsgbnVtOiBwYXJzZUludCh0aGlzLndpZHRoLCAxMCkgfTsKICAgICAgaWYgKHRoaXMud2lkdGguaW5jbHVkZXMoJ3B4JykpIHsKICAgICAgICB3aWR0aE9iai51bml0ID0gJ3B4JzsKICAgICAgfQogICAgICBpZiAodGhpcy53aWR0aC5pbmNsdWRlcygnJScpKSB7CiAgICAgICAgd2lkdGhPYmoudW5pdCA9ICclJzsKICAgICAgfQogICAgICByZXR1cm4gd2lkdGhPYmo7CiAgICB9LAogICAgbGluZXM6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gQXJyYXkuZnJvbSgKICAgICAgICB7CiAgICAgICAgICBsZW5ndGg6IHRoaXMucGFyYWdyYXBoID8gdGhpcy5saW5lQ291bnQgOiAxLAogICAgICAgIH0sCiAgICAgICAgKCkgPT4gKHsKICAgICAgICAgIHdpZHRoOiB0aGlzLmNhbGNXaWR0aCgpLAogICAgICAgIH0pCiAgICAgICk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["cv-skeleton-text.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-skeleton-text.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-skeleton-text","sourcesContent":["<template>\n  <div :style=\"{ width: width }\">\n    <p\n      class=\"bx--skeleton__text\"\n      :class=\"{ 'bx--skeleton__heading': heading }\"\n      :style=\"{ width: line.width }\"\n      :key=\"index\"\n      v-for=\"(line, index) in lines\"\n    ></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CvSkeletonText',\n  props: {\n    width: { type: String, default: '100%' },\n    heading: { type: Boolean, default: false },\n    lineCount: { type: Number, default: 3 },\n    paragraph: { type: Boolean, default: false },\n  },\n  methods: {\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    calcWidth: function() {\n      let width = this.width;\n      if (this.paragraph) {\n        const { num, unit } = this.widthObj;\n        if (unit === '%') {\n          const randomWidth = this.getRandomInt(0, 75) + 'px';\n          width = `calc(${width} - ${randomWidth})`;\n        } else if (unit === 'px') {\n          width = this.getRandomInt(num - 75, num) + 'px';\n        }\n      }\n      return width;\n    },\n  },\n  computed: {\n    widthObj: function() {\n      const widthObj = { num: parseInt(this.width, 10) };\n      if (this.width.includes('px')) {\n        widthObj.unit = 'px';\n      }\n      if (this.width.includes('%')) {\n        widthObj.unit = '%';\n      }\n      return widthObj;\n    },\n    lines: function() {\n      return Array.from(\n        {\n          length: this.paragraph ? this.lineCount : 1,\n        },\n        () => ({\n          width: this.calcWidth(),\n        })\n      );\n    },\n  },\n};\n</script>\n"]}]}