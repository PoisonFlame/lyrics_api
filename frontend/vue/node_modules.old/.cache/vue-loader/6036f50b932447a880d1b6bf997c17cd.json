{"remainingRequest":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-file-uploader/cv-file-uploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-file-uploader/cv-file-uploader.vue","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1aWRNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvdWlkLW1peGluJzsKaW1wb3J0IEN2Rm9ybUl0ZW0gZnJvbSAnLi4vY3YtZm9ybS9jdi1mb3JtLWl0ZW0nOwppbXBvcnQgQ2hlY2ttYXJrRmlsbGVkMTYgZnJvbSAnQGNhcmJvbi9pY29ucy12dWUvZXMvY2hlY2ttYXJrLS1maWxsZWQvMTYnOwppbXBvcnQgV2FybmluZ0ZpbGxlZDE2IGZyb20gJ0BjYXJib24vaWNvbnMtdnVlL2VzL3dhcm5pbmctLWZpbGxlZC8xNic7CmltcG9ydCBDbG9zZTE2IGZyb20gJ0BjYXJib24vaWNvbnMtdnVlL2VzL2Nsb3NlLzE2JzsKaW1wb3J0IEN2V3JhcHBlciBmcm9tICcuLi9jdi13cmFwcGVyL19jdi13cmFwcGVyJzsKCmNvbnN0IENPTlNUUyA9IHsKICBTVEFURVM6IHsKICAgIE5PTkU6ICcnLAogICAgVVBMT0FESU5HOiAndXBsb2FkaW5nJywKICAgIENPTVBMRVRFOiAnY29tcGxldGUnLAogIH0sCn07CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0N2RmlsZVVwbG9hZGVyJywKICBjb21wb25lbnRzOiB7IEN2Rm9ybUl0ZW0sIENoZWNrbWFya0ZpbGxlZDE2LCBXYXJuaW5nRmlsbGVkMTYsIENsb3NlMTYsIEN2V3JhcHBlciB9LAogIG1peGluczogW3VpZE1peGluXSwKICBpbmhlcml0QXR0cnM6IGZhbHNlLAogIHByb3BzOiB7CiAgICBjbGVhck9uUmVzZWxlY3Q6IEJvb2xlYW4sCiAgICBmaWxlczogQXJyYXksCiAgICBsYWJlbDogU3RyaW5nLAogICAgaGVscGVyVGV4dDogU3RyaW5nLAogICAgaW5pdGlhbFN0YXRlVXBsb2FkaW5nOiBCb29sZWFuLAogICAgcmVtb3ZhYmxlOiBCb29sZWFuLAogICAgYnV0dG9uTGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiB1bmRlZmluZWQsCiAgICAgIHZhbGlkYXRvcjogdmFsID0+IHsKICAgICAgICBpZiAodmFsICE9PSB1bmRlZmluZWQgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHsKICAgICAgICAgIGNvbnNvbGUud2FybignQ3ZGaWxlVXBsb2FkZXI6IGJ1dHRvbi1sYWJlbCBwcm9wIGRlcHJlY2F0ZWQgaW4gZmF2b3VyIG9mIGRyb3AtdGFyZ2V0LWxhYmVsJyk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9LAogICAgfSwKICAgIGRyb3BUYXJnZXRMYWJlbDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6IHVuZGVmaW5lZCB9LAogICAgcmVtb3ZlQXJpYUxhYmVsOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ1JlbW92ZSBzZWxlY3RlZCBmaWxlJyB9LAogIH0sCiAgbW9kZWw6IHsKICAgIHByb3A6ICdmaWxlcycsCiAgICBldmVudDogJ2NoYW5nZScsCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5TVEFURVMgPSBPYmplY3QuZnJlZXplKENPTlNUUy5TVEFURVMpOwogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGludGVybmFsRmlsZXM6IFtdLAogICAgICBhbGxvd0Ryb3A6IGZhbHNlLAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmludGVybmFsRmlsZXMgPSB0aGlzLmZpbGVzID8gdGhpcy5maWxlcyA6IFtdOwogIH0sCiAgd2F0Y2g6IHsKICAgIGZpbGVzKCkgewogICAgICB0aGlzLmludGVybmFsRmlsZXMgPSB0aGlzLmZpbGVzID8gdGhpcy5maWxlcyA6IFtdOwogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyBCaW5kIGxpc3RlbmVycyBhdCB0aGUgY29tcG9uZW50IGxldmVsIHRvIHRoZSBlbWJlZGRlZCBpbnB1dCBlbGVtZW50IGFuZAogICAgLy8gYWRkIG91ciBvd24gaW5wdXQgbGlzdGVuZXIgdG8gc2VydmljZSB0aGUgdi1tb2RlbC4gU2VlOgogICAgLy8gaHR0cHM6Ly92dWVqcy5vcmcvdjIvZ3VpZGUvY29tcG9uZW50cy1jdXN0b20tZXZlbnRzLmh0bWwjQ3VzdG9taXppbmctQ29tcG9uZW50LXYtbW9kZWwKICAgIGlucHV0TGlzdGVuZXJzKCkgewogICAgICByZXR1cm4gewogICAgICAgIC4uLnRoaXMuJGxpc3RlbmVycywKICAgICAgICBjaGFuZ2U6IGV2ZW50ID0+IHRoaXMub25DaGFuZ2UoZXZlbnQpLAogICAgICB9OwogICAgfSwKICAgIGlzSW52YWxpZCgpIHsKICAgICAgcmV0dXJuIGluZGV4ID0+IHsKICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmludGVybmFsRmlsZXNbaW5kZXhdLmludmFsaWRNZXNzYWdlICYmIHRoaXMuaW50ZXJuYWxGaWxlc1tpbmRleF0uaW52YWxpZE1lc3NhZ2UubGVuZ3RoOwogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgIH07CiAgICB9LAogICAgaW50ZXJuYWxEcm9wVGFyZ2V0TGFiZWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmRyb3BUYXJnZXRMYWJlbCB8fCB0aGlzLmJ1dHRvbkxhYmVsIHx8ICdEcmFnIGFuZCBkcm9wIGZpbGVzIGhlcmUgb3IgdXBsb2FkJzsKICAgIH0sCiAgICBzdGF0ZVN0eWxlT3ZlcmlkZXMoKSB7CiAgICAgIC8vIDxzdHlsZSBjYXJib24gdHdlYWtzIC0gRE8gTk9UIFVTRSBTVFlMRSBUQUcgYXMgaXQgY2F1c2VzIFNTUiBpc3N1ZXMKICAgICAgcmV0dXJuIHsgZGlzcGxheTogJ2lubGluZS1mbGV4JywgYWxpZ25JdGVtczogJ2NlbnRlcicgfTsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICByZW1vdmUoaW5kZXgpIHsKICAgICAgdGhpcy5pbnRlcm5hbEZpbGVzLnNwbGljZShpbmRleCwgMSk7CiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHRoaXMuaW50ZXJuYWxGaWxlcyk7CiAgICB9LAogICAgYWRkRmlsZXMoZmlsZXMpIHsKICAgICAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICAgICAgdGhpcy5pbnRlcm5hbEZpbGVzLnB1c2goewogICAgICAgICAgc3RhdGU6IHRoaXMuaW5pdGlhbFN0YXRlVXBsb2FkaW5nID8gQ09OU1RTLlNUQVRFUy5VUExPQURJTkcgOiBDT05TVFMuU1RBVEVTLk5PTkUsCiAgICAgICAgICBmaWxlLAogICAgICAgICAgaW52YWxpZE1lc3NhZ2VUaXRsZTogJycsCiAgICAgICAgICBpbnZhbGlkTWVzc2FnZTogJycsCiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdGhpcy5pbnRlcm5hbEZpbGVzKTsKICAgIH0sCiAgICBvbkNoYW5nZShldikgewogICAgICBpZiAoZXYudGFyZ2V0LmZpbGVzLmxlbmd0aCAhPT0gMCAmJiB0aGlzLmNsZWFyT25SZXNlbGVjdCkgewogICAgICAgIHRoaXMuaW50ZXJuYWxGaWxlcyA9IFtdOwogICAgICB9CiAgICAgIHRoaXMuYWRkRmlsZXMoZXYudGFyZ2V0LmZpbGVzKTsKICAgIH0sCiAgICBvblNob3coKSB7CiAgICAgIHRoaXMuJHJlZnNbJ2ZpbGUtaW5wdXQnXS5jbGljaygpOwogICAgfSwKICAgIHNldFN0YXRlKGluZGV4LCBzdGF0ZSkgewogICAgICBpZiAoWyd1cGxvYWRpbmcnLCAnY29tcGxldGUnLCAnJ10uaW5jbHVkZXMoc3RhdGUpKSB7CiAgICAgICAgdGhpcy5pbnRlcm5hbEZpbGVzW2luZGV4XS5zdGF0ZSA9IHN0YXRlOwogICAgICB9CiAgICB9LAogICAgY2xlYXIoKSB7CiAgICAgIHRoaXMuaW50ZXJuYWxGaWxlcyA9IFtdOwogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB0aGlzLmludGVybmFsRmlsZXMpOwogICAgfSwKICAgIHNldEludmFsaWRNZXNzYWdlKGluZGV4LCBtZXNzYWdlKSB7CiAgICAgIHRoaXMuaW50ZXJuYWxGaWxlc1tpbmRleF0uaW52YWxpZE1lc3NhZ2UgPSBtZXNzYWdlOwogICAgfSwKICAgIG9uRHJhZ0V2ZW50KGV2dCkgewogICAgICAvLyBOT1RFOiBWYWxpZGF0aW9uIG9mIGRyYWdnZWQgZmlsZXMgaXMgbm90IGN1cnJlbnRseSBkb25lLgogICAgICAvLyBJdCBtYXkgYmUgcG9zc2libGUgdG8gZG8gdGhpcyBoZXJlIG9yIGRlZmVyIHRvIHRoZSBjYWxsZXIuCiAgICAgIC8vIEl0IGlzIGNlcnRhaW5seSBwb3NzaWJsZSBmb3IgdGhlIHVzZXIgdG8gcmVtb3ZlIGZpbGVzIGFmdGVyIHRoZXkgYXJlIGRyb3BwZWQuCgogICAgICBpZiAoQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbChldnQuZGF0YVRyYW5zZmVyLnR5cGVzLCAnRmlsZXMnKSA+PSAwKSB7CiAgICAgICAgaWYgKGV2dC50eXBlID09PSAnZHJhZ292ZXInKSB7CiAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICAgIGNvbnN0IGRyb3BFZmZlY3QgPSAnY29weSc7CiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShldnQuZGF0YVRyYW5zZmVyLnR5cGVzKSkgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIC8vIElFMTEgdGhyb3dzIGEgInBlcm1pc3Npb24gZGVuaWVkIiBlcnJvciBhY2Nlc3NpbmcgYC5lZmZlY3RBbGxvd2VkYAogICAgICAgICAgICAgIGV2dC5kYXRhVHJhbnNmZXIuZWZmZWN0QWxsb3dlZCA9IGRyb3BFZmZlY3Q7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAvLyBpZ25vcmUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgZXZ0LmRhdGFUcmFuc2Zlci5kcm9wRWZmZWN0ID0gZHJvcEVmZmVjdDsKICAgICAgICAgIHRoaXMuYWxsb3dEcm9wID0gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgaWYgKGV2dC50eXBlID09PSAnZHJhZ2xlYXZlJykgewogICAgICAgICAgdGhpcy5hbGxvd0Ryb3AgPSBmYWxzZTsKICAgICAgICB9CiAgICAgICAgaWYgKGV2dC50eXBlID09PSAnZHJvcCcpIHsKICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgdGhpcy5hZGRGaWxlcyhldnQuZGF0YVRyYW5zZmVyLmZpbGVzKTsKICAgICAgICAgIHRoaXMuYWxsb3dEcm9wID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["cv-file-uploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-file-uploader.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-file-uploader","sourcesContent":["<template>\n  <cv-form-item class=\"cv-file-uploader\">\n    <strong class=\"bx--file--label\">{{ label }}</strong>\n    <p class=\"bx--label-description\">{{ helperText }}</p>\n    <div class=\"bx--file\" data-file>\n      <label\n        :for=\"uid\"\n        class=\"bx--file-browse-btn\"\n        role=\"button\"\n        tabindex=\"0\"\n        @keydown.enter.prevent=\"onShow()\"\n        @keydown.space.prevent\n        @keyup.space.prevent=\"onShow()\"\n      >\n        <div\n          data-file-drop-container\n          class=\"bx--file__drop-container\"\n          :class=\"{ 'bx--file__drop-container--drag-over': allowDrop }\"\n          @dragover=\"onDragEvent\"\n          @dragleave=\"onDragEvent\"\n          @drop=\"onDragEvent\"\n        >\n          <slot name=\"drop-target\">{{ internalDropTargetLabel }}</slot>\n          <input\n            v-bind=\"$attrs\"\n            type=\"file\"\n            class=\"bx--file-input\"\n            :id=\"uid\"\n            data-file-uploader\n            data-target=\"[data-file-container]\"\n            v-on=\"inputListeners\"\n            ref=\"file-input\"\n          />\n        </div>\n      </label>\n\n      <div data-file-container class=\"bx--file-container\">\n        <div\n          v-for=\"(file, index) in internalFiles\"\n          :key=\"index\"\n          :class=\"isInvalid(index) ? 'bx--file__selected-file--invalid__wrapper' : 'bx--file__selected-file'\"\n        >\n          <cv-wrapper\n            :tag-type=\"isInvalid(index) ? 'div' : ''\"\n            class=\"bx--file__selected-file bx--file__selected-file--invalid\"\n          >\n            <p class=\"bx--file-filename\">{{ file.file.name }}</p>\n\n            <span :data-for=\"uid\" class=\"bx--file__state-container\" :data-test=\"file.state\" :style=\"stateStyleOverides\">\n              <div v-if=\"file.state === 'uploading'\" class=\"bx--inline-loading__animation\">\n                <div data-inline-loading-spinner class=\"bx--loading bx--loading--small\">\n                  <svg class=\"bx--loading__svg\" viewBox=\"-75 -75 150 150\">\n                    <circle class=\"bx--loading__background\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n                    <circle class=\"bx--loading__stroke\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n                  </svg>\n                </div>\n              </div>\n              <CheckmarkFilled16 v-if=\"file.state === 'complete'\" class=\"bx--file-complete\" />\n              <WarningFilled16 v-if=\"isInvalid(index)\" class=\"bx--file--invalid\" />\n              <button\n                type=\"button\"\n                class=\"bx--file-close\"\n                v-if=\"removable\"\n                :alt=\"removeAriaLabel\"\n                :arial-label=\"removeAriaLabel\"\n                @click=\"remove(index)\"\n              >\n                <Close16 />\n              </button>\n            </span>\n            <div v-if=\"isInvalid(index)\" class=\"bx--form-requirement\">\n              <div class=\"bx--form-requirement__title\">{{ file.invalidMessageTitle || 'Invalid file' }}</div>\n              <p class=\"bx--form-requirement__supplement\">{{ file.invalidMessage }}</p>\n            </div>\n          </cv-wrapper>\n        </div>\n      </div>\n    </div>\n  </cv-form-item>\n</template>\n\n<script>\nimport uidMixin from '../../mixins/uid-mixin';\nimport CvFormItem from '../cv-form/cv-form-item';\nimport CheckmarkFilled16 from '@carbon/icons-vue/es/checkmark--filled/16';\nimport WarningFilled16 from '@carbon/icons-vue/es/warning--filled/16';\nimport Close16 from '@carbon/icons-vue/es/close/16';\nimport CvWrapper from '../cv-wrapper/_cv-wrapper';\n\nconst CONSTS = {\n  STATES: {\n    NONE: '',\n    UPLOADING: 'uploading',\n    COMPLETE: 'complete',\n  },\n};\n\nexport default {\n  name: 'CvFileUploader',\n  components: { CvFormItem, CheckmarkFilled16, WarningFilled16, Close16, CvWrapper },\n  mixins: [uidMixin],\n  inheritAttrs: false,\n  props: {\n    clearOnReselect: Boolean,\n    files: Array,\n    label: String,\n    helperText: String,\n    initialStateUploading: Boolean,\n    removable: Boolean,\n    buttonLabel: {\n      type: String,\n      default: undefined,\n      validator: val => {\n        if (val !== undefined && process.env.NODE_ENV === 'development') {\n          console.warn('CvFileUploader: button-label prop deprecated in favour of drop-target-label');\n        }\n        return true;\n      },\n    },\n    dropTargetLabel: { type: String, default: undefined },\n    removeAriaLabel: { type: String, default: 'Remove selected file' },\n  },\n  model: {\n    prop: 'files',\n    event: 'change',\n  },\n  created() {\n    this.STATES = Object.freeze(CONSTS.STATES);\n  },\n  data() {\n    return {\n      internalFiles: [],\n      allowDrop: false,\n    };\n  },\n  mounted() {\n    this.internalFiles = this.files ? this.files : [];\n  },\n  watch: {\n    files() {\n      this.internalFiles = this.files ? this.files : [];\n    },\n  },\n  computed: {\n    // Bind listeners at the component level to the embedded input element and\n    // add our own input listener to service the v-model. See:\n    // https://vuejs.org/v2/guide/components-custom-events.html#Customizing-Component-v-model\n    inputListeners() {\n      return {\n        ...this.$listeners,\n        change: event => this.onChange(event),\n      };\n    },\n    isInvalid() {\n      return index => {\n        const result = this.internalFiles[index].invalidMessage && this.internalFiles[index].invalidMessage.length;\n        return result;\n      };\n    },\n    internalDropTargetLabel() {\n      return this.dropTargetLabel || this.buttonLabel || 'Drag and drop files here or upload';\n    },\n    stateStyleOverides() {\n      // <style carbon tweaks - DO NOT USE STYLE TAG as it causes SSR issues\n      return { display: 'inline-flex', alignItems: 'center' };\n    },\n  },\n  methods: {\n    remove(index) {\n      this.internalFiles.splice(index, 1);\n      this.$emit('change', this.internalFiles);\n    },\n    addFiles(files) {\n      for (const file of files) {\n        this.internalFiles.push({\n          state: this.initialStateUploading ? CONSTS.STATES.UPLOADING : CONSTS.STATES.NONE,\n          file,\n          invalidMessageTitle: '',\n          invalidMessage: '',\n        });\n      }\n      this.$emit('change', this.internalFiles);\n    },\n    onChange(ev) {\n      if (ev.target.files.length !== 0 && this.clearOnReselect) {\n        this.internalFiles = [];\n      }\n      this.addFiles(ev.target.files);\n    },\n    onShow() {\n      this.$refs['file-input'].click();\n    },\n    setState(index, state) {\n      if (['uploading', 'complete', ''].includes(state)) {\n        this.internalFiles[index].state = state;\n      }\n    },\n    clear() {\n      this.internalFiles = [];\n      this.$emit('change', this.internalFiles);\n    },\n    setInvalidMessage(index, message) {\n      this.internalFiles[index].invalidMessage = message;\n    },\n    onDragEvent(evt) {\n      // NOTE: Validation of dragged files is not currently done.\n      // It may be possible to do this here or defer to the caller.\n      // It is certainly possible for the user to remove files after they are dropped.\n\n      if (Array.prototype.indexOf.call(evt.dataTransfer.types, 'Files') >= 0) {\n        if (evt.type === 'dragover') {\n          evt.preventDefault();\n          const dropEffect = 'copy';\n          if (Array.isArray(evt.dataTransfer.types)) {\n            try {\n              // IE11 throws a \"permission denied\" error accessing `.effectAllowed`\n              evt.dataTransfer.effectAllowed = dropEffect;\n            } catch (e) {\n              // ignore\n            }\n          }\n          evt.dataTransfer.dropEffect = dropEffect;\n          this.allowDrop = true;\n        }\n        if (evt.type === 'dragleave') {\n          this.allowDrop = false;\n        }\n        if (evt.type === 'drop') {\n          evt.preventDefault();\n          this.addFiles(evt.dataTransfer.files);\n          this.allowDrop = false;\n        }\n      }\n    },\n  },\n};\n</script>\n"]}]}