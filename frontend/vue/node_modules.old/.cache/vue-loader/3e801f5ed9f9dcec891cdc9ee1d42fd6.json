{"remainingRequest":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-time-picker/cv-time-picker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-time-picker/cv-time-picker.vue","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB1aWRNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvdWlkLW1peGluJzsKaW1wb3J0IHRoZW1lTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL3RoZW1lLW1peGluJzsKaW1wb3J0IEN2U2VsZWN0IGZyb20gJy4uL2N2LXNlbGVjdC9jdi1zZWxlY3QnOwppbXBvcnQgQ3ZTZWxlY3RPcHRpb24gZnJvbSAnLi4vY3Ytc2VsZWN0L2N2LXNlbGVjdC1vcHRpb24nOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDdlRpbWVQaWNrZXInLAogIGNvbXBvbmVudHM6IHsKICAgIEN2U2VsZWN0LAogICAgQ3ZTZWxlY3RPcHRpb24sCiAgfSwKICBtaXhpbnM6IFt1aWRNaXhpbiwgdGhlbWVNaXhpbl0sCiAgaW5oZXJpdEF0dHJzOiBmYWxzZSwKICBwcm9wczogewogICAgYW1wbTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdBTScsCiAgICB9LAogICAgYW1wbVNlbGVjdExhYmVsOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ1NlbGVjdCBBTS9QTScgfSwKICAgIGRpc2FibGVkOiBCb29sZWFuLAogICAgaW52YWxpZE1lc3NhZ2U6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiB1bmRlZmluZWQgfSwKICAgIGxhYmVsOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ1NlbGVjdCBhIHRpbWUnIH0sCiAgICBwYXR0ZXJuOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJyhbMDFdWzAtOV06WzAtNl1bMC05XSknIH0sCiAgICBwbGFjZWhvbGRlcjogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdoaDptbScgfSwKICAgIHRpbWU6IFN0cmluZywKICAgIHRpbWV6b25lOiBTdHJpbmcsCiAgICB0aW1lem9uZXM6IHsgdHlwZTogQXJyYXksIGRlZmF1bHQ6ICgpID0+IFtdIH0sCiAgICB0aW1lem9uZXNTZWxlY3RMYWJlbDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdTZWxlY3QgdGltZSB6b25lJyB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzSW52YWxpZDogZmFsc2UsCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuY2hlY2tTbG90cygpOwogIH0sCiAgYmVmb3JlVXBkYXRlKCkgewogICAgdGhpcy5jaGVja1Nsb3RzKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgdmFsaWRBbXBtKCkgewogICAgICBsZXQgcmVzdWx0ID0gdGhpcy5hbXBtOwogICAgICBpZiAoIVsnQU0nLCAnUE0nXS5pbmNsdWRlcyh0aGlzLmFtcG0pKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihgQ3ZUaW1lUGlja2VyOiBpbnZhbGlkIHZhbHVlICcke3RoaXMuYW1wbX0nIHN1cHBsaWVkIGZvciBwcm9wIGFtcG0uIERlZmF1bHQgYXBwbGllZC5gKTsKICAgICAgICAvLyBzZXQgdG8gdmFsaWQgdmFsdWUKICAgICAgICByZXN1bHQgPSB0aGlzLmFtcG1bMF0udmFsdWU7CiAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmFtcG0nLCByZXN1bHQpOwogICAgICB9CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9LAogICAgdmFsaWRUaW1lem9uZSgpIHsKICAgICAgLy8gVmFsaWRhdGUgdGltZXpvbmUgc2V0dGluZwogICAgICBsZXQgcmVzdWx0ID0gdGhpcy50aW1lem9uZTsKICAgICAgaWYgKHRoaXMudGltZXpvbmVzICYmIHRoaXMudGltZXpvbmVzLmxlbmd0aCkgewogICAgICAgIGlmICghdGhpcy50aW1lem9uZXMuZmluZChpdGVtID0+IGl0ZW0udmFsdWUgPT09IHRoaXMudGltZXpvbmUpKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKGBDdlRpbWVQaWNrZXI6IGludmFsaWQgdmFsdWUgJyR7dGhpcy50aW1lem9uZX0nIHN1cHBsaWVkIGZvciBwcm9wIHRpbWV6b25lLiBEZWZhdWx0IGFwcGxpZWQuYCk7CiAgICAgICAgICAvLyBzZXQgdG8gZmlyc3QgdmFsaWQgdmFsdWUKICAgICAgICAgIHJlc3VsdCA9IHRoaXMudGltZXpvbmVzWzBdLnZhbHVlOwogICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnRpbWV6b25lJywgcmVzdWx0KTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja1Nsb3RzKCkgewogICAgICAvLyBOT1RFOiB0aGlzLiRzbG90cyBpcyBub3QgcmVhY3RpdmUgc28gbmVlZHMgdG8gYmUgbWFuYWdlZCBvbiBiZWZvcmVVcGRhdGUKICAgICAgdGhpcy5pc0ludmFsaWQgPSAhISh0aGlzLiRzbG90c1snaW52YWxpZC1tZXNzYWdlJ10gfHwgKHRoaXMuaW52YWxpZE1lc3NhZ2UgJiYgdGhpcy5pbnZhbGlkTWVzc2FnZS5sZW5ndGgpKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["cv-time-picker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cv-time-picker.vue","sourceRoot":"node_modules/@carbon/vue/src/components/cv-time-picker","sourcesContent":["<template>\n  <div class=\"cv-time-picker bx--form-item\">\n    <div class=\"bx--time-picker\" :class=\"{ 'bx--time-picker--light': theme === 'light' }\" :data-invalid=\"isInvalid\">\n      <div class=\"bx--time-picker__input\">\n        <label :for=\"uid\" class=\"bx--label\">{{ label }}</label>\n        <input\n          :id=\"uid\"\n          type=\"text\"\n          class=\"bx--time-picker__input-field\"\n          :pattern=\"pattern\"\n          v-bind=\"$attrs\"\n          :placeholder=\"placeholder\"\n          :maxlength=\"placeholder.length\"\n          :value=\"time\"\n          :disabled=\"disabled\"\n          @input=\"$emit('update:time', $event.target.value)\"\n        />\n      </div>\n      <cv-select\n        class=\"bx--time-picker__select\"\n        :form-item=\"false\"\n        hide-label\n        :label=\"ampmSelectLabel\"\n        @change=\"$emit('update:ampm', $event)\"\n        :value=\"ampm\"\n        :disabled=\"disabled\"\n      >\n        <cv-select-option class=\"bx--select-option\" value=\"AM\">AM</cv-select-option>\n        <cv-select-option class=\"bx--select-option\" value=\"PM\">PM</cv-select-option>\n      </cv-select>\n\n      <cv-select\n        class=\"bx--time-picker__select\"\n        :form-item=\"false\"\n        hide-label\n        :label=\"timezonesSelectLabel\"\n        v-if=\"timezones.length > 0\"\n        :value=\"validTimezone\"\n        @change=\"$emit('update:timezone', $event)\"\n        :disabled=\"disabled\"\n      >\n        <cv-select-option class=\"bx--select-option\" v-for=\"item in timezones\" :key=\"item.value\" :value=\"item.value\">{{\n          item.label\n        }}</cv-select-option>\n      </cv-select>\n    </div>\n    <div class=\"bx--form-requirement\" v-if=\"isInvalid\">\n      <slot name=\"invalid-message\">{{ invalidMessage }}</slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport uidMixin from '../../mixins/uid-mixin';\nimport themeMixin from '../../mixins/theme-mixin';\nimport CvSelect from '../cv-select/cv-select';\nimport CvSelectOption from '../cv-select/cv-select-option';\n\nexport default {\n  name: 'CvTimePicker',\n  components: {\n    CvSelect,\n    CvSelectOption,\n  },\n  mixins: [uidMixin, themeMixin],\n  inheritAttrs: false,\n  props: {\n    ampm: {\n      type: String,\n      default: 'AM',\n    },\n    ampmSelectLabel: { type: String, default: 'Select AM/PM' },\n    disabled: Boolean,\n    invalidMessage: { type: String, default: undefined },\n    label: { type: String, default: 'Select a time' },\n    pattern: { type: String, default: '([01][0-9]:[0-6][0-9])' },\n    placeholder: { type: String, default: 'hh:mm' },\n    time: String,\n    timezone: String,\n    timezones: { type: Array, default: () => [] },\n    timezonesSelectLabel: { type: String, default: 'Select time zone' },\n  },\n  data() {\n    return {\n      isInvalid: false,\n    };\n  },\n  mounted() {\n    this.checkSlots();\n  },\n  beforeUpdate() {\n    this.checkSlots();\n  },\n  computed: {\n    validAmpm() {\n      let result = this.ampm;\n      if (!['AM', 'PM'].includes(this.ampm)) {\n        console.error(`CvTimePicker: invalid value '${this.ampm}' supplied for prop ampm. Default applied.`);\n        // set to valid value\n        result = this.ampm[0].value;\n        this.$emit('update:ampm', result);\n      }\n      return result;\n    },\n    validTimezone() {\n      // Validate timezone setting\n      let result = this.timezone;\n      if (this.timezones && this.timezones.length) {\n        if (!this.timezones.find(item => item.value === this.timezone)) {\n          console.error(`CvTimePicker: invalid value '${this.timezone}' supplied for prop timezone. Default applied.`);\n          // set to first valid value\n          result = this.timezones[0].value;\n          this.$emit('update:timezone', result);\n        }\n      }\n      return result;\n    },\n  },\n  methods: {\n    checkSlots() {\n      // NOTE: this.$slots is not reactive so needs to be managed on beforeUpdate\n      this.isInvalid = !!(this.$slots['invalid-message'] || (this.invalidMessage && this.invalidMessage.length));\n    },\n  },\n};\n</script>\n"]}]}