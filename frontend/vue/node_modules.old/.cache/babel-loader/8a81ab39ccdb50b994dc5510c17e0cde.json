{"remainingRequest":"/home/robby/docker/lyrics_api/app/node_modules/babel-loader/lib/index.js!/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-skeleton-text/cv-skeleton-text.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/robby/docker/lyrics_api/app/node_modules/@carbon/vue/src/components/cv-skeleton-text/cv-skeleton-text.vue","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robby/docker/lyrics_api/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDdlNrZWxldG9uVGV4dCcsCiAgcHJvcHM6IHsKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJzEwMCUnCiAgICB9LAogICAgaGVhZGluZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGxpbmVDb3VudDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDMKICAgIH0sCiAgICBwYXJhZ3JhcGg6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFJhbmRvbUludDogZnVuY3Rpb24gZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluOwogICAgfSwKICAgIGNhbGNXaWR0aDogZnVuY3Rpb24gY2FsY1dpZHRoKCkgewogICAgICB2YXIgd2lkdGggPSB0aGlzLndpZHRoOwoKICAgICAgaWYgKHRoaXMucGFyYWdyYXBoKSB7CiAgICAgICAgdmFyIF90aGlzJHdpZHRoT2JqID0gdGhpcy53aWR0aE9iaiwKICAgICAgICAgICAgbnVtID0gX3RoaXMkd2lkdGhPYmoubnVtLAogICAgICAgICAgICB1bml0ID0gX3RoaXMkd2lkdGhPYmoudW5pdDsKCiAgICAgICAgaWYgKHVuaXQgPT09ICclJykgewogICAgICAgICAgdmFyIHJhbmRvbVdpZHRoID0gdGhpcy5nZXRSYW5kb21JbnQoMCwgNzUpICsgJ3B4JzsKICAgICAgICAgIHdpZHRoID0gImNhbGMoIi5jb25jYXQod2lkdGgsICIgLSAiKS5jb25jYXQocmFuZG9tV2lkdGgsICIpIik7CiAgICAgICAgfSBlbHNlIGlmICh1bml0ID09PSAncHgnKSB7CiAgICAgICAgICB3aWR0aCA9IHRoaXMuZ2V0UmFuZG9tSW50KG51bSAtIDc1LCBudW0pICsgJ3B4JzsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB3aWR0aDsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB3aWR0aE9iajogZnVuY3Rpb24gd2lkdGhPYmooKSB7CiAgICAgIHZhciB3aWR0aE9iaiA9IHsKICAgICAgICBudW06IHBhcnNlSW50KHRoaXMud2lkdGgsIDEwKQogICAgICB9OwoKICAgICAgaWYgKHRoaXMud2lkdGguaW5jbHVkZXMoJ3B4JykpIHsKICAgICAgICB3aWR0aE9iai51bml0ID0gJ3B4JzsKICAgICAgfQoKICAgICAgaWYgKHRoaXMud2lkdGguaW5jbHVkZXMoJyUnKSkgewogICAgICAgIHdpZHRoT2JqLnVuaXQgPSAnJSc7CiAgICAgIH0KCiAgICAgIHJldHVybiB3aWR0aE9iajsKICAgIH0sCiAgICBsaW5lczogZnVuY3Rpb24gbGluZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gQXJyYXkuZnJvbSh7CiAgICAgICAgbGVuZ3RoOiB0aGlzLnBhcmFncmFwaCA/IHRoaXMubGluZUNvdW50IDogMQogICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHdpZHRoOiBfdGhpcy5jYWxjV2lkdGgoKQogICAgICAgIH07CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["cv-skeleton-text.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAaA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA;AAEA,IAAA,OAAA,EAAA;AAAA,MAAA,IAAA,EAAA,OAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAFA;AAGA,IAAA,SAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAHA;AAIA,IAAA,SAAA,EAAA;AAAA,MAAA,IAAA,EAAA,OAAA;AAAA,MAAA,OAAA,EAAA;AAAA;AAJA,GAFA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,YAAA,EAAA,sBAAA,GAAA,EAAA,GAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,GAAA,GAAA,GAAA,GAAA,CAAA,CAAA,IAAA,GAAA;AACA,KAHA;AAIA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA;;AACA,UAAA,KAAA,SAAA,EAAA;AAAA,6BACA,KAAA,QADA;AAAA,YACA,GADA,kBACA,GADA;AAAA,YACA,IADA,kBACA,IADA;;AAEA,YAAA,IAAA,KAAA,GAAA,EAAA;AACA,cAAA,WAAA,GAAA,KAAA,YAAA,CAAA,CAAA,EAAA,EAAA,IAAA,IAAA;AACA,UAAA,KAAA,kBAAA,KAAA,gBAAA,WAAA,MAAA;AACA,SAHA,MAGA,IAAA,IAAA,KAAA,IAAA,EAAA;AACA,UAAA,KAAA,GAAA,KAAA,YAAA,CAAA,GAAA,GAAA,EAAA,EAAA,GAAA,IAAA,IAAA;AACA;AACA;;AACA,aAAA,KAAA;AACA;AAhBA,GARA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AACA,UAAA,QAAA,GAAA;AAAA,QAAA,GAAA,EAAA,QAAA,CAAA,KAAA,KAAA,EAAA,EAAA;AAAA,OAAA;;AACA,UAAA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,GAAA,IAAA;AACA;;AACA,UAAA,KAAA,KAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,GAAA,GAAA;AACA;;AACA,aAAA,QAAA;AACA,KAVA;AAWA,IAAA,KAAA,EAAA,iBAAA;AAAA;;AACA,aAAA,KAAA,CAAA,IAAA,CACA;AACA,QAAA,MAAA,EAAA,KAAA,SAAA,GAAA,KAAA,SAAA,GAAA;AADA,OADA,EAIA;AAAA,eAAA;AACA,UAAA,KAAA,EAAA,KAAA,CAAA,SAAA;AADA,SAAA;AAAA,OAJA,CAAA;AAQA;AApBA;AA1BA,CAAA","sourcesContent":["<template>\n  <div :style=\"{ width: width }\">\n    <p\n      class=\"bx--skeleton__text\"\n      :class=\"{ 'bx--skeleton__heading': heading }\"\n      :style=\"{ width: line.width }\"\n      :key=\"index\"\n      v-for=\"(line, index) in lines\"\n    ></p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CvSkeletonText',\n  props: {\n    width: { type: String, default: '100%' },\n    heading: { type: Boolean, default: false },\n    lineCount: { type: Number, default: 3 },\n    paragraph: { type: Boolean, default: false },\n  },\n  methods: {\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    calcWidth: function() {\n      let width = this.width;\n      if (this.paragraph) {\n        const { num, unit } = this.widthObj;\n        if (unit === '%') {\n          const randomWidth = this.getRandomInt(0, 75) + 'px';\n          width = `calc(${width} - ${randomWidth})`;\n        } else if (unit === 'px') {\n          width = this.getRandomInt(num - 75, num) + 'px';\n        }\n      }\n      return width;\n    },\n  },\n  computed: {\n    widthObj: function() {\n      const widthObj = { num: parseInt(this.width, 10) };\n      if (this.width.includes('px')) {\n        widthObj.unit = 'px';\n      }\n      if (this.width.includes('%')) {\n        widthObj.unit = '%';\n      }\n      return widthObj;\n    },\n    lines: function() {\n      return Array.from(\n        {\n          length: this.paragraph ? this.lineCount : 1,\n        },\n        () => ({\n          width: this.calcWidth(),\n        })\n      );\n    },\n  },\n};\n</script>\n"],"sourceRoot":"node_modules/@carbon/vue/src/components/cv-skeleton-text"}]}